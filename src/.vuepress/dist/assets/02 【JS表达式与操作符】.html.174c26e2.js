const e=JSON.parse('{"key":"v-1d8cc21c","path":"/web/javascript/02%20%E3%80%90JS%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8E%E6%93%8D%E4%BD%9C%E7%AC%A6%E3%80%91.html","title":"02 【JS表达式与操作符】","lang":"zh-CN","frontmatter":{"title":"02 【JS表达式与操作符】","icon":"javascript","category":["javascript"],"tag":["javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"什么是表达式和运算符？ 表达式：由 操作数 和 运算符 组成的式子。 表达式的分类：算术、关系、逻辑、赋值、综合。 1.算术表达式 1.1 算术运算符 意义 运算符 ---- ------ 加 + 减 - 乘 * 除 / 取余 % | 推荐一律使用 () 来强制规定优先级！ + 有 “加法” 和 “连字符” 两种作用，如果 + 的某一边是字符串那么就为...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/javascript/02%20%E3%80%90JS%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8E%E6%93%8D%E4%BD%9C%E7%AC%A6%E3%80%91.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"02 【JS表达式与操作符】"}],["meta",{"property":"og:description","content":"什么是表达式和运算符？ 表达式：由 操作数 和 运算符 组成的式子。 表达式的分类：算术、关系、逻辑、赋值、综合。 1.算术表达式 1.1 算术运算符 意义 运算符 ---- ------ 加 + 减 - 乘 * 除 / 取余 % | 推荐一律使用 () 来强制规定优先级！ + 有 “加法” 和 “连字符” 两种作用，如果 + 的某一边是字符串那么就为..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"1.算术表达式","slug":"_1-算术表达式","link":"#_1-算术表达式","children":[{"level":3,"title":"1.1 算术运算符","slug":"_1-1-算术运算符","link":"#_1-1-算术运算符","children":[]},{"level":3,"title":"1.2 隐式类型转换","slug":"_1-2-隐式类型转换","link":"#_1-2-隐式类型转换","children":[]},{"level":3,"title":"1.3 有关IEEE754","slug":"_1-3-有关ieee754","link":"#_1-3-有关ieee754","children":[]},{"level":3,"title":"1.4 幂和开根号","slug":"_1-4-幂和开根号","link":"#_1-4-幂和开根号","children":[]},{"level":3,"title":"1.5 向上取整和向下取整","slug":"_1-5-向上取整和向下取整","link":"#_1-5-向上取整和向下取整","children":[]}]},{"level":2,"title":"2系表达式","slug":"_2系表达式","link":"#_2系表达式","children":[{"level":3,"title":"2.1 关系运算符","slug":"_2-1-关系运算符","link":"#_2-1-关系运算符","children":[]},{"level":3,"title":"2.2 相等和全等","slug":"_2-2-相等和全等","link":"#_2-2-相等和全等","children":[]},{"level":3,"title":"2.3 NaN不自等","slug":"_2-3-nan不自等","link":"#_2-3-nan不自等","children":[]},{"level":3,"title":"2.4 JS中没有连比","slug":"_2-4-js中没有连比","link":"#_2-4-js中没有连比","children":[]}]},{"level":2,"title":"3.逻辑表达式","slug":"_3-逻辑表达式","link":"#_3-逻辑表达式","children":[{"level":3,"title":"3.1 逻辑运算符","slug":"_3-1-逻辑运算符","link":"#_3-1-逻辑运算符","children":[]},{"level":3,"title":"3.2 非运算","slug":"_3-2-非运算","link":"#_3-2-非运算","children":[]},{"level":3,"title":"3.3 与运算","slug":"_3-3-与运算","link":"#_3-3-与运算","children":[]},{"level":3,"title":"3.4 或运算","slug":"_3-4-或运算","link":"#_3-4-或运算","children":[]},{"level":3,"title":"3.5 短路运算","slug":"_3-5-短路运算","link":"#_3-5-短路运算","children":[]},{"level":3,"title":"3.6 逻辑运算的优先级","slug":"_3-6-逻辑运算的优先级","link":"#_3-6-逻辑运算的优先级","children":[]}]},{"level":2,"title":"4.赋值表达式","slug":"_4-赋值表达式","link":"#_4-赋值表达式","children":[{"level":3,"title":"4.1 赋值运算符","slug":"_4-1-赋值运算符","link":"#_4-1-赋值运算符","children":[]},{"level":3,"title":"4.2 赋值运算产生值","slug":"_4-2-赋值运算产生值","link":"#_4-2-赋值运算产生值","children":[]},{"level":3,"title":"4.3 自增自减运算","slug":"_4-3-自增自减运算","link":"#_4-3-自增自减运算","children":[]}]},{"level":2,"title":"5.三元运算符","slug":"_5-三元运算符","link":"#_5-三元运算符","children":[]},{"level":2,"title":"6.综合运算的运算顺序","slug":"_6-综合运算的运算顺序","link":"#_6-综合运算的运算顺序","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":7.03,"words":2109},"filePathRelative":"web/javascript/02 【JS表达式与操作符】.md","localizedDate":"2023年5月31日"}');export{e as data};
