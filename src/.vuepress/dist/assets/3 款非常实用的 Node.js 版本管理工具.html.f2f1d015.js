import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as i,d as n,e as s,b as e,a as t,r as c}from"./app.9b10ba0a.js";const p="/assets/50071740d0e989110ae59f807b662fd0.7c75eacb.png",r="/assets/41fe2a9d384c07c35a459372803c36af.6d7c99d9.png",d="/assets/1c2c985f5cd513932551aa3f38d7a574.05100399.gif",u="/assets/af48ab79872c9db4fecf1aca4867d7be.264f07ac.png",m={},v=n("p",null,"Node.js 版本分为 LTS 和 Current 系列，当我们需要在本地开发环境同时安装 LTS 版本和 Current 版本时，就需要对 Node.js 版本进行版本管理。",-1),h=n("p",null,"比如本地需要同时安装 Node.js 8.0.0 和 Node.js 17.0.0。",-1),b=n("p",null,"为了能够对 Node.js 版本进行版本管理，我整理了 3 款非常实用的 Node.js 版本管理工具，让大家能够自由的切换本地环境不同的 Node.js 版本。",-1),k=n("h2",{id:"_1-nvm",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-nvm","aria-hidden":"true"},"#"),s(" 1.nvm")],-1),_=n("p",null,"⭐ Github stars: 60K+",-1),f=n("p",null,"nvm 是一款 Node.js 版本管理工具，允许用户通过命令行快速安装、切换和管理不同的 Node.js 版本。",-1),g=n("p",null,[n("img",{src:p,alt:"img"})],-1),N={href:"https://so.csdn.net/so/search?q=macOS&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/coreybutler/nvm-windows",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/marcelklehr/nodist",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/jasongin/nvs",target:"_blank",rel:"noopener noreferrer"},S=t(`<h3 id="安装方式" tabindex="-1"><a class="header-anchor" href="#安装方式" aria-hidden="true">#</a> 安装方式</h3><p>macOS 下载方式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 方式1 浏览器打开下面链接下载</span>
https://github.com/nvm-sh/nvm/blob/v0.39.1/install.sh
<span class="token comment"># 下载完成后，通过命令安装</span>
<span class="token function">sh</span> install.sh

<span class="token comment"># 方式2 推荐</span>
<span class="token function">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh <span class="token operator">|</span> <span class="token function">bash</span>

<span class="token comment"># 方式3</span>
<span class="token function">wget</span> -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh <span class="token operator">|</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),L={href:"https://github.com/nvm-sh/nvm#additional-notes",target:"_blank",rel:"noopener noreferrer"},O=t(`<h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm <span class="token function">ls</span>                <span class="token comment"># 查看版本安装所有版本</span>
nvm ls-remote         <span class="token comment"># 查看远程所有的 Node.js 版本</span>
nvm <span class="token function">install</span> <span class="token number">17.0</span>.0    <span class="token comment"># 安装指定的 Node.js 版本</span>
nvm use <span class="token number">17.0</span>.0        <span class="token comment"># 使用指定的 Node.js 版本</span>
nvm <span class="token builtin class-name">alias</span> default <span class="token number">17.0</span>.0  <span class="token comment"># 设置默认 Node.js 版本</span>
nvm <span class="token builtin class-name">alias</span> dev <span class="token number">17.0</span>.0  <span class="token comment"># 设置指定版本的别名，如将 17.0.0 版本别名设置为 dev</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+'" alt="img"></p><h2 id="_2-n" tabindex="-1"><a class="header-anchor" href="#_2-n" aria-hidden="true">#</a> 2.n</h2><p>⭐ <em>Github stars: 16.7K+</em></p>',5),y={href:"https://github.com/tj/n",target:"_blank",rel:"noopener noreferrer"},I=t('<p><img src="'+d+`" alt="img"></p><p>n 只适用于 macOS 和 Linux ，不适用于 Windows。</p><h3 id="安装方式-1" tabindex="-1"><a class="header-anchor" href="#安装方式-1" aria-hidden="true">#</a> 安装方式</h3><p>可以使用 npm 直接安装到全局：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> n <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="常用命令-1" tabindex="-1"><a class="header-anchor" href="#常用命令-1" aria-hidden="true">#</a> 常用命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>n          <span class="token comment"># 显示所有已下载版本</span>
n <span class="token number">10.16</span>.0  <span class="token comment"># 下载指定版本</span>
n lts      <span class="token comment"># 查看远程所有 LTS Node.js 版本</span>
n run <span class="token number">10.16</span>.0 <span class="token comment"># 运行指定的 Node.js 版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入 <code>n -h</code>查看帮助信息，主要命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  n                              Display downloaded Node.js versions and <span class="token function">install</span> selection
  n latest                       Install the latest Node.js release <span class="token punctuation">(</span>downloading <span class="token keyword">if</span> necessary<span class="token punctuation">)</span>
  n lts                          Install the latest LTS Node.js release <span class="token punctuation">(</span>downloading <span class="token keyword">if</span> necessary<span class="token punctuation">)</span>
  n <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>                    Install Node.js <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token punctuation">(</span>downloading <span class="token keyword">if</span> necessary<span class="token punctuation">)</span>
  n <span class="token function">install</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>            Install Node.js <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token punctuation">(</span>downloading <span class="token keyword">if</span> necessary<span class="token punctuation">)</span>
  n run <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token punctuation">[</span>args <span class="token punctuation">..</span>.<span class="token punctuation">]</span>     Execute downloaded Node.js <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> with <span class="token punctuation">[</span>args <span class="token punctuation">..</span>.<span class="token punctuation">]</span>
  n <span class="token function">which</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>              Output path <span class="token keyword">for</span> downloaded <span class="token function">node</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
  n <span class="token builtin class-name">exec</span> <span class="token operator">&lt;</span>vers<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>cmd<span class="token operator">&gt;</span> <span class="token punctuation">[</span>args<span class="token punctuation">..</span>.<span class="token punctuation">]</span>  Execute <span class="token builtin class-name">command</span> with modified <span class="token environment constant">PATH</span>, so downloaded <span class="token function">node</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> and <span class="token function">npm</span> first
  n <span class="token function">rm</span> <span class="token operator">&lt;</span>version <span class="token punctuation">..</span>.<span class="token operator">&gt;</span>             Remove the given downloaded version<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
  n prune                        Remove all downloaded versions except the installed version
  n <span class="token parameter variable">--latest</span>                     Output the latest Node.js version available
  n <span class="token parameter variable">--lts</span>                        Output the latest LTS Node.js version available
  n <span class="token function">ls</span>                           Output downloaded versions
  n ls-remote <span class="token punctuation">[</span>version<span class="token punctuation">]</span>          Output matching versions available <span class="token keyword">for</span> download
  n uninstall                    Remove the installed Node.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-fnm" tabindex="-1"><a class="header-anchor" href="#_3-fnm" aria-hidden="true">#</a> 3. fnm</h2><p>⭐ <em>Github stars: 8.4K+</em></p>`,11),T={href:"https://github.com/Schniz/fnm",target:"_blank",rel:"noopener noreferrer"},E={href:"https://so.csdn.net/so/search?q=Rust&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},R=t('<p><img src="'+u+`" alt="img"></p><p>主要特点包括：</p><ul><li>🌎 跨平台支持，包括：macOS、Windows、Linux；</li><li>✨ 单一文件，轻松安装，即时启动 ；</li><li>🚀 以速度为设计理念；</li><li>📂 适用于 <code>.node-version</code> 和 <code>.nvmrc</code> 文件；</li></ul><h3 id="安装方式-2" tabindex="-1"><a class="header-anchor" href="#安装方式-2" aria-hidden="true">#</a> 安装方式</h3><p>macOS / Linux 环境：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># bash, zsh and fish shells</span>
<span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://fnm.vercel.app/install <span class="token operator">|</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Windows 环境：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 管理员模式打开终端，安装后只能使用管理员模式打开使用</span>

choco <span class="token function">install</span> fnm

<span class="token comment"># 安装完成还需要手动设置环境变量</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),W={href:"https://github.com/Schniz/fnm/releases",target:"_blank",rel:"noopener noreferrer"},z=t(`<h3 id="常用命令-2" tabindex="-1"><a class="header-anchor" href="#常用命令-2" aria-hidden="true">#</a> 常用命令</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>fnm <span class="token parameter variable">-h</span>             <span class="token comment"># 查看帮助</span>
fnm <span class="token function">install</span> <span class="token number">17.0</span>.0 <span class="token comment"># 安装指定 Node.js 版本</span>
fnm use <span class="token number">17.0</span>.0     <span class="token comment"># 使用指定 Node.js 版本</span>
fnm default <span class="token number">17.0</span>.0 <span class="token comment"># 设置默认 Node.js 版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function V(q,B){const a=c("ExternalLinkIcon");return l(),i("div",null,[v,h,b,k,_,f,g,n("p",null,[s("nvm 只适用于 "),n("a",N,[s("macOS"),e(a)]),s(" 和 Linux 用户的项目，如果是 Windows 用户，可以使用 "),n("a",j,[s("nvm-windows"),e(a)]),s(" 、"),n("a",w,[s("nodist"),e(a)]),s(" 或 "),n("a",x,[s("nvs"),e(a)]),s(" 替换。")]),S,n("p",null,[s("安装过程中如果遇到一些奇怪的问题，可以查看下 "),n("a",L,[s("nvm 补充说明"),e(a)]),s("。")]),O,n("p",null,[n("a",y,[s("n"),e(a)]),s(" 是一款交互式的 Node.js 版本管理工具，没有子脚本，没有配置文件，也没有复杂的 API，使用起来非常简单。")]),I,n("p",null,[n("a",T,[s("fnm "),e(a)]),s("是一款快速简单 🚀 的 Node.js 版本管理器，使用 "),n("a",E,[s("Rust"),e(a)]),s(" 构建。")]),R,n("p",null,[s("Linux/macOS/Windows 环境也可以直接下载二进制文件安装，下载地址："),n("a",W,[s("https://github.com/Schniz/fnm/releases"),e(a)])]),z])}const K=o(m,[["render",V],["__file","3 款非常实用的 Node.js 版本管理工具.html.vue"]]);export{K as default};
