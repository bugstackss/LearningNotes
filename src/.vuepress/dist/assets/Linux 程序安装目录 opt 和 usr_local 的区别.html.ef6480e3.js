import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as i,a as r}from"./app.9b10ba0a.js";const a={},e=r('<h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h2><ul><li>/usr：系统级的目录，可以理解为C:/Windows/，</li><li>/usr/lib理解为C:/Windows/System32。这文件下放置的是动态库，通常运行软件的时候提示.dll缺失，就去百度下一个放到这里</li><li>/usr/local：用户级的程序目录，可以理解为C:/Progrem Files/。用户自己编译的软件默认会安装到这个目录下。</li><li>/opt：用户级的程序目录，可以理解为D:/Software，opt有可选的意思，这里可以用于放置第三方大型软件（或游戏），当你不需要时，直接rm -rf掉即可。在硬盘容量不够时，也可将/opt单独挂载到其他磁盘上使用。</li></ul><p>所以/lib文件应该放哪里呢？</p><ul><li>/usr/lib：系统级的动态库（.so）目录。</li><li>/usr/local/lib：用户级的动态库（.so）目录。</li></ul><p>/usr/local 目录和 /opt 目录都是用来安装第三方软件的目录，所谓第三方软件其实就是用户自己安装的软件，区别于安装系统时自带的软件。</p><ul><li><p>/usr/local 下一般是你安装软件的目录，这个目录就相当于在windows下的programefiles这个目录；</p></li><li><p>/opt 这个目录是一些大型软件的安装目录，或者是一些服务程序的安装目录。</p></li></ul><p>/usr/local和/opt不同的是，/usr/local命令下面的一些子目录往往都是被加入到PATH环境变量中的（PATH中默认就有/usr/local/bin，可以使用echo $PATH查看），而/opt目录则没有在PATH环境变量中，这样安装在/usr/local目录下的软件就可以在命令行执行、启动。</p><p>但是这也不是绝对的，也可以把需要命令启动的软件安装在/opt目录，然后在/usr/local/bin目录建立一个链接文件，这样同样可以命令启动这个软件，网上许多Linux软件安装教程都会采用这个方法。</p><p>其实还有的软件根本不会把软件安装在这两个目录，比如前段时间编译安装了一个游戏叫NetHack，make install命令执行后，安装在了/home目录。</p><hr><h2 id="建议" tabindex="-1"><a class="header-anchor" href="#建议" aria-hidden="true">#</a> 建议</h2><p>在Linux中，安装软件的最佳位置取决于软件的类型和用途。</p><p>一般来说，以下是一些常见的安装位置：</p><ol><li><p>/usr/local：这是最常见的安装位置之一，用于安装自定义软件包。这个目录通常包含了系统管理员安装的软件，而不是系统自带的软件。这个目录通常是可读可写的，但只有root用户才能进行安装和卸载操作。</p></li><li><p>/opt：这个目录通常用于安装第三方软件，例如商业软件或专有软件。这个目录通常是可读可写的，但只有root用户才能进行安装和卸载操作。</p></li><li><p>/home：这个目录通常用于安装用户自己的软件，例如个人脚本或自定义程序。这个目录通常是可读可写的，但只有用户自己才能进行安装和卸载操作。</p></li></ol><p>最后，选择哪个目录来安装软件取决于软件的类型和用途。 如果您是系统管理员，建议将自定义软件包安装在/usr/local目录下。 如果您是普通用户，建议将个人脚本或自定义程序安装在/home目录下。 如果您需要安装商业软件或专有软件，建议将其安装在/opt目录下。</p>',15),p=[e];function s(t,c){return o(),i("div",null,p)}const n=l(a,[["render",s],["__file","Linux 程序安装目录 opt 和 usr|local 的区别.html.vue"]]);export{n as default};
