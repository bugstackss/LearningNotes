const e=JSON.parse('{"key":"v-f444cffa","path":"/notes/juc/%E4%BA%8C%E3%80%81%E7%BA%BF%E7%A8%8B%E6%B1%A0.html","title":"二、线程池","lang":"zh-CN","frontmatter":{"title":"二、线程池","category":["JUC","java"],"tag":["java","juc","并发编程"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"二、线程池 1、什么是线程池 大家用jdbc操作过数据库应该知道，操作数据库需要和数据库建立连接，拿到连接之后才能操作数据库，用完之后销毁。数据库连接的创建和销毁其实是比较耗时的，真正和业务相关的操作耗时是比较短的。每个数据库操作之前都需要创建连接，为了提升系统性能，后来出现了数据库连接池，系统启动的时候，先创建很多连接放在池子里面，使用的时候，直接从...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/juc/%E4%BA%8C%E3%80%81%E7%BA%BF%E7%A8%8B%E6%B1%A0.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"二、线程池"}],["meta",{"property":"og:description","content":"二、线程池 1、什么是线程池 大家用jdbc操作过数据库应该知道，操作数据库需要和数据库建立连接，拿到连接之后才能操作数据库，用完之后销毁。数据库连接的创建和销毁其实是比较耗时的，真正和业务相关的操作耗时是比较短的。每个数据库操作之前都需要创建连接，为了提升系统性能，后来出现了数据库连接池，系统启动的时候，先创建很多连接放在池子里面，使用的时候，直接从..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"二、线程池"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"juc"}],["meta",{"property":"article:tag","content":"并发编程"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"二、线程池","slug":"二、线程池","link":"#二、线程池","children":[{"level":3,"title":"1、什么是线程池","slug":"_1、什么是线程池","link":"#_1、什么是线程池","children":[]},{"level":3,"title":"2、为什么用线程池","slug":"_2、为什么用线程池","link":"#_2、为什么用线程池","children":[]},{"level":3,"title":"3、线程池的使用","slug":"_3、线程池的使用","link":"#_3、线程池的使用","children":[]},{"level":3,"title":"4、ThreadPoolExecutor底层原理","slug":"_4、threadpoolexecutor底层原理","link":"#_4、threadpoolexecutor底层原理","children":[]},{"level":3,"title":"5、拒绝策略？生产中如设置合理参数","slug":"_5、拒绝策略-生产中如设置合理参数","link":"#_5、拒绝策略-生产中如设置合理参数","children":[]},{"level":3,"title":"6、超级大坑 在工作中单一的/固定数的/可变的三种创建线程池的方法哪个用的多？","slug":"_6、超级大坑-在工作中单一的-固定数的-可变的三种创建线程池的方法哪个用的多","link":"#_6、超级大坑-在工作中单一的-固定数的-可变的三种创建线程池的方法哪个用的多","children":[]},{"level":3,"title":"7、自定义线程池","slug":"_7、自定义线程池","link":"#_7、自定义线程池","children":[]},{"level":3,"title":"8、线程池中的2个关闭方法","slug":"_8、线程池中的2个关闭方法","link":"#_8、线程池中的2个关闭方法","children":[]},{"level":3,"title":"9、BlockingQueue阻塞队列","slug":"_9、blockingqueue阻塞队列","link":"#_9、blockingqueue阻塞队列","children":[]},{"level":3,"title":"10、扩展线程池","slug":"_10、扩展线程池","link":"#_10、扩展线程池","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":21.62,"words":6486},"filePathRelative":"notes/juc/二、线程池.md","localizedDate":"2023年5月31日"}');export{e as data};
