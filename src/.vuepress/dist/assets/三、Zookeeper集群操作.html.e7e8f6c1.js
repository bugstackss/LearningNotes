import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,d as n,e as s,b as l,a,r as i}from"./app.9b10ba0a.js";const c="/assets/image-20230417153555560.3ab4435d.png",r="/assets/image-20230417162336728.6a8c4290.png",d="/assets/b3137d71485249b586e3fd4b9a970d71.1a941c39.png",u="/assets/1130f053-f84f-47cd-ae8e-e8dfc015d67a.bbf4ba2c.png",k="/assets/image-20230417222121056.ce05f136.png",v="/assets/image-20230417232645619.b79a8770.png",m="/assets/image-20230417232711695.64d397ad.png",b={},g=a(`<h2 id="_01、集群安装" tabindex="-1"><a class="header-anchor" href="#_01、集群安装" aria-hidden="true">#</a> 01、集群安装</h2><blockquote><p>前提说明：如果你要使用zookeeper的话需要确保自己的环境是否ok？</p><ul><li>java环境是zookeeper的必须的！</li><li>配置完成使用java、javac的命令确定是否成功！</li><li>这里的java环境需要检查一下jps命令是否存在，如果不存在那么你的java环境可能是Centos虚拟机自带的openjdk，需要删除关于java的所有，然后重新上官网进行重新安装！</li></ul></blockquote><h3 id="_1-集群规划" tabindex="-1"><a class="header-anchor" href="#_1-集群规划" aria-hidden="true">#</a> <strong>1）</strong> <em><strong>*集群规划*</strong></em></h3><p>在 hadoop102、hadoop103 和 hadoop104 三个节点上都部署 Zookeeper。</p><p><em>思考：如果是</em> <em>10</em> <em>台服务器，需要部署多少台</em> <em>Zookeeper</em>*？*</p><h3 id="_1-解压安装" tabindex="-1"><a class="header-anchor" href="#_1-解压安装" aria-hidden="true">#</a> <strong>1）</strong> <em><strong>*解压安装*</strong></em></h3><p>（1）在 hadoop102 解压Zookeeper 安装包到/opt/module/目录下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost zookeeper<span class="token punctuation">]</span><span class="token comment"># tar -zxvf apache-zookeeper-3.5.7- bin.tar.gz -C /opt/module/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）修改 apache-zookeeper-3.5.7-bin 名称为 zookeeper-3.5.7</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@localhost zookeeper]# mv apache-zookeeper-3.5.7-bin zookeeper-3.5.7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-配置服务器编号" tabindex="-1"><a class="header-anchor" href="#_3-配置服务器编号" aria-hidden="true">#</a> <strong>3）</strong> <em><strong>*配置服务器编号*</strong></em></h3><p>（1） 在/opt/module/zookeeper-3.5.7/这个目录下创建 zkData</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># mkdir zkData/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）在/opt/module/zookeeper-3.5.7/zkData 目录下创建一个 myid 的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> myid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在文件中添加与 server 对应的编号（注意：上下不要有空行，左右不要有空格）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：添加 myid 文件，一定要在 Linux 里面创建，在 notepad++里面很可能乱码</p><p>（3）拷贝配置好的 zookeeper 到其他机器上</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost zookeeper<span class="token punctuation">]</span><span class="token comment"># xsync	zookeeper-3.5.7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>并分别在 hadoop103、hadoop104 上修改 myid 文件中内容为 3、4</p><h3 id="_4-配置zoo-cfg文件" tabindex="-1"><a class="header-anchor" href="#_4-配置zoo-cfg文件" aria-hidden="true">#</a> 4） <strong>配置zoo.cfg文件</strong></h3><p>（1）重命名/opt/module/zookeeper-3.5.7/conf 这个目录下的 zoo_sample.cfg 为 zoo.cfg</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># mv zoo_sample.cfg zoo.cfg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2） 打开zoo.cfg 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># vim zoo.cfg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改数据存储路径配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">dataDir</span><span class="token operator">=</span>/opt/module/zookeeper-3.5.7/zkData
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>集群配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#######################cluster##########################</span>
<span class="token assign-left variable">server.2</span><span class="token operator">=</span>hadoop102:2888:3888
<span class="token assign-left variable">server.3</span><span class="token operator">=</span>hadoop103:2888:3888
<span class="token assign-left variable">server.4</span><span class="token operator">=</span>hadoop104:2888:3888
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),h=n("p",null,"注意点：这里的3888后面一定要仔细检查没有空格才可以，如果有空格会报如下的错误，总结如下：",-1),z=n("li",null,"在集群配置后面是否有空格存在",-1),f=n("li",null,"启动集群的时候是否启动的机器数量没有超过半数",-1),x={href:"https://code84.com/759501.html",target:"_blank",rel:"noopener noreferrer"},y=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># ./bin/zkServer.sh status</span>
ZooKeeper JMX enabled by default
Using config: /opt/zookeeper/zookeeper-3.5.7/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Client port found: <span class="token number">2181</span>. Client address: localhost.
Error contacting service. It is probably not running.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）配置参数解读</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">server.A</span><span class="token operator">=</span>B:C:D。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>A</strong> 是一个数字，表示这个是第几号服务器；</p><p>集群模式下配置一个文件myid，这个文件在 dataDir 目录下，这个文件里面有一个数据就是 A 的值，<strong>Zookeeper 启动时读取此文件，拿到里面的数据与 zoo.cfg 里面的配置信息比较从而判断到底是哪个 server。</strong></p><p><strong>B</strong> 是这个服务器的地址；</p><p><strong>C</strong> 是这个服务器Follower 与集群中的 Leader 服务器交换信息的端口；</p><p><strong>D</strong> 是万一集群中的 Leader 服务器挂了，需要一个端口来重新进行选举，选出一个新的Leader，而这个端口就是用来执行选举时服务器相互通信的端口。</p><p>（4）同步zoo.cfg 配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># xsync zoo.cfg</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-集群操作" tabindex="-1"><a class="header-anchor" href="#_5-集群操作" aria-hidden="true">#</a> <strong>5）</strong> <em><strong>*集群操作*</strong></em></h3><p>（1）分别启动Zookeeper</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 172.16.102.100</span>
<span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># ./bin/zkServer.sh start</span>
<span class="token comment"># 172.16.102.135</span>
<span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># ./bin/zkServer.sh start</span>
<span class="token comment"># 172.16.102.136</span>
<span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># ./bin/zkServer.sh start</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）查看状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># ./bin/zkServer.sh status</span>
ZooKeeper JMX enabled by default
Using config: /opt/zookeeper/zookeeper-3.5.7/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Client port found: <span class="token number">2181</span>. Client address: localhost.
Mode: follower  <span class="token operator">&lt;</span>---Follower（跟随者）

<span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># ./bin/zkServer.sh status</span>
ZooKeeper JMX enabled by default
Using config: /opt/zookeeper/zookeeper-3.5.7/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Client port found: <span class="token number">2181</span>. Client address: localhost.
Mode: follower  <span class="token operator">&lt;</span>---Follower（跟随者）

<span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># ./bin/zkServer.sh status</span>
ZooKeeper JMX enabled by default
Using config: /opt/zookeeper/zookeeper-3.5.7/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Client port found: <span class="token number">2181</span>. Client address: localhost.
Mode: leader  <span class="token operator">&lt;</span>---Leader（领导者）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）停止</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># ./bin/zkServer.sh stop</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_02、选举机制-面试重点" tabindex="-1"><a class="header-anchor" href="#_02、选举机制-面试重点" aria-hidden="true">#</a> 02、选举机制（面试重点）</h2><p><strong>Zookeeper选举机制——第一次启动</strong></p><p><img src="`+c+'" alt="image-20230417153555560"></p><p><strong>SID</strong>：<strong>服务器ID</strong>。用来唯一标识一台ZooKeeper集群中的机器，每台机器不能重复，和myid一致。</p><p><strong>ZXID</strong>：<strong>事务ID。ZXID是一个事务ID，用来标识一次服务器状态的变更</strong>。在某一时刻， 集群中的每台机器的ZXID值不一定完全一致，这和ZooKeeper服务器对于客户端“更 新请求”的处理逻辑有关。</p><p><strong>Epoch</strong>：<strong>每个Leader任期的代号</strong>。没有Leader时同一轮投票过程中的逻辑时钟值是相同的。每投完一次票这个数据就会增加</p><p>（1） 服务器1启动，发起一次选举。服务器1投自己一票。此时服务器1票数一票，不够半数以上（3票），选举无法完成，服务器1状态保持为LOOKING；</p><p>（2） 服务器2启动，再发起一次选举。服务器1和2分别投自己一票并交换选票信息：<strong>此时服务器1发现服务器2的myid比自己目前投票推举的（服务器1） 大，更改选票为推举服务器2</strong>。此时服务器1票数0票，服务器2票数2票，没有半数以上结果，选举无法完成，服务器1，2状态保持LOOKING</p><p>（3） 服务器3启动，发起一次选举。此时服务器1和2都会更改选票为服务器3。此次投票结果：服务器1为0票，服务器2为0票，服务器3为3票。此时服务器3的票数已经超过半数，服务器3当选Leader。服务器1，2更改状态为FOLLOWING，服务器3更改状态为LEADING；</p><p>（4） 服务器4启动，发起一次选举。此时服务器1，2，3已经不是LOOKING状态，不会更改选票信息。交换选1票信息结果：服务器3为3票，服务器4为1票。此时服务器4服从多数，更改选票信息为服务器3，并更改状态为FOLLOWING；</p><p>（5） 服务器5启动，同4一样当小弟。</p><p><strong>Zookeeper选举机制——非第一次启动</strong></p><p><img src="'+r+`" alt="image-20230417162336728"></p><p><strong>SID</strong>：<strong>服务器ID</strong>。用来唯一标识一台ZooKeeper集群中的机器，每台机器不能重复，和myid一致。</p><p><strong>ZXID</strong>：<strong>事务ID</strong>。<strong>ZXID是一个事务ID，用来标识一次服务器状态的变更</strong>。在某一时刻， 集群中的每台机器的ZXID值不一定完全一致，这和ZooKeeper服务器对于客户端“更 新请求”的处理逻辑有关。</p><p><strong>Epoch</strong>：<strong>每个Leader任期的代号</strong>。没有Leader时同一轮投票过程中的逻辑时钟值是相同的。每投完一次票这个数据就会增加</p><p>（1）当ZooKeeper集群中的一台服务器出现以下两种情况之一时，就会开始进入Leader选举：</p><ul><li><p>服务器初始化启动。</p></li><li><p>服务器运行期间无法和Leader保持连接。</p></li></ul><p>（2） 而当一台机器进入Leader选举流程时，当前集群也可能会处于以下两种状态：</p><ul><li><p>集群中本来就已经存在一个Leader。</p><p>对于第一种已经存在Leader的情况，机器试图去选举Leader时，会被告知当前服务器的Leader信息，对于该机器来说，仅仅需要和Leader机器建立连 接，并进行状态同步即可。</p></li><li><p><strong>集群中确实不存在Leader。</strong></p><p>假设ZooKeeper由5台服务器组成，SID分别为1、2、3、4、5，ZXID分别为8、8、8、7、7，并且此时SID为3的服务器是Leader。某一时刻，3和5服务器出现故障，因此开始进行Leader选举。</p></li></ul><table><thead><tr><th></th><th>（EPOCH，ZXID，SID ）</th><th>（ EPOCH，ZXID，SID ）</th><th>（EPOCH，ZXID，SID ）</th></tr></thead><tbody><tr><td>SID为1、2、4的机器投票情况：</td><td>（1，8，1）</td><td>（1，8，2）</td><td>（1，7，4）</td></tr></tbody></table><p><strong>选举Leader规则： ①EPOCH大的直接胜出 ②EPOCH相同，事务id大的胜出 ③事务id相同，服务器id大的胜出</strong></p><h2 id="_03、zk集群脚本" tabindex="-1"><a class="header-anchor" href="#_03、zk集群脚本" aria-hidden="true">#</a> 03、ZK集群脚本</h2><p>1）在hadoop102 的/home/may/bin 目录下创建脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># vim zk.sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>编写ZK启停脚本</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
 
<span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>
<span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop01 hadoop02 hadoop03
    <span class="token keyword">do</span>
        <span class="token builtin class-name">echo</span> -------- zookeeper <span class="token variable">$i</span> 启动 --------
        <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">&quot;/opt/zookeeper/zookeeper-3.5.7/bin/zkServer.sh start&quot;</span>
    <span class="token keyword">done</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
 
<span class="token string">&quot;stop&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop01 hadoop02 hadoop03
    <span class="token keyword">do</span>
        <span class="token builtin class-name">echo</span> -------- zookeeper <span class="token variable">$i</span> 停止 --------
        <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">&quot;/opt/zookeeper/zookeeper-3.5.7/bin/zkServer.sh stop&quot;</span>
    <span class="token keyword">done</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
 
<span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> hadoop01 hadoop02 hadoop03
    <span class="token keyword">do</span>
        <span class="token builtin class-name">echo</span> -------- zookeeper <span class="token variable">$i</span> 状态 --------
        <span class="token function">ssh</span> <span class="token variable">$i</span> <span class="token string">&quot;/opt/zookeeper/zookeeper-3.5.7/bin/zkServer.sh status&quot;</span>
    <span class="token keyword">done</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
 
<span class="token keyword">esac</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为其设置权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># chmod 777 zk.sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）在hadoop102 的/home/may/bin 目录下创建脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># vim jpsall</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>编写查看集群 Java 进程脚本</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">host</span> <span class="token keyword">in</span> hadoop01 hadoop02 hadoop03
<span class="token keyword">do</span>
        <span class="token builtin class-name">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> <span class="token variable">$host</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
        <span class="token function">ssh</span> <span class="token variable">$host</span> /opt/java/jdk1.8.0_361/bin/jps <span class="token parameter variable">-l</span>
<span class="token keyword">done</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为其设置权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># chmod 777 jpsall</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>测试启停</strong></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@hadoop01 /opt/module/zookeeper-3.7.1<span class="token punctuation">]</span><span class="token comment"># zk.sh start</span>
-------- zookeeper hadoop01 启动 --------
ZooKeeper JMX enabled by default
Using config: /opt/module/zookeeper-3.7.1/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Starting zookeeper <span class="token punctuation">..</span>. already running as process <span class="token number">4688</span>.
-------- zookeeper hadoop02 启动 --------
ZooKeeper JMX enabled by default
Using config: /opt/module/zookeeper-3.7.1/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Starting zookeeper <span class="token punctuation">..</span>. STARTED
 
<span class="token punctuation">[</span>root@hadoop01 /opt/module/zookeeper-3.7.1<span class="token punctuation">]</span><span class="token comment"># jpsall </span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> hadoop01 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token number">4688</span> org.apache.zookeeper.server.quorum.QuorumPeerMain
<span class="token number">4992</span> sun.tools.jps.Jps
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> hadoop02 <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token number">22372</span> org.apache.zookeeper.server.quorum.QuorumPeerMain
<span class="token number">22421</span> sun.tools.jps.Jps
 
<span class="token punctuation">[</span>root@hadoop01 /opt/module/zookeeper-3.7.1<span class="token punctuation">]</span><span class="token comment"># zk.sh status</span>
-------- zookeeper hadoop01 状态 --------
ZooKeeper JMX enabled by default
Using config: /opt/module/zookeeper-3.7.1/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Client port found: <span class="token number">2181</span>. Client address: localhost. Client SSL: false.
Mode: follower
-------- zookeeper hadoop02 状态 --------
ZooKeeper JMX enabled by default
Using config: /opt/module/zookeeper-3.7.1/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Client port found: <span class="token number">2181</span>. Client address: localhost. Client SSL: false.
Mode: leader
 
<span class="token punctuation">[</span>root@hadoop01 /opt/module/zookeeper-3.7.1<span class="token punctuation">]</span><span class="token comment"># zk.sh stop</span>
-------- zookeeper hadoop01 停止 --------
ZooKeeper JMX enabled by default
Using config: /opt/module/zookeeper-3.7.1/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Stopping zookeeper <span class="token punctuation">..</span>. STOPPED
-------- zookeeper hadoop02 停止 --------
ZooKeeper JMX enabled by default
Using config: /opt/module/zookeeper-3.7.1/bin/<span class="token punctuation">..</span>/conf/zoo.cfg
Stopping zookeeper <span class="token punctuation">..</span>. STOPPED
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>如出现下面报错信息：</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@hadoop01 /opt/module/zookeeper-3.7.1<span class="token punctuation">]</span><span class="token comment"># zk.sh start</span>
-------- zookeeper hadoop01 启动 --------
Error: JAVA_HOME is not <span class="token builtin class-name">set</span> and <span class="token function">java</span> could not be found <span class="token keyword">in</span> <span class="token environment constant">PATH</span><span class="token builtin class-name">.</span>
-------- zookeeper hadoop02 启动 --------
Error: JAVA_HOME is not <span class="token builtin class-name">set</span> and <span class="token function">java</span> could not be found <span class="token keyword">in</span> <span class="token environment constant">PATH</span><span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>解决办法：（两台机器都需要修改）</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@hadoop01 /opt/module/zookeeper-3.7.1<span class="token punctuation">]</span><span class="token comment"># vim /opt/module/zookeeper-3.7.1/bin/zkEnv.sh </span>
<span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span><span class="token string">&quot;/usr/java/jdk1.8.0_361&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+d+`" alt="img"></p><p><strong>xsync 命令脚本</strong></p><blockquote><p>同步数据zookeeper脚本</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#1. 编写分发脚本</span>
<span class="token punctuation">[</span>root@hadoop01 /opt/module<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/opt/module
<span class="token punctuation">[</span>root@hadoop01 /opt/module<span class="token punctuation">]</span><span class="token comment"># vim xsync</span>
<span class="token comment">#!/bin/bash</span>
 
<span class="token comment">#1. 判断参数个数</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-lt</span> <span class="token number">1</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> Not Enough Arguement<span class="token operator">!</span>
    <span class="token builtin class-name">exit</span><span class="token punctuation">;</span>
<span class="token keyword">fi</span>
 
<span class="token comment">#2. 遍历集群所有机器</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">host</span> <span class="token keyword">in</span> hadoop01 hadoop02
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>  <span class="token variable">$host</span>  <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
    <span class="token comment">#3. 遍历所有目录，挨个发送</span>
 
    <span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable">$@</span>
    <span class="token keyword">do</span>
        <span class="token comment">#4. 判断文件是否存在</span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-e</span> <span class="token variable">$file</span> <span class="token punctuation">]</span>
            <span class="token keyword">then</span>
                <span class="token comment">#5. 获取父目录</span>
                <span class="token assign-left variable">pdir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">cd</span> <span class="token parameter variable">-P</span> <span class="token punctuation">$(</span>dirname $file<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>
 
                <span class="token comment">#6. 获取当前文件的名称</span>
                <span class="token assign-left variable">fname</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> $file<span class="token variable">)</span></span>
                <span class="token function">ssh</span> <span class="token variable">$host</span> <span class="token string">&quot;mkdir -p <span class="token variable">$pdir</span>&quot;</span>
                <span class="token function">rsync</span> <span class="token parameter variable">-av</span> <span class="token variable">$pdir</span>/<span class="token variable">$fname</span> <span class="token variable">$host</span><span class="token builtin class-name">:</span><span class="token variable">$pdir</span>
            <span class="token keyword">else</span>
                <span class="token builtin class-name">echo</span> <span class="token variable">$file</span> does not exists<span class="token operator">!</span>
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
<span class="token keyword">done</span>
 
<span class="token punctuation">[</span>root@hadoop01 /opt/module<span class="token punctuation">]</span><span class="token comment"># chmod 777 xsync </span>
<span class="token punctuation">[</span>root@hadoop01 /opt/module<span class="token punctuation">]</span><span class="token comment"># mv xsync /usr/bin/</span>
 
<span class="token comment">#2. 配置主机解析。两台机子都要执行</span>
<span class="token punctuation">[</span>root@hadoop01 /opt/module<span class="token punctuation">]</span><span class="token comment"># vim /etc/hosts</span>
<span class="token number">192.168</span>.170.130 hadoop01
<span class="token number">192.168</span>.170.131 hadoop02
 
<span class="token comment">#3. 配置免密登录</span>
<span class="token comment"># ⼀直回⻋就⾏</span>
<span class="token punctuation">[</span>root@hadoop01 /opt/module<span class="token punctuation">]</span><span class="token comment"># ssh-keygen -t rsa</span>
 
<span class="token comment"># 等待一会，然后输入 yes，再输入各主机的密码即可</span>
<span class="token punctuation">[</span>root@hadoop01 /opt/module<span class="token punctuation">]</span><span class="token comment"># for i in hadoop01 hadoop02 hadoop03;do ssh-copy-id -i /root/.ssh/id_rsa.pub $i;done</span>
 
<span class="token comment">#4. 分发安装包</span>
<span class="token punctuation">[</span>root@hadoop01 /opt/module<span class="token punctuation">]</span><span class="token comment"># xsync zookeeper-3.7.1/</span>
 
<span class="token comment">#5. 在 hadoop02 上修改 myid 文件中内容为 2</span>
<span class="token punctuation">[</span>root@hadoop02 ~<span class="token punctuation">]</span><span class="token comment"># vim /opt/module/zookeeper-3.7.1/zkData/myid </span>
<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_04、客户端api操作" tabindex="-1"><a class="header-anchor" href="#_04、客户端api操作" aria-hidden="true">#</a> 04、客户端API操作</h2><h3 id="命令行语法" tabindex="-1"><a class="header-anchor" href="#命令行语法" aria-hidden="true">#</a> 命令行语法</h3><table><thead><tr><th><strong>命令基本语法</strong></th><th><strong>功能描述</strong></th></tr></thead><tbody><tr><td>help</td><td>显示所有操作命令</td></tr><tr><td>ls path</td><td>使用 ls 命令来查看当前 znode 的子节点 [可监听]<br>-w 监听子节点变化<br>-s 附加次级信息</td></tr><tr><td>create</td><td>普通创建<br>-s 含有序列<br>-e 临时（重启或者超时消失）</td></tr><tr><td>get path</td><td>获得节点的值 [可监听]-w 监听节点内容变化-s 附加次级信息</td></tr><tr><td>set</td><td>设置节点的具体值</td></tr><tr><td>stat</td><td>查看节点状态</td></tr><tr><td>delete</td><td>删除节点</td></tr><tr><td>deleteall</td><td>递归删除节点</td></tr></tbody></table><p><strong>1.启动客户端</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost bin<span class="token punctuation">]</span><span class="token comment"># ./zkCli.sh -server hadoop01:2181</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2.显示所有操作命令</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token builtin class-name">help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="znode节点数据信息" tabindex="-1"><a class="header-anchor" href="#znode节点数据信息" aria-hidden="true">#</a> znode节点数据信息</h3><p><strong>1）查看当前znode中所包含的内容</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token function">ls</span> /
<span class="token punctuation">[</span>zookeeper<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2）查看当前节点详细数据</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token function">ls</span> <span class="token parameter variable">-s</span> /
<span class="token punctuation">[</span>zookeeper<span class="token punctuation">]</span>cZxid <span class="token operator">=</span> 0x0
ctime <span class="token operator">=</span> Thu Jan 01 08:00:00 CST <span class="token number">1970</span>
mZxid <span class="token operator">=</span> 0x0
mtime <span class="token operator">=</span> Thu Jan 01 08:00:00 CST <span class="token number">1970</span>
pZxid <span class="token operator">=</span> 0x0
cversion <span class="token operator">=</span> <span class="token parameter variable">-1</span>
dataVersion <span class="token operator">=</span> <span class="token number">0</span>
aclVersion <span class="token operator">=</span> <span class="token number">0</span>
ephemeralOwner <span class="token operator">=</span> 0x0
dataLength <span class="token operator">=</span> <span class="token number">0</span>
numChildren <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>（1） czxid：创建节点的事务 zxid</code></p><p>每次修改ZooKeeper 状态都会产生一个ZooKeeper 事务 ID。事务 ID 是ZooKeeper 中所有修改总的次序。每次修改都有唯一的 zxid，如果 zxid1 小于 zxid2，那么zxid1 在 zxid2 之前发生。</p><p>（2） ctime：znode 被创建的毫秒数（从 1970 年开始）</p><p>（3） mzxid：znode 最后更新的事务zxid</p><p>（4） mtime：znode 最后修改的毫秒数（从 1970 年开始）</p><p>（5） pZxid：znode 最后更新的子节点zxid</p><p>（6） cversion：znode 子节点变化号，znode 子节点修改次数</p><p>（7） dataversion：znode 数据变化号</p><p><code>（8） aclVersion：znode 访问控制列表的变化号</code></p><p>（9） ephemeralOwner：如果是临时节点，这个是 znode 拥有者的 session id。如果不是临时节点则是 0。</p><p><code>（10） dataLength：znode 的数据长度</code></p><p><code>（11） numChildren：znode 子节点数量</code></p><h3 id="节点类型-持久-短暂-有序号-无序号" tabindex="-1"><a class="header-anchor" href="#节点类型-持久-短暂-有序号-无序号" aria-hidden="true">#</a> 节点类型（持久/短暂/有序号/无序号）</h3><blockquote><p>节点类型</p></blockquote><p>持久（Persistent）：客户端和服务器端断开连接后，创建的节点不删除</p><p>短暂（Ephemeral）：客户端和服务器端断开连接后，创建的节点自己删除</p><p><img src="`+u+`" alt="1130f053-f84f-47cd-ae8e-e8dfc015d67a"></p><p>说明：创建znode时设置顺序标识，znode名称后会附加一个值，顺序号是一个单调递增的计数器，由父节点维护</p><p>注意：在分布式系统中，顺序号可以被用于为所有的事件进行全局排序，这样客户端可以通过顺序号推断事件的顺序</p><p>（1）持久化目录节点</p><p>客户端与Zookeeper断开连接后，该节点依旧存在</p><p>（2）持久化顺序编号目录节点</p><p>客户端与Zookeeper断开连接后，该节点依旧存在，只是Zookeeper给该节点名称进行顺序编号</p><p>（3）临时目录节点</p><p>客户端与Zookeeper断开连接后，该节点被删除</p><p>（4）临时顺序编号目录节点</p><p>客户端与Zookeeper 断开连接后， 该节点被删除， 只是 Zookeeper给该节点名称进行顺序编号。</p><hr><p><strong>1）分别创建2个普通节点（永久节点 + 不带序号）</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">7</span><span class="token punctuation">]</span> create /sanguo <span class="token string">&quot;diaochan&quot;</span>
Created /sanguo
<span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">8</span><span class="token punctuation">]</span> create /sanguo/shuguo <span class="token string">&quot;liubei&quot;</span>
Created /sanguo/shuguo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：创建节点时，要赋值</p></blockquote><p><strong>2）获取节点的值</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">9</span><span class="token punctuation">]</span> get <span class="token parameter variable">-s</span> /sanguo
diaochan
cZxid <span class="token operator">=</span> 0x700000004
ctime <span class="token operator">=</span> Mon Apr <span class="token number">17</span> <span class="token number">21</span>:52:17 CST <span class="token number">2023</span>
mZxid <span class="token operator">=</span> 0x700000004
mtime <span class="token operator">=</span> Mon Apr <span class="token number">17</span> <span class="token number">21</span>:52:17 CST <span class="token number">2023</span>
pZxid <span class="token operator">=</span> 0x700000005
cversion <span class="token operator">=</span> <span class="token number">1</span>
dataVersion <span class="token operator">=</span> <span class="token number">0</span>
aclVersion <span class="token operator">=</span> <span class="token number">0</span>
ephemeralOwner <span class="token operator">=</span> 0x0
dataLength <span class="token operator">=</span> <span class="token number">8</span>
numChildren <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">10</span><span class="token punctuation">]</span> get <span class="token parameter variable">-s</span> /sanguo/shuguo
liubei
cZxid <span class="token operator">=</span> 0x700000005
ctime <span class="token operator">=</span> Mon Apr <span class="token number">17</span> <span class="token number">21</span>:52:33 CST <span class="token number">2023</span>
mZxid <span class="token operator">=</span> 0x700000005
mtime <span class="token operator">=</span> Mon Apr <span class="token number">17</span> <span class="token number">21</span>:52:33 CST <span class="token number">2023</span>
pZxid <span class="token operator">=</span> 0x700000005
cversion <span class="token operator">=</span> <span class="token number">0</span>
dataVersion <span class="token operator">=</span> <span class="token number">0</span>
aclVersion <span class="token operator">=</span> <span class="token number">0</span>
ephemeralOwner <span class="token operator">=</span> 0x0
dataLength <span class="token operator">=</span> <span class="token number">6</span>
numChildren <span class="token operator">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3）创建带序号的节点（永久节点+带序号）</strong></p><ol><li>先创建一个普通的根节点 /sanguo/weiguo</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">11</span><span class="token punctuation">]</span> create /sanguo/weiguo <span class="token string">&quot;caocao&quot;</span>
Created /sanguo/weiguo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建带序号的节点</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">12</span><span class="token punctuation">]</span> create <span class="token parameter variable">-s</span> /sanguo/weiguo/zhangliao <span class="token string">&quot;zhangliao&quot;</span>
Created /sanguo/weiguo/zhangliao0000000000
<span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">13</span><span class="token punctuation">]</span> create <span class="token parameter variable">-s</span> /sanguo/weiguo/zhangliao <span class="token string">&quot;zhangliao&quot;</span>
Created /sanguo/weiguo/zhangliao0000000001
<span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">14</span><span class="token punctuation">]</span> create <span class="token parameter variable">-s</span> /sanguo/weiguo/xushu <span class="token string">&quot;xushu&quot;</span>
Created /sanguo/weiguo/xushu0000000002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果原来没有序号节点，序号从 0 开始依次递增。如果原节点下已有 2 个节点，则再排序时从 2 开始，以此类推。</p><p><strong>4）创建短暂节点（短暂节点+不带序号 or 带序号）</strong></p><ol><li>创建短暂的不带序号的节点</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">15</span><span class="token punctuation">]</span> create <span class="token parameter variable">-e</span> /sanguo/wuguo <span class="token string">&quot;zhouyu&quot;</span>
Created /sanguo/wuguo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建短暂的带序号的节点</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">16</span><span class="token punctuation">]</span> create <span class="token parameter variable">-e</span> <span class="token parameter variable">-s</span> /sanguo/wuguo <span class="token string">&quot;zhouyu&quot;</span>
Created /sanguo/wuguo0000000003
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在当前客户端是能查看到的</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: hadoop01:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">17</span><span class="token punctuation">]</span> <span class="token function">ls</span> /sanguo
<span class="token punctuation">[</span>shuguo, weiguo, wuguo, wuguo0000000003<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>退出当前客户端然后再重新启动客户端–&gt;quit退出！</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost zookeeper-3.5.7<span class="token punctuation">]</span><span class="token comment"># bin/zkCli.sh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>再次查看根目录下短暂节点已经删除</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token function">ls</span> /sanguo
<span class="token punctuation">[</span>shuguo, weiguo<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5）修改节点数据值</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">8</span><span class="token punctuation">]</span> <span class="token builtin class-name">set</span> /sanguo/weiguo <span class="token string">&quot;simayi&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="监听器原理" tabindex="-1"><a class="header-anchor" href="#监听器原理" aria-hidden="true">#</a> <strong>监听器原理</strong></h3><p>客户端注册监听它关心的目录节点，当目录节点发生变化（数据改变、节点删除、子目录节点增加删除）时，ZooKeeper 会通知客户端。监听机制保证 ZooKeeper 保存的任何的数据的任何改变都能快速的响应到监听了该节点的应用程序。</p><blockquote><p><strong>1、监听原理详解</strong></p></blockquote><p>1） 首先要有一个main()线程</p><p>2） 在main线程中创建Zookeeper客户端，这时就会创建两个线程，一个负责网络连接通信（connet），一个负责监听（listener）。</p><p>3） 通过connect线程将注册的监听事件发送给Zookeeper。</p><p>4） 在Zookeeper的注册监听器列表中将注册的监听事件添加到列表中。5）Zookeeper监听到有数据或路径变化，就会将这个消息发送给listener线程。6）listener线程内部调用了process()方法。</p><blockquote><p><strong>2、常见的监听</strong></p></blockquote><p>1） 监听节点数据的变化</p><p><strong>get path [watch]</strong></p><p>2） 监听子节点增减的变化</p><p><strong>ls path [watch]</strong></p><p><img src="`+k+`" alt="image-20230417222121056"></p><p><strong>1）节点的值变化监听</strong></p><ol><li>在 hadoop104 主机上注册监听/sanguo 节点数据变化</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">26</span><span class="token punctuation">]</span> get <span class="token parameter variable">-w</span> /sanguo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>在 hadoop103 主机上修改/sanguo 节点的数据</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token builtin class-name">set</span> /sanguo <span class="token string">&quot;xisi&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>观察hadoop104 主机收到数据变化的监听</li></ol><table><thead><tr><th>WATCHER::</th><th></th><th></th></tr></thead><tbody><tr><td>WatchedEvent</td><td>state:SyncConnected</td><td>type:NodeDataChanged</td></tr><tr><td>path:/sanguo</td><td></td><td></td></tr></tbody></table><p>注意：在hadoop103再多次修改/sanguo的值，hadoop104上不会再收到监听。因为注册一次，只能监听一次。想再次监听，需要再次注册。</p><p><strong>2）节点的子节点变化监听（路径变化）</strong></p><ol><li>在 hadoop104 主机上注册监听/sanguo 节点的子节点变化</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>shuguo, weiguo<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>在 hadoop103 主机/sanguo 节点上创建子节点</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">2</span><span class="token punctuation">]</span> create /sanguo/jin <span class="token string">&quot;simayi&quot;</span> Created /sanguo/jin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>观察hadoop104主机收到子节点变化的监听</li></ol><table><thead><tr><th>WATCHER::</th><th></th><th></th></tr></thead><tbody><tr><td>WatchedEvent</td><td>state:SyncConnected</td><td>type:NodeDataChanged</td></tr><tr><td>path:/sanguo</td><td></td><td></td></tr></tbody></table><p>注意：节点的路径变化，也是注册一次，生效一次。想多次生效，就需要多次注册。</p><h3 id="节点删除与查看" tabindex="-1"><a class="header-anchor" href="#节点删除与查看" aria-hidden="true">#</a> 节点删除与查看</h3><p><strong>1）删除节点</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">4</span><span class="token punctuation">]</span> delete /sanguo/jin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2）查看节点状态</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">15</span><span class="token punctuation">]</span> deleteall /sanguo/shuguo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>3）查看节点状态</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">17</span><span class="token punctuation">]</span> <span class="token function">stat</span> /sanguo cZxid <span class="token operator">=</span> 0x100000003
ctime <span class="token operator">=</span> Wed Aug <span class="token number">29</span> 00:03:23 CST <span class="token number">2018</span> mZxid <span class="token operator">=</span> 0x100000011
mtime <span class="token operator">=</span> Wed Aug <span class="token number">29</span> 00:21:23 CST <span class="token number">2018</span> pZxid <span class="token operator">=</span> 0x100000014
cversion <span class="token operator">=</span> <span class="token number">9</span>
dataVersion <span class="token operator">=</span> <span class="token number">1</span>
aclVersion <span class="token operator">=</span> <span class="token number">0</span> ephemeralOwner <span class="token operator">=</span> 0x0 dataLength <span class="token operator">=</span> <span class="token number">4</span>
numChildren <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_05、客户端api操作" tabindex="-1"><a class="header-anchor" href="#_05、客户端api操作" aria-hidden="true">#</a> 05、客户端API操作</h2><h3 id="_1-idea环境搭建" tabindex="-1"><a class="header-anchor" href="#_1-idea环境搭建" aria-hidden="true">#</a> 1）IDEA环境搭建</h3><p>1.创建一个工程：zookeeper</p><p>2.添加pom文件</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.拷贝log4j.properties文件到项目根目录</p><p>需要再项目src/main/resources 目录下，新建一个文件，命名为“log4j.properties”，在文件中填入。</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">log4j.rootLogger</span><span class="token punctuation">=</span><span class="token value attr-value">INFO, stdout</span>
<span class="token key attr-name">log4j.appender.stdout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.ConsoleAppender</span>
<span class="token key attr-name">log4j.appender.stdout.layout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.PatternLayout</span>
<span class="token key attr-name">log4j.appender.stdout.layout.ConversionPattern</span><span class="token punctuation">=</span><span class="token value attr-value">%d %p [%c] - %m%n</span>
<span class="token key attr-name">log4j.appender.logfile</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.FileAppender</span>
<span class="token key attr-name">log4j.appender.logfile.File</span><span class="token punctuation">=</span><span class="token value attr-value">target/spring.log</span>
<span class="token key attr-name">log4j.appender.logfile.layout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.PatternLayout</span>
<span class="token key attr-name">log4j.appender.logfile.layout.ConversionPattern</span><span class="token punctuation">=</span><span class="token value attr-value">%d %p [%c] - %m%n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.创建包名com.nakanomay.zk</p><p>5.创建类名称ZkClient</p><h3 id="_2-创建zookeeper客户端" tabindex="-1"><a class="header-anchor" href="#_2-创建zookeeper客户端" aria-hidden="true">#</a> 2）创建Zookeeper客户端</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// 注意：逗号左右不能有空格</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;172.16.102.100:2181,172.16.102.135:2181,172.16.102.136:2181&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> sessionTimeout <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ZooKeeper</span> zkClient <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

	<span class="token annotation punctuation">@Before</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
    <span class="token punctuation">{</span>
        zkClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZooKeeper</span><span class="token punctuation">(</span>connectString<span class="token punctuation">,</span> sessionTimeout<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">WatchedEvent</span> watchedEvent<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// 收到事件通知后的回调函数（用户的业务逻辑）</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>watchedEvent<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;--&quot;</span> <span class="token operator">+</span> watchedEvent<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// 再次启动监听</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> zkClient<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> child <span class="token operator">:</span> children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-创建子节点" tabindex="-1"><a class="header-anchor" href="#_3-创建子节点" aria-hidden="true">#</a> 3）创建子节点</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span>
    <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * 参数1：要创建的节点的路径
         * 参数2：节点数据
         * 参数3：节点权限
         * 参数4：节点的类型
         */</span>
        <span class="token class-name">String</span> nodeCreated <span class="token operator">=</span> zkClient<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;/atguigu&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ss.avi&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ZooDefs<span class="token punctuation">.</span>Ids</span><span class="token punctuation">.</span><span class="token constant">OPEN_ACL_UNSAFE</span><span class="token punctuation">,</span> <span class="token class-name">CreateMode</span><span class="token punctuation">.</span><span class="token constant">PERSISTENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试：在 hadoop102 的 zk 客户端上查看创建节点情况</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">]</span> get <span class="token parameter variable">-s</span> /atguigu
ss.avi
cZxid <span class="token operator">=</span> 0x700000012
ctime <span class="token operator">=</span> Mon Apr <span class="token number">17</span> <span class="token number">23</span>:10:03 CST <span class="token number">2023</span>
mZxid <span class="token operator">=</span> 0x700000012
mtime <span class="token operator">=</span> Mon Apr <span class="token number">17</span> <span class="token number">23</span>:10:03 CST <span class="token number">2023</span>
pZxid <span class="token operator">=</span> 0x700000012
cversion <span class="token operator">=</span> <span class="token number">0</span>
dataVersion <span class="token operator">=</span> <span class="token number">0</span>
aclVersion <span class="token operator">=</span> <span class="token number">0</span>
ephemeralOwner <span class="token operator">=</span> 0x0
dataLength <span class="token operator">=</span> <span class="token number">6</span>
numChildren <span class="token operator">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-监听子节点并监听节点变化" tabindex="-1"><a class="header-anchor" href="#_4-监听子节点并监听节点变化" aria-hidden="true">#</a> 4）监听子节点并监听节点变化</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">//  获取子节点</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> zkClient<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> child <span class="token operator">:</span> children<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（1）在IDEA控制台上看到如下节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zookeeper sanguo atguigu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）在 hadoop102 的客户端上创建再创建一个节点/atguigu1，观察 IDEA 控制台</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">3</span><span class="token punctuation">]</span> create /atguigu1 <span class="token string">&quot;atguigu1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3） 在 hadoop102 的客户端上删除节点/atguigu1，观察 IDEA 控制台</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">4</span><span class="token punctuation">]</span> delete /atguigu1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-判断znode是否存在" tabindex="-1"><a class="header-anchor" href="#_5-判断znode是否存在" aria-hidden="true">#</a> 5）判断Znode是否存在</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// 判断znode是否存在</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exist</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Stat</span> stat <span class="token operator">=</span> zkClient<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">&quot;/atguigu&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stat <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&quot;not exist&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;exist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_06、客户端向服务端写数据流程" tabindex="-1"><a class="header-anchor" href="#_06、客户端向服务端写数据流程" aria-hidden="true">#</a> 06、客户端向服务端写数据流程</h2><p><strong>写流程之写入请求直接发送给*Leader节点</strong></p><p><img src="`+v+'" alt="image-20230417232645619"></p><p><strong>写流程之写入请求发送给follower节点</strong></p><p><img src="'+m+'" alt="image-20230417232711695"></p>',193);function C(w,E){const e=i("ExternalLinkIcon");return t(),p("div",null,[g,n("blockquote",null,[h,n("ul",null,[z,f,n("li",null,[s("如果不行就参考如下："),n("a",x,[s("zookeeper启动出现错误:Error contacting service. It is probably not running – 源码巴士 (code84.com)"),l(e)])])])]),y])}const Z=o(b,[["render",C],["__file","三、Zookeeper集群操作.html.vue"]]);export{Z as default};
