const e=JSON.parse('{"key":"v-dff06fa8","path":"/notes/javacore/nio/%E7%AC%AC4%E7%AB%A0_Java%20NIO%EF%BC%88Buffer%EF%BC%89.html","title":"四、Java NIO（Buffer）","lang":"zh-CN","frontmatter":{"title":"四、Java NIO（Buffer）","category":["IO"],"tag":["NIO","IO","java"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"1.1 Buffer 简介 Java NIO 中的 Buffer 用于和 NIO 通道进行交互。数据是从通道读入缓冲区，从缓冲 区写入到通道中的。 image-20230226194101906 缓冲区本质上是一块可以写入数据，然后可以从中读取数据的内存。这块内存被包装 成 NIO Buffer 对象，并提供了一组方法，用来方便的访问该块内存。缓冲区实...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/javacore/nio/%E7%AC%AC4%E7%AB%A0_Java%20NIO%EF%BC%88Buffer%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"四、Java NIO（Buffer）"}],["meta",{"property":"og:description","content":"1.1 Buffer 简介 Java NIO 中的 Buffer 用于和 NIO 通道进行交互。数据是从通道读入缓冲区，从缓冲 区写入到通道中的。 image-20230226194101906 缓冲区本质上是一块可以写入数据，然后可以从中读取数据的内存。这块内存被包装 成 NIO Buffer 对象，并提供了一组方法，用来方便的访问该块内存。缓冲区实..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"四、Java NIO（Buffer）"}],["meta",{"property":"article:tag","content":"NIO"}],["meta",{"property":"article:tag","content":"IO"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"1.1 Buffer 简介","slug":"_1-1-buffer-简介","link":"#_1-1-buffer-简介","children":[]},{"level":2,"title":"1.2 Buffer 的基本用法","slug":"_1-2-buffer-的基本用法","link":"#_1-2-buffer-的基本用法","children":[]},{"level":2,"title":"1.3 Buffer 的 capacity、position 和 limit","slug":"_1-3-buffer-的-capacity、position-和-limit","link":"#_1-3-buffer-的-capacity、position-和-limit","children":[]},{"level":2,"title":"1.4 Buffer 的类型","slug":"_1-4-buffer-的类型","link":"#_1-4-buffer-的类型","children":[]},{"level":2,"title":"1.5 Buffer 分配和写数据","slug":"_1-5-buffer-分配和写数据","link":"#_1-5-buffer-分配和写数据","children":[{"level":3,"title":"1、Buffer 分配","slug":"_1、buffer-分配","link":"#_1、buffer-分配","children":[]},{"level":3,"title":"2、向 Buffer 中写数据","slug":"_2、向-buffer-中写数据","link":"#_2、向-buffer-中写数据","children":[]},{"level":3,"title":"3、flip()方法","slug":"_3、flip-方法","link":"#_3、flip-方法","children":[]}]},{"level":2,"title":"1.6 从 Buffer 中读取数据","slug":"_1-6-从-buffer-中读取数据","link":"#_1-6-从-buffer-中读取数据","children":[]},{"level":2,"title":"1.7 Buffer 几个方法","slug":"_1-7-buffer-几个方法","link":"#_1-7-buffer-几个方法","children":[{"level":3,"title":"1、rewind()方法","slug":"_1、rewind-方法","link":"#_1、rewind-方法","children":[]},{"level":3,"title":"2、clear()与 compact()方法","slug":"_2、clear-与-compact-方法","link":"#_2、clear-与-compact-方法","children":[]},{"level":3,"title":"3、mark()与 reset()方法","slug":"_3、mark-与-reset-方法","link":"#_3、mark-与-reset-方法","children":[]}]},{"level":2,"title":"1.8 缓冲区操作","slug":"_1-8-缓冲区操作","link":"#_1-8-缓冲区操作","children":[{"level":3,"title":"1、缓冲区分片","slug":"_1、缓冲区分片","link":"#_1、缓冲区分片","children":[]},{"level":3,"title":"2、只读缓冲区","slug":"_2、只读缓冲区","link":"#_2、只读缓冲区","children":[]},{"level":3,"title":"3、直接缓冲区","slug":"_3、直接缓冲区","link":"#_3、直接缓冲区","children":[]},{"level":3,"title":"4、内存映射文件 I/O","slug":"_4、内存映射文件-i-o","link":"#_4、内存映射文件-i-o","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":10.55,"words":3166},"filePathRelative":"notes/javacore/nio/第4章_Java NIO（Buffer）.md","localizedDate":"2023年5月31日"}');export{e as data};
