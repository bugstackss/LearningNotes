import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,d as n,e as s,b as t,a as p,r as l}from"./app.9b10ba0a.js";const u="/assets/image-20230608152240300.6223f4d6.png",i="/assets/image-20230608152358943.c86a3b61.png",r="/assets/image-20230608152427931.a37ab0ff.png",k="/assets/image-20230608152707274.b0546e28.png",d="/assets/image-20230608152858134.ae0052f8.png",m="/assets/image-20230608153303284.ae0ddbc9.png",v="/assets/image-20230608153337518.d8206bb9.png",g="/assets/image-20230608153644535.61e45850.png",b="/assets/image-20230608153700608.d6e34fd3.png",q="/assets/image-20230608153757107.e98fb83e.png",h="/assets/image-20230608153835679.d107f84d.png",_="/assets/image-20230608153858415.656d2d4a.png",y="/assets/image-20230608154259460.21f8dea2.png",f="/assets/image-20230608155300852.dcbb9579.png",S="/assets/image-20230608155845259.ef8ce95c.png",x="/assets/image-20230608155857039.af48e88d.png",j="/assets/image-20230608155921736.85b484b4.png",w="/assets/image-20230608155933560.49059a50.png",E="/assets/image-20230608160052069.d450d10f.png",T="/assets/image-20230608160110525.33922ec2.png",B="/assets/image-20230608160131168.e7119fde.png",R="/assets/image-20230608160344565.d6af94b1.png",P="/assets/image-20230608160358416.d71b5477.png",A="/assets/image-20230608160440963.e233a59c.png",I="/assets/image-20230608160456120.fdcfd1f1.png",O="/assets/image-20230608160615391.c43e9c83.png",H="/assets/image-20230608160629872.3d47592d.png",z="/assets/image-20230608160737415.648d4db9.png",D="/assets/image-20230608160801664.4d4ef369.png",G="/assets/image-20230608160818670.803f8952.png",Q="/assets/image-20230608160829252.9c3edc0c.png",U="/assets/image-20230608160856707.ae44a494.png",L="/assets/image-20230608160913142.21a2e3fe.png",M="/assets/image-20230608160947873.8d4291a3.png",F="/assets/image-20230608161001568.c104357f.png",J="/assets/image-20230608161018933.c42df0c6.png",C="/assets/image-20230608161033008.296247e7.png",N="/assets/image-20230608161533922.3a51f4b8.png",X="/assets/image-20230608161543756.32672671.png",V="/assets/image-20230608161645225.bece1ae2.png",W="/assets/image-20230608161702446.bc16351d.png",K="/assets/image-20230608162313963.61d98f10.png",Y="/assets/image-20230608162329802.8da0a281.png",Z="/assets/image-20230608162600497.5671b2c7.png",$="/assets/image-20230608162618627.6ae8c82f.png",nn="/assets/image-20230608162715054.f5c023ca.png",sn="/assets/image-20230608162728816.c0e854fe.png",an="/assets/image-20230608162903986.363879b4.png",tn="/assets/image-20230608162919762.7a9fc1da.png",pn="/assets/image-20230608162931606.212b26f2.png",en="/assets/image-20230608163109335.91582713.png",on="/assets/image-20230608163124429.2f50f26c.png",cn="/assets/image-20230608163214094.9d29a59c.png",ln="/assets/image-20230608163228741.e0cdb056.png",un="/assets/image-20230608163334215.1c37d8ee.png",rn="/assets/image-20230608163349231.573ea8de.png",kn="/assets/image-20230608163432375.1265d52a.png",dn="/assets/image-20230608163448920.6ef5e172.png",mn="/assets/image-20230608163533247.71ba5066.png",vn="/assets/image-20230608163549968.343470e3.png",gn="/assets/image-20230608163658492.b35de313.png",bn="/assets/image-20230608163717388.c47da1e1.png",qn="/assets/image-20230608163753596.b6067c38.png",hn="/assets/image-20230608163814834.323e2e0c.png",_n="/assets/image-20230608163947592.df506010.png",yn="/assets/image-20230608164003900.9f1852b8.png",fn="/assets/image-20230608164148235.49b03ee6.png",Sn="/assets/image-20230608164202381.2cc1206b.png",xn="/assets/image-20230608164317713.f8a18f8e.png",jn="/assets/image-20230608164330101.2e53281e.png",wn="/assets/image-20230608164408064.7c4ced98.png",En="/assets/image-20230608164422770.e7232c87.png",Tn="/assets/image-20230608164508700.f2e950c2.png",Bn="/assets/image-20230608164527870.678c442a.png",Rn="/assets/image-20230608164628565.65968b84.png",Pn="/assets/image-20230608164644432.9b081950.png",An="/assets/image-20230608164731581.e1cfb0be.png",In="/assets/image-20230608164826102.cd853921.png",On="/assets/image-20230608164839742.ebe21288.png",Hn="/assets/image-20230608164920656.6323df96.png",zn="/assets/image-20230608164935032.3a307600.png",Dn="/assets/image-20230608165021969.b192ffd4.png",Gn="/assets/image-20230608165035897.a4ac3c78.png",Qn="/assets/image-20230608165122246.af29d08a.png",Un="/assets/image-20230608165135936.5b769426.png",Ln="/assets/image-20230608165214809.67241090.png",Mn="/assets/image-20230608165233059.ff992217.png",Fn="/assets/image-20230608165308990.e1ba11e2.png",Jn="/assets/image-20230608165322747.c3a243c9.png",Cn="/assets/image-20230608165358100.5fdb9794.png",Nn="/assets/image-20230608165421474.f77addfa.png",Xn="/assets/image-20230608165505932.3620d55f.png",Vn="/assets/image-20230608165520257.e541c3f0.png",Wn="/assets/image-20230608165618917.131c0a40.png",Kn="/assets/image-20230608165638643.8fbf1ddb.png",Yn="/assets/image-20230608165717886.72563047.png",Zn="/assets/image-20230608165734070.2b8009c4.png",$n="/assets/image-20230608171042884.19cc6917.png",ns="/assets/image-20230608171216695.1587fe30.png",ss="/assets/image-20230608171342554.150b1d70.png",as="/assets/image-20230608171423266.90ec2e46.png",ts="/assets/image-20230608171453037.de21115c.png",ps="/assets/image-20230608171828930.2fc1e77e.png",es="/assets/image-20230608171917045.2b2d3d44.png",os="/assets/image-20230608172000765.1d3e7386.png",cs="/assets/image-20230608172039229.5a920287.png",ls="/assets/image-20230608172213469.95a477ae.png",us="/assets/image-20230608172242455.b5ab83c8.png",is="/assets/image-20230608172450095.99fc208d.png",rs="/assets/image-20230608172550491.e6bc8bb2.png",ks="/assets/image-20230608172631223.cdc5a591.png",ds="/assets/image-20230608172707145.d5d2acf9.png",ms="/assets/image-20230608172746917.ad68d75a.png",vs="/assets/image-20230608172922987.fa37bcab.png",gs="/assets/image-20230608173034250.16dbe9c1.png",bs="/assets/image-20230608173117155.e7fd6ff6.png",qs="/assets/image-20230608173218249.df233716.png",hs="/assets/image-20230608173404477.a6a91fe4.png",_s="/assets/image-20230608173443170.0603e8f6.png",ys={},fs=n("h2",{id:"一、elasticsearch安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、elasticsearch安装","aria-hidden":"true"},"#"),s(" 一、Elasticsearch安装")],-1),Ss=n("h3",{id:"_1-1-下载软件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-下载软件","aria-hidden":"true"},"#"),s(" 1.1 下载软件")],-1),xs={href:"https://www.elastic.co/cn/",target:"_blank",rel:"noopener noreferrer"},js=n("p",null,"Elasticsearch 最新的版本是 7.11.2（截止 2021.3.10），我们选择 7.8.0 版本（最新版本半年前的版本）",-1),ws={href:"https://www.elastic.co/cn/downloads/past-releases#elasticsearch",target:"_blank",rel:"noopener noreferrer"},Es=p('<p><img src="'+u+'" alt="image-20230608152240300"></p><p>Elasticsearch 分为 Linux 和 Windows 版本，基于我们主要学习的是 Elasticsearch 的 Java客户端的使用，所以课程中使用的是安装较为简便的 Windows 版本。</p><p><img src="'+i+'" alt="image-20230608152358943"></p><h3 id="_1-2-安装软件" tabindex="-1"><a class="header-anchor" href="#_1-2-安装软件" aria-hidden="true">#</a> 1.2 安装软件</h3><p>Windows 版的 Elasticsearch 的安装很简单，解压即安装完毕，解压后的 Elasticsearch 的目录结构如下：</p><p><img src="'+r+'" alt="image-20230608152427931"></p><table><thead><tr><th>目录</th><th>含义</th></tr></thead><tbody><tr><td>bin</td><td>可执行脚本目录</td></tr><tr><td>config</td><td>配置目录</td></tr><tr><td>jdk</td><td>内置JDK目录</td></tr><tr><td>lib</td><td>类库</td></tr><tr><td>logs</td><td>日志目录</td></tr><tr><td>modules</td><td>模块目录</td></tr><tr><td>plugins</td><td>插件目录</td></tr></tbody></table><p>解压后，进入 bin 文件目录，点击 elasticsearch.bat 文件启动 ES 服务</p><blockquote><p>MAC用户可以参考Linux启动方式或者使用Homebrew来玩！</p></blockquote><p><img src="'+k+'" alt="image-20230608152707274"></p><p>注意：<code>9300</code>端口为Elasticsearch集群间组件的通信端口，<code>9200</code>端口为浏览器访问的<code>http协议RESTful端口</code>。</p>',11),Ts={href:"http://localhost:9200%EF%BC%8C%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C",target:"_blank",rel:"noopener noreferrer"},Bs=p('<p><img src="'+d+`" alt="image-20230608152858134"></p><h3 id="_1-3-问题解决" tabindex="-1"><a class="header-anchor" href="#_1-3-问题解决" aria-hidden="true">#</a> 1.3 问题解决</h3><ul><li>Elasticsearch 是使用 java 开发的，且 7.8 版本的 ES 需要 JDK 版本 1.8 以上，默认安装包带有 jdk 环境，如果系统配置 JAVA_HOME，那么使用系统默认的 JDK，如果没有配置使用自带的 JDK，一般建议使用系统配置的 JDK。</li><li>双击启动窗口闪退，通过路径访问追踪错误，如果是“空间不足”，请修改<code>config/jvm.options</code> 配置文件</li></ul><div class="language-jvm.options line-numbers-mode" data-ext="jvm.options"><pre class="language-jvm.options"><code># 设置 JVM 初始内存为 1G。此值可以设置与-Xmx 相同，以避免每次垃圾回收完成后 JVM 重新分配内存
# Xms represents the initial size of total heap space
# 设置 JVM 最大可用内存为 1G
# Xmx represents the maximum size of total heap space
-Xms1g
-Xmx1g
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、elasticsearch基本操作" tabindex="-1"><a class="header-anchor" href="#二、elasticsearch基本操作" aria-hidden="true">#</a> 二、Elasticsearch基本操作</h2><h3 id="_2-1-restful" tabindex="-1"><a class="header-anchor" href="#_2-1-restful" aria-hidden="true">#</a> 2.1 RESTFUL</h3><p>REST 指的是一组架构约束条件和原则。满足这些约束条件和原则的应用程序或设计就是 RESTful。Web 应用程序最重要的 REST 原则是，客户端和服务器之间的交互在请求之间是无状态的。从客户端到服务器的每个请求都必须包含理解请求所必需的信息。如果服务器在请求之间的任何时间点重启，客户端不会得到通知。此外，无状态请求可以由任何可用服务器回答，这十分适合云计算之类的环境。客户端可以缓存数据以改进性能。</p><p>在服务器端，应用程序状态和功能可以分为各种资源。资源是一个有趣的概念实体，它向客户端公开。资源的例子有：应用程序对象、数据库记录、算法等等。每个资源都使用 URI (Universal Resource Identifier) 得到一个唯一的地址。所有资源都共享统一的接口，以便在客户端和服务器之间传输状态。使用的是标准的 HTTP 方法，比如 GET、PUT、POST 和DELETE。</p><p>在 REST 样式的 Web 服务中，每个资源都有一个地址。资源本身都是方法调用的目标，方法列表对所有资源都是一样的。这些方法都是标准方法，包括 HTTP GET、POST、PUT、DELETE，还可能包括 HEAD 和 OPTIONS。简单的理解就是，如果想要访问互联网上的资源，就必须向资源所在的服务器发出请求，请求体中必须包含资源的网络路径，以及对资源进行的操作(增删改查)。</p><h3 id="_2-2-客户端安装" tabindex="-1"><a class="header-anchor" href="#_2-2-客户端安装" aria-hidden="true">#</a> 2.2 客户端安装</h3><p>如果直接通过浏览器向 Elasticsearch 服务器发请求，那么需要在发送的请求中包含HTTP 标准的方法，而 HTTP 的大部分特性且仅支持 GET 和 POST 方法。所以为了能方便地进行客户端的访问，可以使用 Postman 软件</p><p>Postman 是一款强大的网页调试工具，提供功能强大的 Web API 和 HTTP 请求调试。软件功能强大，界面简洁明晰、操作方便快捷，设计得很人性化。Postman 中文版能够发送</p><p>任何类型的 HTTP 请求 (GET, HEAD, POST, PUT..)，不仅能够表单提交，且可以附带任意类型请求体。</p>`,13),Rs={href:"https://www.getpostman.com",target:"_blank",rel:"noopener noreferrer"},Ps={href:"https://www.getpostman.com/apps",target:"_blank",rel:"noopener noreferrer"},As=p('<p>Apifox、Apipost等等……</p><p><img src="'+m+'" alt="image-20230608153303284"></p><h3 id="_2-3-数据格式" tabindex="-1"><a class="header-anchor" href="#_2-3-数据格式" aria-hidden="true">#</a> 2.3 数据格式</h3><p>Elasticsearch 是面向文档型数据库，一条数据在这里就是一个文档。为了方便大家理解，我们将 Elasticsearch 里存储文档数据和关系型数据库 MySQL 存储数据的概念进行一个类比：</p><p><img src="'+v+`" alt="image-20230608153337518"></p><p>ES 里的 Index 可以看做一个库，而 Types 相当于表，Documents 则相当于表的行。</p><p>这里 Types 的概念已经被逐渐弱化，Elasticsearch 6.X 中，一个 index 下已经只能包含一个type，Elasticsearch 7.X 中, Type 的概念已经被删除了。</p><p>6 用 JSON 作为文档序列化的格式，比如一条用户信息：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;sex&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Male&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;age&quot;</span> <span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
 <span class="token property">&quot;birthDate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1990/05/01&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;about&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;I love to go rock climbing&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;interests&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;sports&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;music&quot;</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-http操作" tabindex="-1"><a class="header-anchor" href="#_2-4-http操作" aria-hidden="true">#</a> 2.4 HTTP操作</h3><p>具体请参考如下进行在Postman中或者其他客户端软件进行测试：</p><blockquote><p>（1）创建索引</p></blockquote><p>对比关系型数据库，创建索引就等同于创建数据库</p>`,13),Is=n("strong",null,"PUT",-1),Os={href:"http://127.0.0.1:9200/shopping",target:"_blank",rel:"noopener noreferrer"},Hs=p('<p><img src="'+g+'" alt="image-20230608153644535"></p><p>请求后，服务器返回响应</p><p><img src="'+b+`" alt="image-20230608153700608"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token string">&quot;acknowledged&quot;</span>【响应结果】<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> # <span class="token boolean">true</span> 操作成功
 <span class="token string">&quot;shards_acknowledged&quot;</span>【分片结果】<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> # 分片操作成功
 <span class="token string">&quot;index&quot;</span>【索引名称】<span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>
<span class="token punctuation">}</span>
# 注意：创建索引库的分片数默认 <span class="token number">1</span> 片，在 <span class="token number">7.0</span>.<span class="token number">0</span> 之前的 Elasticsearch 版本中，默认 <span class="token number">5</span> 片
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果重复添加索引，会返回错误信息</p><p><img src="`+q+'" alt="image-20230608153757107"></p><blockquote><p>（2）查看所有索引</p></blockquote>',7),zs=n("strong",null,"GET",-1),Ds={href:"http://127.0.0.1:9200/_cat/indices?v",target:"_blank",rel:"noopener noreferrer"},Gs=p('<p><img src="'+h+'" alt="image-20230608153835679"></p><p>这里请求路径中的_cat 表示查看的意思，indices 表示索引，所以整体含义就是查看当前 ES服务器中的所有索引，就好像 MySQL 中的 show tables 的感觉，服务器响应结果如下</p><p><img src="'+_+'" alt="image-20230608153858415"></p><table><thead><tr><th>表头</th><th>含义</th></tr></thead><tbody><tr><td>health</td><td>当前服务器健康状态：<br><strong>green</strong>(集群完整) <strong>yellow</strong>(单点正常、集群不完整) red(单点不正常)</td></tr><tr><td>status</td><td>索引打开、关闭状态</td></tr><tr><td>index</td><td>索引名</td></tr><tr><td>uuid</td><td>索引唯一编号</td></tr><tr><td>pri</td><td>主分片数量</td></tr><tr><td>rep</td><td>副本数量</td></tr><tr><td>docs.count</td><td>可用文档数量</td></tr><tr><td>docs.deleted</td><td>文档删除状态（逻辑删除）</td></tr><tr><td>store.size</td><td>主分片和副分片整体占空间大小</td></tr><tr><td>pri.store.size</td><td>主分片占空间大小</td></tr></tbody></table><blockquote><p>（3）查看单个索引</p></blockquote>',5),Qs=n("strong",null,"GET",-1),Us={href:"http://127.0.0.1:9200/shopping",target:"_blank",rel:"noopener noreferrer"},Ls=p('<p><img src="'+y+'" alt="image-20230608154259460"></p><p>查看索引向 ES 服务器发送的请求路径和创建索引是一致的。但是 HTTP 方法不一致。这里可以体会一下 RESTful 的意义，</p><p>请求后，服务器响应结果如下：</p><p><img src="'+f+`" alt="image-20230608155300852"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
        <span class="token string">&quot;shopping&quot;</span>【索引名】<span class="token operator">:</span> <span class="token punctuation">{</span> 
        <span class="token string">&quot;aliases&quot;</span>【别名】<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;mappings&quot;</span>【映射】<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&quot;settings&quot;</span>【设置】<span class="token operator">:</span> <span class="token punctuation">{</span>
         <span class="token string">&quot;index&quot;</span>【设置 - 索引】<span class="token operator">:</span> <span class="token punctuation">{</span>
         <span class="token string">&quot;creation_date&quot;</span>【设置 - 索引 - 创建时间】<span class="token operator">:</span> <span class="token string">&quot;1614265373911&quot;</span><span class="token punctuation">,</span>
         <span class="token string">&quot;number_of_shards&quot;</span>【设置 - 索引 - 主分片数量】<span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;number_of_replicas&quot;</span>【设置 - 索引 - 副分片数量】<span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;uuid&quot;</span>【设置 - 索引 - 唯一标识】<span class="token operator">:</span> <span class="token string">&quot;eI5wemRERTumxGCc1bAk2A&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;version&quot;</span>【设置 - 索引 - 版本】<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;created&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7080099&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&quot;provided_name&quot;</span>【设置 - 索引 - 名称】<span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>(4)删除索引</p></blockquote>`,6),Ms=n("strong",null,"DELETE",-1),Fs={href:"http://127.0.0.1:9200/shopping",target:"_blank",rel:"noopener noreferrer"},Js=p('<p><img src="'+S+'" alt="image-20230608155845259"></p><p><img src="'+x+'" alt="image-20230608155857039"></p><p>重新访问索引时，服务器返回响应：<strong>索引不存在</strong></p><p><img src="'+j+'" alt="image-20230608155921736"></p><p><img src="'+w+'" alt="image-20230608155933560"></p><h3 id="_2-5-文档操作" tabindex="-1"><a class="header-anchor" href="#_2-5-文档操作" aria-hidden="true">#</a> 2.5 文档操作</h3><blockquote><p>（1）创建文档</p></blockquote><p>索引已经创建好了，接下来我们来创建文档，并添加数据。这里的文档可以类比为关系型数据库中的表数据，添加的数据格式为 JSON 格式</p>',8),Cs=n("strong",null,"POST",-1),Ns={href:"http://127.0.0.1:9200/shopping**/_doc",target:"_blank",rel:"noopener noreferrer"},Xs=p(`<p>请求体内容为：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;./images&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://www.gulixueyuan.com/xm.jpg&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">3999.00</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+E+'" alt="image-20230608160052069"></p><p>此处发送请求的方式必须为 <strong>POST</strong>，不能是 <strong>PUT</strong>，否则会发生错误</p><p><img src="'+T+'" alt="image-20230608160110525"></p><p>服务器响应结果如下：</p><p><img src="'+B+`" alt="image-20230608160131168"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token string">&quot;_index&quot;</span>【索引】<span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
 <span class="token string">&quot;_type&quot;</span>【类型-文档】<span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
 <span class="token string">&quot;_id&quot;</span>【唯一标识】<span class="token operator">:</span> <span class="token string">&quot;Xhsa2ncBlvF_7lxyCE9G&quot;</span><span class="token punctuation">,</span> #可以类比为 MySQL 中的主键，随机生成
 <span class="token string">&quot;_version&quot;</span>【版本】<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
 <span class="token string">&quot;result&quot;</span>【结果】<span class="token operator">:</span> <span class="token string">&quot;created&quot;</span><span class="token punctuation">,</span> #这里的 create 表示创建成功
 <span class="token string">&quot;_shards&quot;</span>【分片】<span class="token operator">:</span> <span class="token punctuation">{</span>
 <span class="token string">&quot;total&quot;</span>【分片 - 总数】<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
 <span class="token string">&quot;successful&quot;</span>【分片 - 成功】<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
 <span class="token string">&quot;failed&quot;</span>【分片 - 失败】<span class="token operator">:</span> <span class="token number">0</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
 <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的数据创建后，由于没有指定数据唯一性标识（ID），默认情况下，ES 服务器会随机生成一个。</p>`,9),Vs={href:"http://127.0.0.1:9200/shopping/_doc/**1",target:"_blank",rel:"noopener noreferrer"},Ws=n("p",null,[n("img",{src:R,alt:"image-20230608160344565"})],-1),Ks=n("p",null,[n("img",{src:P,alt:"image-20230608160358416"})],-1),Ys=n("p",null,"此处需要注意：如果增加数据时明确数据主键，那么请求方式也可以为 PUT",-1),Zs=n("blockquote",null,[n("p",null,"（2）查看文档")],-1),$s=n("p",null,"查看文档时，需要指明文档的唯一性标识，类似于 MySQL 中数据的主键查询",-1),na=n("strong",null,"GET",-1),sa={href:"http://127.0.0.1:9200/shopping**/_doc/1",target:"_blank",rel:"noopener noreferrer"},aa=p('<p><img src="'+A+'" alt="image-20230608160440963"></p><p><img src="'+I+`" alt="image-20230608160456120"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token string">&quot;_index&quot;</span>【索引】<span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
 <span class="token string">&quot;_type&quot;</span>【文档类型】<span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
 <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
 <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
 <span class="token string">&quot;found&quot;</span>【查询结果】<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> # <span class="token boolean">true</span> 表示查找到，<span class="token boolean">false</span> 表示未查找到
 <span class="token string">&quot;_source&quot;</span>【文档源信息】<span class="token operator">:</span> <span class="token punctuation">{</span>
 <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;华为手机&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;华为&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;./images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://www.gulixueyuan.com/hw.jpg&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4999.00</span>
 <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>（3）修改文档</p></blockquote><p>和新增文档一样，输入相同的 URL 地址请求，如果请求体变化，会将原有的数据内容覆盖</p>`,5),ta=n("strong",null,"POST",-1),pa={href:"http://127.0.0.1:9200/shopping**/_doc/1",target:"_blank",rel:"noopener noreferrer"},ea=p(`<p>请求体内容为：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为手机&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;./images&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://www.gulixueyuan.com/hw.jpg&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">4999</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+O+'" alt="image-20230608160615391"></p><p>修改成功后，服务器响应结果：</p><p><img src="'+H+`" alt="image-20230608160629872"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span><span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span><span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;_version&quot;</span>【版本】<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token string">&quot;result&quot;</span>【结果】<span class="token operator">:</span> <span class="token string">&quot;updated&quot;</span><span class="token punctuation">,</span> # updated 表示数据被更新
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span><span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span><span class="token number">2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>（4）修改字段</p></blockquote><p>修改数据时，也可以只修改某一给条数据的局部信息</p>`,8),oa=n("strong",null,"POST",-1),ca={href:"http://127.0.0.1:9200/shopping/**_update/1",target:"_blank",rel:"noopener noreferrer"},la=p(`<p>请求体内容为：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;doc&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">3000</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+z+'" alt="image-20230608160737415"></p><p>修改成功后，服务器响应结果：</p><p><img src="'+D+'" alt="image-20230608160801664"></p><p>根据唯一性标识，查询文档数据，文档数据已经更新</p><p><img src="'+G+'" alt="image-20230608160818670"></p><p><img src="'+Q+'" alt="image-20230608160829252"></p><blockquote><p>（5）删除文档</p></blockquote><p>删除一个文档不会立即从磁盘上移除，它只是被标记成已删除（逻辑删除）。</p>',10),ua=n("strong",null,"DELETE",-1),ia={href:"http://127.0.0.1:9200/shopping**/_doc/1",target:"_blank",rel:"noopener noreferrer"},ra=p('<p><img src="'+U+'" alt="image-20230608160856707"></p><p>删除成功，服务器响应结果：</p><p><img src="'+L+`" alt="image-20230608160913142"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span><span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span><span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;_version&quot;</span>【版本】<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> #对数据的操作，都会更新版本
  <span class="token string">&quot;result&quot;</span>【结果】<span class="token operator">:</span> <span class="token string">&quot;deleted&quot;</span><span class="token punctuation">,</span> # deleted 表示数据被标记为删除
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span><span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span><span class="token number">2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除后再查询当前文档信息</p><p><img src="`+M+'" alt="image-20230608160947873"></p><p><img src="'+F+'" alt="image-20230608161001568"></p><p>如果删除一个并不存在的文档</p><p><img src="'+J+'" alt="image-20230608161018933"></p><p><img src="'+C+`" alt="image-20230608161033008"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span><span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span><span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&quot;result&quot;</span>【结果】<span class="token operator">:</span> <span class="token string">&quot;not_found&quot;</span><span class="token punctuation">,</span> # not_found 表示未查找到
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span><span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span><span class="token number">2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>（6）条件删除文档</p></blockquote><p>一般删除数据都是根据文档的唯一性标识进行删除，实际操作时，也可以根据条件对多条数据进行删除</p><p>首先分别增加多条数据:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;./images&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://www.gulixueyuan.com/xm.jpg&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">4000</span>
<span class="token punctuation">}</span>
<span class="token punctuation">{</span>
    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为手机&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;华为&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;./images&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://www.gulixueyuan.com/hw.jpg&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">4000</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+N+'" alt="image-20230608161533922"></p><p><img src="'+X+'" alt="image-20230608161543756"></p>',17),ka=n("strong",null,"POST",-1),da={href:"http://127.0.0.1:9200/shopping**/_delete_by_query",target:"_blank",rel:"noopener noreferrer"},ma=p(`<p>请求体内容为：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">4000</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+V+'" alt="image-20230608161645225"></p><p>删除成功后，服务器响应结果：</p><p><img src="'+W+`" alt="image-20230608161702446"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token string">&quot;took&quot;</span>【耗时】<span class="token operator">:</span> <span class="token number">175</span><span class="token punctuation">,</span>
  <span class="token string">&quot;timed_out&quot;</span>【是否超时】<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token string">&quot;total&quot;</span>【总数】<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token string">&quot;deleted&quot;</span>【删除数量】<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;batches&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;version_conflicts&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;noops&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;retries&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;bulk&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;search&quot;</span><span class="token operator">:</span><span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;throttled_millis&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;requests_per_second&quot;</span><span class="token operator">:</span><span class="token number">-1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;throttled_until_millis&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;failures&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>

    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-映射操作" tabindex="-1"><a class="header-anchor" href="#_2-6-映射操作" aria-hidden="true">#</a> 2.6 映射操作</h3><p>有了索引库，等于有了数据库中的 database。</p><p>接下来就需要建索引库(index)中的映射了，类似于数据库(database)中的表结构(table)。创建数据库表需要设置字段名称，类型，长度，约束等；索引库也一样，需要知道这个类型下有哪些字段，每个字段有哪些约束信息，这就叫做映射(mapping)。</p><blockquote><p>(1)创建映射</p></blockquote>`,10),va=n("strong",null,"PUT",-1),ga={href:"http://127.0.0.1:9200/student**/_mapping",target:"_blank",rel:"noopener noreferrer"},ba=p(`<p>请求内容为：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span><span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span><span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;long&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span><span class="token boolean">false</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+K+'" alt="image-20230608162313963"></p><p>服务器响应结果如下：</p><p><img src="'+Y+`" alt="image-20230608162329802"></p><p>映射数据说明：</p><ul><li><p>字段名：任意填写，下面指定许多属性，例如：title、subtitle、./images、price</p></li><li><p>type：类型，Elasticsearch 中支持的数据类型非常丰富，说几个关键的：</p><ul><li><p>String 类型，又分两种：</p><pre><code>text：可分词

keyword：不可分词，数据会作为完整字段进行匹配
</code></pre></li></ul></li><li><p>Numerical：数值类型，分两类</p><ul><li>基本数据类型：long、integer、short、byte、double、float、half_float</li><li>浮点数的高精度类型：scaled_float</li></ul></li><li><p>Date：日期类型</p></li><li><p>Array：数组类型</p></li><li><p>Object：对象</p></li><li><p>index：是否索引，默认为 true，也就是说你不进行任何配置，所有字段都会被索引。</p><ul><li>true：字段会被索引，则可以用来进行搜索</li><li>false：字段不会被索引，不能用来搜索</li></ul></li><li><p>store：是否将数据进行独立存储，默认为 false</p><p>原始的文本会存储在_source 里面，默认情况下其他提取出来的字段都不是独立存储的，是从_source 里面提取出来的。当然你也可以独立的存储某个字段，只要设置&quot;store&quot;: true 即可，获取独立存储的字段要比从_source 中解析快得多，但是也会占用更多的空间，所以要根据实际业务需求来设置。</p></li><li><p>analyzer：分词器，这里的 ik_max_word 即使用 ik 分词器,后面会有专门的章节学习</p></li></ul><blockquote><p>（2）查看映射</p></blockquote>`,8),qa=n("strong",null,"GET",-1),ha={href:"http://127.0.0.1:9200/student**/_mapping",target:"_blank",rel:"noopener noreferrer"},_a=n("p",null,[n("img",{src:Z,alt:"image-20230608162600497"})],-1),ya=n("p",null,"服务器响应结果如下：",-1),fa=n("p",null,[n("img",{src:$,alt:"image-20230608162618627"})],-1),Sa=n("blockquote",null,[n("p",null,"（3）索引映射关联")],-1),xa=n("strong",null,"PUT",-1),ja={href:"http://127.0.0.1:9200/student1",target:"_blank",rel:"noopener noreferrer"},wa=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index&quot;</span><span class="token operator">:</span><span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index&quot;</span><span class="token operator">:</span><span class="token boolean">false</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;long&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index&quot;</span><span class="token operator">:</span><span class="token boolean">false</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+nn+'" alt="image-20230608162715054"></p><p>服务器响应结果如下：</p><p><img src="'+sn+`" alt="image-20230608162728816"></p><h3 id="_2-7-高级查询" tabindex="-1"><a class="header-anchor" href="#_2-7-高级查询" aria-hidden="true">#</a> 2.7 高级查询</h3><p>Elasticsearch 提供了基于 JSON 提供完整的查询 DSL 来定义查询</p><p>定义数据 :</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code># POST /student/_doc/<span class="token number">1001</span>
<span class="token punctuation">{</span>
<span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">30</span>
<span class="token punctuation">}</span>
# POST /student/_doc/<span class="token number">1002</span>
<span class="token punctuation">{</span>
<span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;lisi&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;lisi&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">20</span> <span class="token punctuation">}</span>
# POST /student/_doc/<span class="token number">1003</span>
<span class="token punctuation">{</span>
<span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;wangwu&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;wangwu&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">40</span> <span class="token punctuation">}</span>
# POST /student/_doc/<span class="token number">1004</span>
<span class="token punctuation">{</span>
<span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan1&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan1&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">50</span> <span class="token punctuation">}</span>
# POST /student/_doc/<span class="token number">1005</span>
<span class="token punctuation">{</span>
<span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan2&quot;</span><span class="token punctuation">,</span>
<span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan2&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span>
 <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">30</span> 
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>（1）查询所有文档</p></blockquote>`,9),Ea=n("strong",null,"GET",-1),Ta={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Ba=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
# <span class="token string">&quot;query&quot;</span>：这里的 query 代表一个查询对象，里面可以有不同的查询属性
# <span class="token string">&quot;match_all&quot;</span>：查询类型，例如：match_all(代表查询所有)， match，term ， range 等等
# <span class="token punctuation">{</span>查询条件<span class="token punctuation">}</span>：查询条件会根据类型的不同，写法也有差异
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+an+'" alt="image-20230608162903986"></p><p>服务器响应结果如下：</p><p><img src="'+tn+'" alt="image-20230608162919762"></p><p><img src="'+pn+`" alt="image-20230608162931606"></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
     <span class="token property">&quot;took【查询花费时间，单位毫秒】&quot;</span> <span class="token operator">:</span> <span class="token number">1116</span><span class="token punctuation">,</span>
     <span class="token property">&quot;timed_out【是否超时】&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
     <span class="token property">&quot;_shards【分片信息】&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
     <span class="token property">&quot;total【总数】&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
     <span class="token property">&quot;successful【成功】&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
     <span class="token property">&quot;skipped【忽略】&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
     <span class="token property">&quot;failed【失败】&quot;</span> <span class="token operator">:</span> <span class="token number">0</span>
     <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token property">&quot;hits【搜索命中结果】&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
     <span class="token string">&quot;total&quot;</span>【搜索条件匹配的文档总数】<span class="token operator">:</span> <span class="token punctuation">{</span>
     <span class="token string">&quot;value&quot;</span>【总命中计数的值】<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
     <span class="token string">&quot;relation&quot;</span>【计数规则】<span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span> # eq 表示计数准确， gte 表示计数不准确
     <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token property">&quot;max_score【匹配度分值】&quot;</span> <span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
     <span class="token property">&quot;hits【命中结果集合】&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
     。。。
  <span class="token punctuation">}</span>
 <span class="token punctuation">]</span>
 <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>（2）匹配查询</p></blockquote><p>match 匹配类型查询，会把查询条件进行分词，然后进行查询，多个词条之间是 or 的关系</p>`,8),Ra={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Pa=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+en+'" alt="image-20230608163109335"></p><p>服务器响应结果为：</p><p><img src="'+on+'" alt="image-20230608163124429"></p><blockquote><p>(3)字段匹配查询</p></blockquote><p>multi_match 与 match 类似，不同的是它可以在多个字段中查询。</p>',6),Aa={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Ia=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;multi_match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;nickname&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+cn+'" alt="image-20230608163214094"></p><p>服务器响应结果：</p><p><img src="'+ln+'" alt="image-20230608163228741"></p><blockquote><p>（4）关键字精准查询</p></blockquote><p>term 查询，精确的关键词匹配查询，不对查询条件进行分词。</p>',6),Oa={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Ha=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;term&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;value&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+un+'" alt="image-20230608163334215"></p><p>服务器响应结果：</p><p><img src="'+rn+'" alt="image-20230608163349231"></p><blockquote><p>（5）多关键字精准查询</p></blockquote><p>terms 查询和 term 查询一样，但它允许你指定多值进行匹配。</p><p>如果这个字段包含了指定值中的任何一个值，那么这个文档满足条件，类似于 mysql 的 in</p>',7),za={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Da=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;terms&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;lisi&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+kn+'" alt="image-20230608163432375"></p><p>服务器响应结果：</p><p><img src="'+dn+'" alt="image-20230608163448920"></p><blockquote><p>（6）指定查询字段</p></blockquote><p>默认情况下，Elasticsearch 在搜索的结果中，会把文档中保存在_source 的所有字段都返回。</p><p>如果我们只想获取其中的部分字段，我们可以添加_source 的过滤</p>',7),Ga={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Qa=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;nickname&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;terms&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token string">&quot;zhangsan&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+mn+'" alt="image-20230608163533247"></p><p>服务器响应结果：</p><p><img src="'+vn+'" alt="image-20230608163549968"></p><blockquote><p>(7)过滤字段</p></blockquote><p>我们也可以通过：</p><ul><li>includes：来指定想要显示的字段</li><li>excludes：来指定不想要显示的字段</li></ul>',7),Ua={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},La=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;includes&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
            <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;nickname&quot;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;terms&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token string">&quot;zhangsan&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+gn+'" alt="image-20230608163658492"></p><p>服务器响应结果：</p><p><img src="'+bn+'" alt="image-20230608163717388"></p>',4),Ma=n("strong",null,"GET",-1),Fa={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Ja=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;excludes&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
            <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;nickname&quot;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;terms&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token string">&quot;zhangsan&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+qn+'" alt="image-20230608163753596"></p><p>服务器响应结果:</p><p><img src="'+hn+'" alt="image-20230608163814834"></p><blockquote><p>（8）组合查询</p></blockquote><p><code>bool</code>把各种其它查询通过<code>must</code>（必须 ）、<code>must_not</code>（必须不）、<code>should</code>（应该）的方</p><p>式进行组合</p>',7),Ca=n("strong",null,"GET",-1),Na={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Xa=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;bool&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;must&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;must_not&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                        <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token string">&quot;40&quot;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;should&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                        <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_n+'" alt="image-20230608163947592"></p><p>服务器响应结果：</p><p><img src="'+yn+'" alt="image-20230608164003900"></p><blockquote><p>（9）范围查询</p></blockquote><p>range 查询找出那些落在指定区间内的数字或者时间。range 查询允许以下字符</p><table><thead><tr><th>操作符</th><th>说明</th></tr></thead><tbody><tr><td>gt</td><td>大于&gt;</td></tr><tr><td>gte</td><td>大于等于&gt;=</td></tr><tr><td>lt</td><td>小于&lt;</td></tr><tr><td>lte</td><td>小于等于&lt;=</td></tr></tbody></table>',7),Va=n("strong",null,"GET",-1),Wa={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Ka=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;range&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;gte&quot;</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">,</span>
                <span class="token property">&quot;lte&quot;</span><span class="token operator">:</span><span class="token number">35</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+fn+'" alt="image-20230608164148235"></p><p>服务器响应结果：</p><p><img src="'+Sn+'" alt="image-20230608164202381"></p><blockquote><p>(10)模糊查询</p></blockquote><p>返回包含与搜索字词相似的字词的文档。</p><p>编辑距离是将一个术语转换为另一个术语所需的一个字符更改的次数。这些更改可以包括：</p><ul><li><p>更改字符（box → fox）</p></li><li><p>删除字符（black → lack）</p></li><li><p>插入字符（sic → sick）</p></li><li><p>转置两个相邻字符（act → cat）</p></li></ul><p>为了找到相似的术语，fuzzy 查询会在指定的编辑距离内创建一组搜索词的所有可能的变体或扩展。然后查询返回每个扩展的完全匹配。</p><p>通过 fuzziness 修改编辑距离。一般使用默认值 AUTO，根据术语的长度生成编辑距离。</p>',10),Ya=n("strong",null,"GET",-1),Za={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},$a=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;fuzzy&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;value&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+xn+'" alt="image-20230608164317713"></p><p>服务器响应结果：</p><p><img src="'+jn+'" alt="image-20230608164330101"></p>',4),nt=n("strong",null,"GET",-1),st={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},at=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;fuzzy&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;value&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;fuzziness&quot;</span><span class="token operator">:</span><span class="token number">2</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+wn+'" alt="image-20230608164408064"></p><p>服务器响应结果：</p><p><img src="'+En+'" alt="image-20230608164422770"></p><blockquote><p>（11）单字段排序</p></blockquote><p>sort 可以让我们按照不同的字段进行排序，并且通过 order 指定排序的方式。desc 降序，asc升序。</p>',6),tt={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},pt=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;order&quot;</span><span class="token operator">:</span><span class="token string">&quot;desc&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Tn+'" alt="image-20230608164508700"></p><p>服务器响应结果：</p><p><img src="'+Bn+'" alt="image-20230608164527870"></p><blockquote><p>（12）多字段排序</p></blockquote><p>假定我们想要结合使用 age 和 _score 进行查询，并且匹配的结果首先按照年龄排序，然后按照相关性得分排序</p>',6),et=n("strong",null,"GET",-1),ot={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},ct=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;order&quot;</span><span class="token operator">:</span><span class="token string">&quot;desc&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;order&quot;</span><span class="token operator">:</span><span class="token string">&quot;desc&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Rn+'" alt="image-20230608164628565"></p><p>服务器响应结果：</p><p><img src="'+Pn+'" alt="image-20230608164644432"></p><blockquote><p>（13）高亮查询</p></blockquote><p>在进行关键字搜索时，搜索出的内容中的关键字会显示不同的颜色，称之为高亮。</p><ul><li>在百度搜索“京东”</li></ul><p><img src="'+An+'" alt="image-20230608164731581"></p><p>Elasticsearch 可以对查询内容中的关键字部分，进行标签和样式(高亮)的设置。</p><p>在使用 match 查询的同时，加上一个 highlight 属性：</p><ul><li>pre_tags：前置标签</li><li>post_tags：后置标签</li><li>fields：需要高亮的字段</li><li>title：这里声明 title 字段需要高亮，后面可以为这个字段设置特有配置，也可以空</li></ul>',11),lt={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},ut=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;zhangsan&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;highlight&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;pre_tags&quot;</span><span class="token operator">:</span><span class="token string">&quot;&lt;font color=&#39;red&#39;&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;post_tags&quot;</span><span class="token operator">:</span><span class="token string">&quot;&lt;/font&gt;&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+In+'" alt="image-20230608164826102"></p><p>服务器响应结果：</p><p><img src="'+On+'" alt="image-20230608164839742"></p><blockquote><p>（14）分页查询</p></blockquote><p>from：当前页的起始索引，默认从 0 开始。 from = (pageNum - 1) * size</p><p>size：每页显示多少条</p>',7),it=n("strong",null,"GET",-1),rt={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},kt=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;order&quot;</span><span class="token operator">:</span><span class="token string">&quot;desc&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;from&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Hn+'" alt="image-20230608164920656"></p><p>服务器响应结果：</p><p><img src="'+zn+'" alt="image-20230608164935032"></p><blockquote><p>（15）聚合查询</p></blockquote><p>聚合允许使用者对 es 文档进行统计分析，类似与关系型数据库中的 group by，当然还有很多其他的聚合，例如取最大值、平均值等等。</p><ul><li>对某个字段取最大值 max</li></ul>',7),dt={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},mt=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;max_age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;max&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;age&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Dn+'" alt="image-20230608165021969"></p><p>服务器响应结果：</p><p><img src="'+Gn+'" alt="image-20230608165035897"></p><ul><li>对某个字段取最小值 min</li></ul>',5),vt={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},gt=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;min_age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;min&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;age&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Qn+'" alt="image-20230608165122246"></p><p>服务器响应结果：</p><p><img src="'+Un+'" alt="image-20230608165135936"></p>',4),bt={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},qt=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;sum_age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;sum&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;age&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Ln+'" alt="image-20230608165214809"></p><p>服务器响应结果：</p><p><img src="'+Mn+'" alt="image-20230608165233059"></p><ul><li>对某个字段取平均值 avg</li></ul>',5),ht={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},_t=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;avg_age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;avg&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;age&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Fn+'" alt="image-20230608165308990"></p><p>服务器响应结果：</p><p><img src="'+Jn+'" alt="image-20230608165322747"></p><ul><li>对某个字段的值进行去重之后再取总数</li></ul>',5),yt={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},ft=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;distinct_age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;cardinality&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;age&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Cn+'" alt="image-20230608165358100"></p><p>服务器响应结果：</p><p><img src="'+Nn+'" alt="image-20230608165421474"></p><ul><li>State 聚合</li></ul><p>stats 聚合，对某个字段一次性返回 count，max，min，avg 和 sum 五个指标</p>',6),St={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},xt=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;stats_age&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;stats&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;age&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Xn+'" alt="image-20230608165505932"></p><p>服务器响应结果：</p><p><img src="'+Vn+'" alt="image-20230608165520257"></p><blockquote><p>（16）桶聚合查询</p></blockquote><p>桶聚和相当于 sql 中的 group by 语句</p><ul><li>terms 聚合，分组统计</li></ul>',7),jt={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},wt=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;age_groupby&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;terms&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;age&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Wn+'" alt="image-20230608165618917"></p><p>服务器响应结果：</p><p><img src="'+Kn+'" alt="image-20230608165638643"></p><ul><li>在 terms 分组下再进行聚合</li></ul>',5),Et={href:"http://127.0.0.1:9200/student/_search",target:"_blank",rel:"noopener noreferrer"},Tt=p(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;age_groupby&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;terms&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;age&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+Yn+'" alt="image-20230608165717886"></p><p>服务器响应结果：</p><p><img src="'+Zn+`" alt="image-20230608165734070"></p><h2 id="三、java-api操作" tabindex="-1"><a class="header-anchor" href="#三、java-api操作" aria-hidden="true">#</a> 三、Java API操作</h2><p>Elasticsearch 软件是由 Java 语言开发的，所以也可以通过 Java API 的方式对 Elasticsearch服务进行访问</p><h3 id="_3-1-创建maven项目" tabindex="-1"><a class="header-anchor" href="#_3-1-创建maven项目" aria-hidden="true">#</a> 3.1 创建Maven项目</h3><p>我们在 IDEA 开发工具中创建 Maven 项目(模块也可)ES</p><p>改POM，添加maven依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- elasticsearch 的客户端 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.elasticsearch.client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch-rest-high-level-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- elasticsearch 依赖 2.x 的 log4j --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.logging.log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.8.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.9.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- junit 单元测试 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-客户端对象" tabindex="-1"><a class="header-anchor" href="#_3-2-客户端对象" aria-hidden="true">#</a> 3.2 客户端对象</h3><p>创建 ESClient_Test 类，代码中创建Elasticsearch 客户端对象</p><p>因为早期版本的客户端对象已经不再推荐使用，且在未来版本中会被删除，所以这里我们采用高级 REST 客户端对象</p><p><img src="`+$n+`" alt="image-20230608171042884"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ESClient_Test</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 创建es客户端</span>
        <span class="token class-name">RestHighLevelClient</span> esClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span>
                <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">9200</span><span class="token punctuation">,</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 关闭es客户端</span>
        esClient<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：9200</strong> 端口为Elasticsearch 的Web 通信端口**，**localhost 为启动ES 服务的主机名执行代码，查看控制台信息：</p><p><img src="`+ns+`" alt="image-20230608171216695"></p><h3 id="_3-3-索引操作" tabindex="-1"><a class="header-anchor" href="#_3-3-索引操作" aria-hidden="true">#</a> 3.3 索引操作</h3><h4 id="_1-创建索引" tabindex="-1"><a class="header-anchor" href="#_1-创建索引" aria-hidden="true">#</a> 1.创建索引</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建索引 - 请求对象</span>
<span class="token class-name">CreateIndexRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateIndexRequest</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 发送请求，获取响应</span>
<span class="token class-name">CreateIndexResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">boolean</span> acknowledged <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">isAcknowledged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 响应状态</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;操作状态 = &quot;</span> <span class="token operator">+</span> acknowledged<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作结果:</p><p><img src="`+ss+`" alt="image-20230608171342554"></p><h4 id="_2-查看索引" tabindex="-1"><a class="header-anchor" href="#_2-查看索引" aria-hidden="true">#</a> 2.查看索引</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 查询索引 - 请求对象</span>
<span class="token class-name">GetIndexRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetIndexRequest</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 发送请求，获取响应</span>
<span class="token class-name">GetIndexResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;aliases:&quot;</span><span class="token operator">+</span>response<span class="token punctuation">.</span><span class="token function">getAliases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;mappings:&quot;</span><span class="token operator">+</span>response<span class="token punctuation">.</span><span class="token function">getMappings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;settings:&quot;</span><span class="token operator">+</span>response<span class="token punctuation">.</span><span class="token function">getSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作结果:</p><p><img src="`+as+`" alt="image-20230608171423266"></p><h4 id="_3-删除索引" tabindex="-1"><a class="header-anchor" href="#_3-删除索引" aria-hidden="true">#</a> 3.删除索引</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 删除索引 - 请求对象</span>
<span class="token class-name">DeleteIndexRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteIndexRequest</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 发送请求，获取响应</span>
<span class="token class-name">AcknowledgedResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 操作结果</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;操作结果 ： &quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">isAcknowledged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作结果:</p><p><img src="`+ts+`" alt="image-20230608171453037"></p><h3 id="_3-4-文档操作" tabindex="-1"><a class="header-anchor" href="#_3-4-文档操作" aria-hidden="true">#</a> 3.4 文档操作</h3><h4 id="_1-新增文档" tabindex="-1"><a class="header-anchor" href="#_1-新增文档" aria-hidden="true">#</a> 1.新增文档</h4><p>创建数据模型</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> sex<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> sex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span><span class="token class-name">String</span> sex<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建数据，添加到文档中</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 新增文档 - 请求对象</span>
<span class="token class-name">IndexRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置索引及唯一性标识</span>
request<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建数据对象</span>
<span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> user<span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> productJson <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 添加文档数据，数据格式为 JSON 格式</span>
request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>productJson<span class="token punctuation">,</span><span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 客户端发送请求，获取响应对象</span>
<span class="token class-name">IndexResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">////3.打印结果信息</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;_index:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;_id:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;_result:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作结果：</p><p><img src="`+ps+`" alt="image-20230608171828930"></p><h4 id="_2-修改索引" tabindex="-1"><a class="header-anchor" href="#_2-修改索引" aria-hidden="true">#</a> 2.修改索引</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 修改文档 - 请求对象</span>
<span class="token class-name">UpdateRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 配置修改参数</span>
request<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置请求体，对数据进行修改</span>
request<span class="token punctuation">.</span><span class="token function">doc</span><span class="token punctuation">(</span><span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">,</span> <span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;女&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 客户端发送请求，获取响应对象</span>
<span class="token class-name">UpdateResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;_index:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;_id:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;_result:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><p><img src="`+es+`" alt="image-20230608171917045"></p><h4 id="_3-查询文档" tabindex="-1"><a class="header-anchor" href="#_3-查询文档" aria-hidden="true">#</a> 3.查询文档</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//1.创建请求对象</span>
<span class="token class-name">GetRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//2.客户端发送请求，获取响应对象</span>
<span class="token class-name">GetResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">////3.打印结果信息</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;_index:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;_type:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;_id:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;source:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><p><img src="`+os+`" alt="image-20230608172000765"></p><h4 id="_4-删除文档" tabindex="-1"><a class="header-anchor" href="#_4-删除文档" aria-hidden="true">#</a> 4.删除文档</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//创建请求对象</span>
<span class="token class-name">DeleteRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//客户端发送请求，获取响应对象</span>
<span class="token class-name">DeleteResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打印信息System.out.println(response.toString());</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><p><img src="`+cs+`" alt="image-20230608172039229"></p><h4 id="_5-批量操作" tabindex="-1"><a class="header-anchor" href="#_5-批量操作" aria-hidden="true">#</a> 5.批量操作</h4><blockquote><p>批量新增</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//创建批量新增请求对象</span>
<span class="token class-name">BulkRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BulkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
request<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span>
<span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lisi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wangwu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//客户端发送请求，获取响应对象</span>
<span class="token class-name">BulkResponse</span> responses <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">bulk</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打印结果信息</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> responses<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;items:&quot;</span> <span class="token operator">+</span> responses<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><p><img src="`+ls+`" alt="image-20230608172213469"></p><blockquote><p>批量删除</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//创建批量删除请求对象</span>
<span class="token class-name">BulkRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BulkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> request<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> request<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//客户端发送请求，获取响应对象</span>
<span class="token class-name">BulkResponse</span> responses <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">bulk</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打印结果信息</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> responses<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;items:&quot;</span> <span class="token operator">+</span> responses<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><p><img src="`+us+`" alt="image-20230608172242455"></p><h3 id="_3-5-高级查询" tabindex="-1"><a class="header-anchor" href="#_3-5-高级查询" aria-hidden="true">#</a> 3.5 高级查询</h3><blockquote><p>（1）请求体查询</p></blockquote><ul><li>查询所有索引数据</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建搜索请求对象</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 构建查询的请求体</span>
<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询所有数据sourceBuilder.query(QueryBuilders.matchAllQuery()); request.source(sourceBuilder);</span>

<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询匹配</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">isTimedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;total:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MaxScore:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getMaxScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hits========&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//输出每条查询的结果信息System.out.println(hit.getSourceAsString());</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+is+`" alt="image-20230608172450095"></p><ul><li>term查询，查询条件为关键字</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建搜索请求对象</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 构建查询的请求体</span>
<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> sourceBuilder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termQuery</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询匹配</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">isTimedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;total:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MaxScore:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getMaxScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hits========&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//输出每条查询的结果信息System.out.println(hit.getSourceAsString());</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+rs+`" alt="image-20230608172550491"></p><ul><li>分页查询</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建搜索请求对象</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 构建查询的请求体</span>
<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> sourceBuilder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchAllQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 分页查询</span>
<span class="token comment">// 当前页其实索引(第一条数据的顺序号)，from sourceBuilder.from(0);</span>
<span class="token comment">// 每页显示多少条 size</span>
sourceBuilder<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询匹配</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">isTimedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;total:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MaxScore:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getMaxScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hits========&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//输出每条查询的结果信息System.out.println(hit.getSourceAsString());</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+ks+`" alt="image-20230608172631223"></p><ul><li>数据排序</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 构建查询的请求体</span>
<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> sourceBuilder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchAllQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 排序</span>
sourceBuilder<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token class-name">SortOrder</span><span class="token punctuation">.</span><span class="token constant">ASC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询匹配</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">isTimedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;total:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MaxScore:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getMaxScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hits========&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//输出每条查询的结果信息System.out.println(hit.getSourceAsString());</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+ds+`" alt="image-20230608172707145"></p><ul><li>过滤字段</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建搜索请求对象</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 构建查询的请求体</span>
<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> sourceBuilder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchAllQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//查询字段过滤</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> excludes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> includes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 
sourceBuilder<span class="token punctuation">.</span><span class="token function">fetchSource</span><span class="token punctuation">(</span>includes<span class="token punctuation">,</span> excludes<span class="token punctuation">)</span><span class="token punctuation">;</span>

request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询匹配</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">isTimedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;total:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MaxScore:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getMaxScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hits========&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//输出每条查询的结果信息System.out.println(hit.getSourceAsString());</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+ms+`" alt="image-20230608172746917"></p><ul><li>Bool查询</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建搜索请求对象</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 构建查询的请求体</span>
<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">BoolQueryBuilder</span> boolQueryBuilder <span class="token operator">=</span> <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">boolQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 必须包含</span>
boolQueryBuilder<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 一定不含</span>
boolQueryBuilder<span class="token punctuation">.</span><span class="token function">mustNot</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 可能包含</span>
boolQueryBuilder<span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">matchQuery</span><span class="token punctuation">(</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sourceBuilder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>boolQueryBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span> 
request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询匹配</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">isTimedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;total:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MaxScore:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getMaxScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hits========&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//输出每条查询的结果信息System.out.println(hit.getSourceAsString());</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+vs+`" alt="image-20230608172922987"></p><ul><li>范围查询</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建搜索请求对象</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 构建查询的请求体</span>
<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">RangeQueryBuilder</span> rangeQuery <span class="token operator">=</span> <span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">rangeQuery</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 大于等于</span>
rangeQuery<span class="token punctuation">.</span><span class="token function">gte</span><span class="token punctuation">(</span><span class="token string">&quot;30&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 小于等于</span>
rangeQuery<span class="token punctuation">.</span><span class="token function">lte</span><span class="token punctuation">(</span><span class="token string">&quot;40&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sourceBuilder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>rangeQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询匹配</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">isTimedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;total:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MaxScore:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getMaxScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hits========&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//输出每条查询的结果信息System.out.println(hit.getSourceAsString());</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+gs+`" alt="image-20230608173034250"></p><ul><li>模糊查询</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 创建搜索请求对象</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> request<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 构建查询的请求体</span>
<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sourceBuilder<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">fuzzyQuery</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fuzziness</span><span class="token punctuation">(</span><span class="token class-name">Fu</span> zziness<span class="token punctuation">.</span><span class="token constant">ONE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 查询匹配</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">isTimedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;total:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MaxScore:&quot;</span> <span class="token operator">+</span> hits<span class="token punctuation">.</span><span class="token function">getMaxScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hits========&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//输出每条查询的结果信息System.out.println(hit.getSourceAsString());</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;========&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+bs+`" alt="image-20230608173117155"></p><blockquote><p>（2）高亮查询</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 高亮查询</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//2.创建查询请求体构建器</span>
<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//构建查询方式：高亮查询TermsQueryBuilder termsQueryBuilder =</span>
<span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">termsQuery</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//设置查询方式sourceBuilder.query(termsQueryBuilder);</span>
<span class="token comment">//构建高亮字段</span>
<span class="token class-name">HighlightBuilder</span> highlightBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HighlightBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> highlightBuilder<span class="token punctuation">.</span><span class="token function">preTags</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;font color=&#39;red&#39;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置标签前缀highlightBuilder.postTags(&quot;&lt;/font&gt;&quot;);//设置标签后缀highlightBuilder.field(&quot;name&quot;);//设置高亮字段</span>
<span class="token comment">//设置高亮构建对象sourceBuilder.highlighter(highlightBuilder);</span>
<span class="token comment">//设置请求体</span>
request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//3.客户端发送请求，获取响应对象</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//4.打印响应结果</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;took::&quot;</span><span class="token operator">+</span>response<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;time_out::&quot;</span><span class="token operator">+</span>response<span class="token punctuation">.</span><span class="token function">isTimedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;total::&quot;</span><span class="token operator">+</span>hits<span class="token punctuation">.</span><span class="token function">getTotalHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;max_score::&quot;</span><span class="token operator">+</span>hits<span class="token punctuation">.</span><span class="token function">getMaxScore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hits::::&gt;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SearchHit</span> hit <span class="token operator">:</span> hits<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token class-name">String</span> sourceAsString <span class="token operator">=</span> hit<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sourceAsString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//打印高亮结果</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">HighlightField</span><span class="token punctuation">&gt;</span></span> highlightFields <span class="token operator">=</span> hit<span class="token punctuation">.</span><span class="token function">getHighlightFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>highlightFields<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&lt;::::&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+qs+`" alt="image-20230608173218249"></p><blockquote><p>（3）聚合查询</p></blockquote><ul><li>最大年龄</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 高亮查询</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> sourceBuilder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token string">&quot;maxAge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//设置请求体</span>
request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>sourceBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//3.客户端发送请求，获取响应对象</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//4.打印响应结果</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+hs+`" alt="image-20230608173404477"></p><ul><li>分组统计</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 高亮查询</span>
<span class="token class-name">SearchRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SearchSourceBuilder</span> sourceBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> sourceBuilder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span><span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;age_groupby&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;ag e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//设置请求体request.source(sourceBuilder);</span>
<span class="token comment">//3.客户端发送请求，获取响应对象</span>
<span class="token class-name">SearchResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//4.打印响应结果</span>
<span class="token class-name">SearchHits</span> hits <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getHits</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_s+'" alt="image-20230608173443170"></p>',95);function Bt(Rt,Pt){const a=l("ExternalLinkIcon");return o(),c("div",null,[fs,Ss,n("p",null,[s("Elasticsearch 的官方地址："),n("a",xs,[s("https://www.elastic.co/cn/"),t(a)])]),js,n("p",null,[s("下载地址："),n("a",ws,[s("https://www.elastic.co/cn/downloads/past-releases#elasticsearch"),t(a)])]),Es,n("p",null,[s("打开浏览器（推荐使用谷歌浏览器），输入地址："),n("a",Ts,[s("http://localhost:9200，测试结果"),t(a)])]),Bs,n("p",null,[s("Postman 官网："),n("a",Rs,[s("https://www.getpostman.com"),t(a)])]),n("p",null,[s("Postman 下载："),n("a",Ps,[s("https://www.getpostman.com/apps"),t(a)])]),As,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),Is,s(" 请求 ："),n("a",Os,[s("http://127.0.0.1:9200/shopping"),t(a)])]),Hs,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),zs,s(" 请求 ："),n("a",Ds,[s("http://127.0.0.1:9200/_cat/indices?v"),t(a)])]),Gs,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),Qs,s(" 请求 ："),n("a",Us,[s("http://127.0.0.1:9200/shopping"),t(a)])]),Ls,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),Ms,s(" 请求 ："),n("a",Fs,[s("http://127.0.0.1:9200/shopping"),t(a)])]),Js,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),Cs,s(" 请求 ："),n("a",Ns,[s("http://127.0.0.1:9200/shopping**/_doc"),t(a)]),s("**")]),Xs,n("p",null,[s("如果想要自定义唯一性标识，需要在创建时指定："),n("a",Vs,[s("http://127.0.0.1:9200/shopping/_doc/**1"),t(a)]),s("**")]),Ws,Ks,Ys,Zs,$s,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),na,s(" 请求 ："),n("a",sa,[s("http://127.0.0.1:9200/shopping**/_doc/1"),t(a)]),s("**")]),aa,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),ta,s(" 请求 ："),n("a",pa,[s("http://127.0.0.1:9200/shopping**/_doc/1"),t(a)]),s("**")]),ea,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),oa,s(" 请求 ："),n("a",ca,[s("http://127.0.0.1:9200/shopping/**_update/1"),t(a)]),s("**")]),la,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),ua,s(" 请求 ："),n("a",ia,[s("http://127.0.0.1:9200/shopping**/_doc/1"),t(a)]),s("**")]),ra,n("p",null,[s("向 ES 服务器发 "),ka,s(" 请求 ："),n("a",da,[s("http://127.0.0.1:9200/shopping**/_delete_by_query"),t(a)]),s("**")]),ma,n("p",null,[s("在 Postman 中，向ES 服务器发 "),va,s(" 请求 ："),n("a",ga,[s("http://127.0.0.1:9200/student**/_mapping"),t(a)]),s("**")]),ba,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),qa,s(" 请求 ："),n("a",ha,[s("http://127.0.0.1:9200/student**/_mapping"),t(a)]),s("**")]),_a,ya,fa,Sa,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),xa,s(" 请求 ："),n("a",ja,[s("http://127.0.0.1:9200/student1"),t(a)])]),wa,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),Ea,s(" 请求 ："),n("a",Ta,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Ba,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",Ra,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Pa,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",Aa,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Ia,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",Oa,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Ha,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",za,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Da,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",Ga,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Qa,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",Ua,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),La,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),Ma,s(" 请求 ："),n("a",Fa,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Ja,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),Ca,s(" 请求 ："),n("a",Na,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Xa,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),Va,s(" 请求 ："),n("a",Wa,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Ka,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),Ya,s(" 请求 ："),n("a",Za,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),$a,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),nt,s(" 请求 ："),n("a",st,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),at,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",tt,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),pt,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),et,s(" 请求 ："),n("a",ot,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),ct,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",lt,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),ut,n("p",null,[s("在 Postman 中，向 ES 服务器发 "),it,s(" 请求 ："),n("a",rt,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),kt,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",dt,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),mt,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",vt,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),gt,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",bt,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),qt,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",ht,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),_t,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",yt,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),ft,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",St,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),xt,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",jt,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),wt,n("p",null,[s("在 Postman 中，向 ES 服务器发 GET 请求 ："),n("a",Et,[s("http://127.0.0.1:9200/student/_search"),t(a)])]),Tt])}const Ot=e(ys,[["render",Bt],["__file","2.Elasticsearch入门.html.vue"]]);export{Ot as default};
