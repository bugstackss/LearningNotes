const e=JSON.parse('{"key":"v-2c3025f4","path":"/web/promise/Promise.html","title":"Promise从入门到精通","lang":"zh-CN","frontmatter":{"title":"Promise从入门到精通","icon":"blog","category":["ajax"],"tag":["promise","javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"1、概念: Promise是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。所谓Promise，简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。 通俗讲，Promise是一个许诺、承诺,是对未来事情的承诺，承诺不一定能完成，但是无论是否能完成都会有一个结果。 Pending 正在做。。。 ...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/promise/Promise.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"Promise从入门到精通"}],["meta",{"property":"og:description","content":"1、概念: Promise是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理和更强大。所谓Promise，简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。 通俗讲，Promise是一个许诺、承诺,是对未来事情的承诺，承诺不一定能完成，但是无论是否能完成都会有一个结果。 Pending 正在做。。。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Promise从入门到精通"}],["meta",{"property":"article:tag","content":"promise"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"1、Promise是什么?","slug":"_1、promise是什么","link":"#_1、promise是什么","children":[]},{"level":2,"title":"2、为什么要用Promise?","slug":"_2、为什么要用promise","link":"#_2、为什么要用promise","children":[{"level":3,"title":"Ⅰ-指定回调函数的方式更加灵活","slug":"i-指定回调函数的方式更加灵活","link":"#i-指定回调函数的方式更加灵活","children":[]},{"level":3,"title":"Ⅱ-支持链式调用, 可以解决回调地狱问题","slug":"ii-支持链式调用-可以解决回调地狱问题","link":"#ii-支持链式调用-可以解决回调地狱问题","children":[]}]},{"level":2,"title":"3、Promise中的常用 API 概述","slug":"_3、promise中的常用-api-概述","link":"#_3、promise中的常用-api-概述","children":[]},{"level":2,"title":"4、Promise的几个关键问题","slug":"_4、promise的几个关键问题","link":"#_4、promise的几个关键问题","children":[]},{"level":2,"title":"5、 Promise的实际应用","slug":"_5、-promise的实际应用","link":"#_5、-promise的实际应用","children":[{"level":3,"title":"Ⅰ - 加载图片","slug":"i-加载图片","link":"#i-加载图片","children":[]},{"level":3,"title":"Ⅱ - Generator 函数与 Promise 的结合","slug":"ii-generator-函数与-promise-的结合","link":"#ii-generator-函数与-promise-的结合","children":[]}]},{"level":2,"title":"Ⅰ -  基本用法","slug":"i-基本用法","link":"#i-基本用法","children":[]},{"level":2,"title":"Ⅱ -  API 用法详解","slug":"ii-api-用法详解","link":"#ii-api-用法详解","children":[]},{"level":2,"title":"此部分可以跳过不看,类似手撕源码","slug":"此部分可以跳过不看-类似手撕源码","link":"#此部分可以跳过不看-类似手撕源码","children":[]},{"level":2,"title":"Ⅰ-Promise的实例方法实现","slug":"i-promise的实例方法实现","link":"#i-promise的实例方法实现","children":[{"level":3,"title":"1 - 初始结构搭建","slug":"_1-初始结构搭建","link":"#_1-初始结构搭建","children":[]},{"level":3,"title":"2 - resolve 与 reject构建与基础实现","slug":"_2-resolve-与-reject构建与基础实现","link":"#_2-resolve-与-reject构建与基础实现","children":[]},{"level":3,"title":"3 - throw 抛出异常改变状态","slug":"_3-throw-抛出异常改变状态","link":"#_3-throw-抛出异常改变状态","children":[]},{"level":3,"title":"4 - 状态只能修改一次","slug":"_4-状态只能修改一次","link":"#_4-状态只能修改一次","children":[]},{"level":3,"title":"5 - then 方法执行回调基础实现","slug":"_5-then-方法执行回调基础实现","link":"#_5-then-方法执行回调基础实现","children":[]},{"level":3,"title":"6 - 异步任务 then 方法实现","slug":"_6-异步任务-then-方法实现","link":"#_6-异步任务-then-方法实现","children":[]},{"level":3,"title":"7 - 指定多个回调","slug":"_7-指定多个回调","link":"#_7-指定多个回调","children":[]},{"level":3,"title":"8 - 同步任务 then 返回结果","slug":"_8-同步任务-then-返回结果","link":"#_8-同步任务-then-返回结果","children":[]},{"level":3,"title":"9 - 异步任务 then 返回结果","slug":"_9-异步任务-then-返回结果","link":"#_9-异步任务-then-返回结果","children":[]},{"level":3,"title":"10- then方法代码优化","slug":"_10-then方法代码优化","link":"#_10-then方法代码优化","children":[]},{"level":3,"title":"11 - catch 方法与异常穿透与值传递","slug":"_11-catch-方法与异常穿透与值传递","link":"#_11-catch-方法与异常穿透与值传递","children":[]}]},{"level":2,"title":"Ⅱ-Promise的静态方法实现","slug":"ii-promise的静态方法实现","link":"#ii-promise的静态方法实现","children":[{"level":3,"title":"1 - Promise.resolve 封装","slug":"_1-promise-resolve-封装","link":"#_1-promise-resolve-封装","children":[]},{"level":3,"title":"2 - Promise.resolve 封装","slug":"_2-promise-resolve-封装","link":"#_2-promise-resolve-封装","children":[]},{"level":3,"title":"3 - Promise.all 封装","slug":"_3-promise-all-封装","link":"#_3-promise-all-封装","children":[]},{"level":3,"title":"4 - Promise.race 封装","slug":"_4-promise-race-封装","link":"#_4-promise-race-封装","children":[]}]},{"level":2,"title":"Ⅲ-其他优化","slug":"iii-其他优化","link":"#iii-其他优化","children":[{"level":3,"title":"1 - 回调函数『异步执行』","slug":"_1-回调函数『异步执行』","link":"#_1-回调函数『异步执行』","children":[]},{"level":3,"title":"2- class改写promise","slug":"_2-class改写promise","link":"#_2-class改写promise","children":[]}]},{"level":2,"title":"Ⅰ-async函数","slug":"i-async函数","link":"#i-async函数","children":[]},{"level":2,"title":"Ⅱ-await表达式","slug":"ii-await表达式","link":"#ii-await表达式","children":[]},{"level":2,"title":"Ⅲ-注意","slug":"iii-注意","link":"#iii-注意","children":[]},{"level":2,"title":"Ⅳ-自己对某些问题理解解答","slug":"iv-自己对某些问题理解解答","link":"#iv-自己对某些问题理解解答","children":[{"level":3,"title":"1、如何在Promise外部使用Promise的结果","slug":"_1、如何在promise外部使用promise的结果","link":"#_1、如何在promise外部使用promise的结果","children":[]}]},{"level":2,"title":"Ⅰ-说明","slug":"i-说明","link":"#i-说明","children":[]},{"level":2,"title":"Ⅱ-代码与示例","slug":"ii-代码与示例","link":"#ii-代码与示例","children":[{"level":3,"title":"1、代码示例:","slug":"_1、代码示例","link":"#_1、代码示例","children":[]},{"level":3,"title":"2、示例结果:","slug":"_2、示例结果","link":"#_2、示例结果","children":[]}]},{"level":2,"title":"Ⅰ- 出现场景","slug":"i-出现场景","link":"#i-出现场景","children":[]},{"level":2,"title":"Ⅱ - 尝试输入其他内容进行分析","slug":"ii-尝试输入其他内容进行分析","link":"#ii-尝试输入其他内容进行分析","children":[]},{"level":2,"title":"Ⅲ - eval（string）","slug":"iii-eval-string","link":"#iii-eval-string","children":[]},{"level":2,"title":"Ⅳ - 验证一下","slug":"iv-验证一下","link":"#iv-验证一下","children":[]},{"level":2,"title":"Ⅴ -  分析其在宏任务与微任务的打印顺序","slug":"v-分析其在宏任务与微任务的打印顺序","link":"#v-分析其在宏任务与微任务的打印顺序","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":68.13,"words":20438},"filePathRelative":"web/promise/Promise.md","localizedDate":"2023年5月31日"}');export{e as data};
