const e=JSON.parse('{"key":"v-1a1ec19d","path":"/notes/environment/nginx/%E5%8D%81%E4%BA%8C%E3%80%81Nginx%E7%BC%93%E5%AD%98%E9%9B%86%E6%88%90.html","title":"十二、Nginx缓存集成","lang":"zh-CN","frontmatter":{"title":"十二、Nginx缓存集成","category":["nginx"],"tag":["NGINX","分布式架构","服务器"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"缓存的概念 缓存就是数据交换的缓冲区(称作:Cache),当用户要获取数据的时候，会先从缓存中去查询获取数据，如果缓存中有就会直接返回给用户，如果缓存中没有，则会发请求从服务器重新查询数据，将数据返回给用户的同时将数据放入缓存，下次用户就会直接从缓存中获取数据。 1591944051969 缓存其实在很多场景中都有用到，比如： 场景 作用 ------...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/environment/nginx/%E5%8D%81%E4%BA%8C%E3%80%81Nginx%E7%BC%93%E5%AD%98%E9%9B%86%E6%88%90.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"十二、Nginx缓存集成"}],["meta",{"property":"og:description","content":"缓存的概念 缓存就是数据交换的缓冲区(称作:Cache),当用户要获取数据的时候，会先从缓存中去查询获取数据，如果缓存中有就会直接返回给用户，如果缓存中没有，则会发请求从服务器重新查询数据，将数据返回给用户的同时将数据放入缓存，下次用户就会直接从缓存中获取数据。 1591944051969 缓存其实在很多场景中都有用到，比如： 场景 作用 ------..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"十二、Nginx缓存集成"}],["meta",{"property":"article:tag","content":"NGINX"}],["meta",{"property":"article:tag","content":"分布式架构"}],["meta",{"property":"article:tag","content":"服务器"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"缓存的概念","slug":"缓存的概念","link":"#缓存的概念","children":[]},{"level":2,"title":"Nginx的web缓存服务","slug":"nginx的web缓存服务","link":"#nginx的web缓存服务","children":[]},{"level":2,"title":"Nginx缓存设置的相关指令","slug":"nginx缓存设置的相关指令","link":"#nginx缓存设置的相关指令","children":[{"level":3,"title":"proxy_cache_path","slug":"proxy-cache-path","link":"#proxy-cache-path","children":[]},{"level":3,"title":"proxy_cache","slug":"proxy-cache","link":"#proxy-cache","children":[]},{"level":3,"title":"proxy_cache_key","slug":"proxy-cache-key","link":"#proxy-cache-key","children":[]},{"level":3,"title":"proxy_cache_valid","slug":"proxy-cache-valid","link":"#proxy-cache-valid","children":[]},{"level":3,"title":"proxy_cache_min_uses","slug":"proxy-cache-min-uses","link":"#proxy-cache-min-uses","children":[]},{"level":3,"title":"proxy_cache_methods","slug":"proxy-cache-methods","link":"#proxy-cache-methods","children":[]}]},{"level":2,"title":"Nginx缓存设置案例","slug":"nginx缓存设置案例","link":"#nginx缓存设置案例","children":[]},{"level":2,"title":"Nginx缓存的清除","slug":"nginx缓存的清除","link":"#nginx缓存的清除","children":[{"level":3,"title":"方式一:删除对应的缓存目录","slug":"方式一-删除对应的缓存目录","link":"#方式一-删除对应的缓存目录","children":[]},{"level":3,"title":"方式二:使用第三方扩展模块","slug":"方式二-使用第三方扩展模块","link":"#方式二-使用第三方扩展模块","children":[]}]},{"level":2,"title":"Nginx设置资源不缓存","slug":"nginx设置资源不缓存","link":"#nginx设置资源不缓存","children":[{"level":3,"title":"$cookie_nocache、$arg_nocache、$arg_comment","slug":"cookie-nocache、-arg-nocache、-arg-comment","link":"#cookie-nocache、-arg-nocache、-arg-comment","children":[]},{"level":3,"title":"案例实现","slug":"案例实现","link":"#案例实现","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":7.46,"words":2237},"filePathRelative":"notes/environment/nginx/十二、Nginx缓存集成.md","localizedDate":"2023年5月31日"}');export{e as data};
