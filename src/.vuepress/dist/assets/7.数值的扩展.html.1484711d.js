const e=JSON.parse('{"key":"v-4006c401","path":"/web/es6/7.%E6%95%B0%E5%80%BC%E7%9A%84%E6%89%A9%E5%B1%95.html","title":"数值的扩展","lang":"zh-CN","frontmatter":{"title":"数值的扩展","category":["es6"],"tag":["ECMASCRIPT","javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"二进制和八进制表示法 ES6 提供了二进制和八进制数值的新的写法，分别用前缀0b（或0B）和0o（或0O）表示。 从 ES5 开始，在严格模式之中，八进制就不再允许使用前缀0表示，ES6 进一步明确，要使用前缀0o表示。 如果要将0b和`0o前缀的字符串数值转为十进制，要使用Number方法。 数值分隔符 欧美语言中，较长的数值允许每三位添加一个分隔符...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/es6/7.%E6%95%B0%E5%80%BC%E7%9A%84%E6%89%A9%E5%B1%95.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"数值的扩展"}],["meta",{"property":"og:description","content":"二进制和八进制表示法 ES6 提供了二进制和八进制数值的新的写法，分别用前缀0b（或0B）和0o（或0O）表示。 从 ES5 开始，在严格模式之中，八进制就不再允许使用前缀0表示，ES6 进一步明确，要使用前缀0o表示。 如果要将0b和`0o前缀的字符串数值转为十进制，要使用Number方法。 数值分隔符 欧美语言中，较长的数值允许每三位添加一个分隔符..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"ECMASCRIPT"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"二进制和八进制表示法","slug":"二进制和八进制表示法","link":"#二进制和八进制表示法","children":[]},{"level":2,"title":"数值分隔符","slug":"数值分隔符","link":"#数值分隔符","children":[]},{"level":2,"title":"Number.isFinite(), Number.isNaN()","slug":"number-isfinite-number-isnan","link":"#number-isfinite-number-isnan","children":[]},{"level":2,"title":"Number.parseInt(), Number.parseFloat()","slug":"number-parseint-number-parsefloat","link":"#number-parseint-number-parsefloat","children":[]},{"level":2,"title":"Number.isInteger()","slug":"number-isinteger","link":"#number-isinteger","children":[]},{"level":2,"title":"Number.EPSILON","slug":"number-epsilon","link":"#number-epsilon","children":[]},{"level":2,"title":"安全整数和 Number.isSafeInteger()","slug":"安全整数和-number-issafeinteger","link":"#安全整数和-number-issafeinteger","children":[]},{"level":2,"title":"Math 对象的扩展","slug":"math-对象的扩展","link":"#math-对象的扩展","children":[{"level":3,"title":"Math.trunc()","slug":"math-trunc","link":"#math-trunc","children":[]},{"level":3,"title":"Math.sign()","slug":"math-sign","link":"#math-sign","children":[]},{"level":3,"title":"Math.cbrt()","slug":"math-cbrt","link":"#math-cbrt","children":[]},{"level":3,"title":"Math.clz32()","slug":"math-clz32","link":"#math-clz32","children":[]},{"level":3,"title":"Math.imul()","slug":"math-imul","link":"#math-imul","children":[]},{"level":3,"title":"Math.fround()","slug":"math-fround","link":"#math-fround","children":[]},{"level":3,"title":"Math.hypot()","slug":"math-hypot","link":"#math-hypot","children":[]},{"level":3,"title":"对数方法","slug":"对数方法","link":"#对数方法","children":[]},{"level":3,"title":"双曲函数方法","slug":"双曲函数方法","link":"#双曲函数方法","children":[]}]},{"level":2,"title":"BigInt 数据类型","slug":"bigint-数据类型","link":"#bigint-数据类型","children":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"BigInt 函数","slug":"bigint-函数","link":"#bigint-函数","children":[]},{"level":3,"title":"转换规则","slug":"转换规则","link":"#转换规则","children":[]},{"level":3,"title":"数学运算","slug":"数学运算","link":"#数学运算","children":[]},{"level":3,"title":"其他运算","slug":"其他运算","link":"#其他运算","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":19.63,"words":5888},"filePathRelative":"web/es6/7.数值的扩展.md","localizedDate":"2023年5月31日"}');export{e as data};
