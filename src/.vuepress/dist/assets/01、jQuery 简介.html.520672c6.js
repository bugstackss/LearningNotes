import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,d as n,e as s,b as t,a as e,r as l}from"./app.9b10ba0a.js";const i="/assets/B2ynVFUa9CgNDIq.3d7e5c2a.gif",u="/assets/qiELvA1Pnhx68B4.ff545221.png",r={},d=n("h2",{id:"_1、jquery-初识",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1、jquery-初识","aria-hidden":"true"},"#"),s(" 1、jQuery 初识")],-1),k=n("h3",{id:"what",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#what","aria-hidden":"true"},"#"),s(" What?")],-1),m=n("code",null,"jQuery",-1),v={href:"https://gitee.com/link?target=http%3A%2F%2Fjquery.com%2F",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,"一个优秀的 JS 函数库",-1),b=n("li",null,[s("使用了"),n("code",null,"jQuery"),s("的网站超过 90%")],-1),g=n("li",null,"中大型 WEB 项目开发首选",-1),j=n("li",null,[n("code",null,"Write Less，Do More！！！")],-1),y=e(`<h3 id="why" tabindex="-1"><a class="header-anchor" href="#why" aria-hidden="true">#</a> Why?</h3><ul><li>HTML 元素选取（选择器）</li><li>HTML 元素操作</li><li>CSS 操作</li><li>HTML 事件处理</li><li>JS 动画效果</li><li><strong>链式调用</strong> a().b().c()...</li><li><strong>读写合一</strong></li><li>浏览器兼容</li><li>易扩展插件</li><li>ajax 封装</li></ul><h3 id="how" tabindex="-1"><a class="header-anchor" href="#how" aria-hidden="true">#</a> How?</h3><h4 id="_1-引入jquery库" tabindex="-1"><a class="header-anchor" href="#_1-引入jquery库" aria-hidden="true">#</a> 1. 引入<code>jQuery</code>库</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 引入jQuery <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>服务器本地库<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;js/jquery-3.6.0.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token constant">CDN</span>远程库<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">--</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-使用jquery" tabindex="-1"><a class="header-anchor" href="#_2-使用jquery" aria-hidden="true">#</a> 2. 使用<code>jQuery</code></h4><ul><li><code>jQuery</code>核心函数：<code>$</code>/<code>jQuery</code></li><li><code>jQuery</code>核心对象：执行<code>$()</code>返回的对象</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 绑定文档加载完成的监听</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 绑定监听事件</span>
    <span class="token keyword">var</span> $btn02 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    $btn02<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> username <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        username <span class="token operator">&amp;&amp;</span> <span class="token function">alert</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+i+'" alt="jQuery的基本使用"></p><h4 id="区别-2-种-js-库文件" tabindex="-1"><a class="header-anchor" href="#区别-2-种-js-库文件" aria-hidden="true">#</a> 区别 2 种 JS 库文件</h4><ul><li>开发版（测试版）</li><li>生产版（压缩版）</li></ul><h4 id="区别-2-种引用-js-库的方式" tabindex="-1"><a class="header-anchor" href="#区别-2-种引用-js-库的方式" aria-hidden="true">#</a> 区别 2 种引用 JS 库的方式</h4>',12),f=n("li",null,"服务器本地库",-1),_=n("li",null,"项目上线时，一般使用比较靠谱的CDN资源库，减轻服务器负担",-1),x={href:"https://gitee.com/link?target=https%3A%2F%2Fwww.bootcdn.cn%2F",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"jQuery",-1),w=n("code",null,"<script>",-1),Q=e(`<h4 id="区别jquery的不同版本" tabindex="-1"><a class="header-anchor" href="#区别jquery的不同版本" aria-hidden="true">#</a> 区别<code>jQuery</code>的不同版本</h4><ul><li>1.x <ul><li>兼容老版本 IE</li><li>文件更大</li></ul></li><li>2.x <ul><li>部分 IE8 及以下支持</li><li>文件小，执行效率更高</li></ul></li><li>3.x <ul><li>完全不再支持 IE8 及以下版本</li><li>提供了一些新的 API</li><li>提供不包含 ajax / 动画 API 的版本</li></ul></li></ul><h2 id="_2、jquery-的-2-把利器" tabindex="-1"><a class="header-anchor" href="#_2、jquery-的-2-把利器" aria-hidden="true">#</a> 2、jQuery 的 2 把利器</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// jQuery核心代码</span>
<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">window</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token function-variable function">jQuery</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">jQuery<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    window<span class="token punctuation">.</span>$ <span class="token operator">=</span> window<span class="token punctuation">.</span>jQuery <span class="token operator">=</span> jQuery
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jquery-核心函数" tabindex="-1"><a class="header-anchor" href="#jquery-核心函数" aria-hidden="true">#</a> jQuery 核心函数</h3><p>简称：<code>jQuery</code>函数（<code>$</code>/<code>jQuery</code>），<code>jQuery</code>库向外直接暴露的就是<code>$</code>/<code>jQuery</code></p><p>引入<code>jQuery</code>库后，直接使用即可</p><ul><li>当函数用：<code>$(xxx)</code></li><li>当对象用：<code>$.xxx()</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// jQuery函数：直接可用</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token punctuation">,</span> <span class="token keyword">typeof</span> $<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ƒ ( selector, context ) {}    function</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>jQuery <span class="token operator">===</span> $<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jquery-核心对象" tabindex="-1"><a class="header-anchor" href="#jquery-核心对象" aria-hidden="true">#</a> jQuery 核心对象</h3><p>简称：<code>jQuery</code>对象</p><p>得到<code>jQuery</code>对象：执行<code>jQuery</code>函数返回的就是<code>jQuery</code>对象</p><p>使用<code>jQuery</code>对象：<code>$obj.xxx()</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// jQuery对象：执行jQuery函数得到它</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">typeof</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// jQuery.fn.init {} &quot;object&quot; true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+`" alt="image-20210823214249792"></p><h2 id="_3、jquery-函数的使用" tabindex="-1"><a class="header-anchor" href="#_3、jquery-函数的使用" aria-hidden="true">#</a> 3、jQuery 函数的使用</h2><p>作为一般函数调用：<code>$(param)</code></p><ol><li>参数为函数：当 DOM 加载完成后，执行此回调函数</li><li>参数为选择器字符：查找所有匹配的标签并将它们封装成<code>jQuery</code>对象</li><li>参数为 DOM 对象：将 dom 对象封装成<code>jQuery</code>对象</li><li>参数为 html 标签字符串（用得少）：创建标签对象并封装成<code>jQuery</code>对象</li></ol><p>作为对象使用：<code>$.xxx()</code></p><ul><li><code>$.each()</code>：隐式遍历数组</li><li><code>$.trim()</code>：去除两端的空格</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 需求1.点击按钮：显示按钮的文本，显示一个新的输入框</span>
<span class="token comment">// 1、参数为函数：当 DOM 加载完成后，执行此回调函数</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 绑定文档加藏完成的监听</span>
    <span class="token comment">// 2、参数为选择器字符：查找所有匹配的标签并将它们封装成\`jQuery\`对象</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// alert(this.innerHTML); // this是什么？发生事件的dom元素（&lt;button&gt;）</span>
        <span class="token comment">// 3、参数为 DOM 对象：将 dom 对象封装成\`jQuery\`对象</span>
        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 4、参数为 html 标签字符串（用得少）：创建标签对象并封装成\`jQuery\`对象</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;input type=&quot;text&quot; name=&quot;msg3&quot;&gt;&lt;br/&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 需求2.遍历输出数组中所有元素值</span>
    <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0 3    1 7    2 4</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 需求3.去掉“my atguigu”两端的空格</span>
    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&quot;    my atguigu   &quot;</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;===&#39;</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">&#39;===&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// ===    my atguigu   ===</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;===&#39;</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;===&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// ===my atguigu===</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;===&#39;</span> <span class="token operator">+</span> $<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;===&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// ===my atguigu===</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、jquery-对象的使用" tabindex="-1"><a class="header-anchor" href="#_4、jquery-对象的使用" aria-hidden="true">#</a> 4、jQuery 对象的使用</h2><h3 id="理解" tabindex="-1"><a class="header-anchor" href="#理解" aria-hidden="true">#</a> 理解</h3><p>即执行<code>jQuery</code>核心函数返回的对象</p><p><code>jQuery</code>对象内部包含的是 dom 元素对象的伪数组（可能只有一个元素）</p><p><code>jQuery</code>对象拥有很多有用的属性和方法，让程序员能方便的操作 dom</p><h3 id="属性和方法" tabindex="-1"><a class="header-anchor" href="#属性和方法" aria-hidden="true">#</a> 属性和方法</h3><ul><li>基本行为：操作标签的基本方法</li><li>属性：操作内部标签的属性或值</li><li>CSS：操作标签的样式</li><li>文档：对标签进行增删改操作</li><li>筛选：根据指定的规则过滤内部的标签</li><li>事件：处理事件监听相关</li><li>效果：实现一些动画效果</li></ul><p>这里我们先学习<code>jQuery</code>对象的基本行为，其他的不放在当前章节中</p><h4 id="基本行为" tabindex="-1"><a class="header-anchor" href="#基本行为" aria-hidden="true">#</a> 基本行为</h4><ul><li><code>size()</code>/<code>length</code>：包含的 DOM 元素个数</li><li><code>[index]</code>/<code>get(index)</code>：得到对应位置的 DOM 元素</li><li><code>each()</code>：遍历包含的所有 DOM 元素</li><li><code>index()</code>：得到在所在兄弟元素中的下标</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 需求1.统计一共有多少个按钮</span>
<span class="token comment">// \`size()\`/\`length\`：包含的 DOM 元素个数</span>
<span class="token keyword">var</span> $buttons <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$buttons<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>

<span class="token comment">// 需求2.取出第2个button的文本</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;button:nth-child(2)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 测试二</span>
<span class="token comment">// \`[index]\`/\`get(index)\`：得到对应位置的 DOM 元素</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$buttons<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">,</span> $buttons<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 测试二 测试二</span>

<span class="token comment">// 需求3.输出所有button标签的文本</span>
<span class="token comment">// \`each()\`：遍历包含的所有 DOM 元素</span>
<span class="token comment">// $buttons.each(function (index, domEle) {</span>
<span class="token comment">//     console.log(index, domEle.innerHTML); // 0 &quot;测试一&quot;   1 &quot;测试二&quot;   2 &quot;测试三&quot;    3 &quot;测试四&quot;</span>
<span class="token comment">// });</span>
$buttons<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 测试一 测试二 测试三 测试四</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 需求4.输出’测试三’按钮是所有按钮中的第几个</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>伪数组</strong></p><ul><li><code>Object</code>对象</li><li><code>length</code>属性</li><li>数值下标属性</li><li>没有数组特别的方法：<code>forEach()</code>，<code>push()</code>，<code>pop()</code>，<code>splice()</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 伪数组</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$buttons <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token comment">//自定义一个伪数组</span>
<span class="token keyword">var</span> weiArr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
weiArr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
weiArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;atguigu&#39;</span><span class="token punctuation">;</span>
weiArr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
weiArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
weiArr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> weiArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> obj <span class="token operator">=</span> weiArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0 &quot;atguigu&quot;    1 123</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>weiArr<span class="token punctuation">.</span>forEach<span class="token punctuation">,</span> $buttons<span class="token punctuation">.</span>forEach<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35);function $(M,A){const a=l("ExternalLinkIcon");return o(),c("div",null,[d,k,n("ul",null,[n("li",null,[m,s("官网："),n("a",v,[s("http://jquery.com/"),t(a)])]),h,b,g,j]),y,n("ul",null,[f,n("li",null,[s("CDN远程库 "),n("ul",null,[_,n("li",null,[n("a",x,[s("https://www.bootcdn.cn/"),t(a)]),s("：搜索"),q,s("，复制"),w,s("标签到项目中即可使用")])])])]),Q])}const L=p(r,[["render",$],["__file","01、jQuery 简介.html.vue"]]);export{L as default};
