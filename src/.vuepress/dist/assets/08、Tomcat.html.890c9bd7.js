import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c,d as a,e as s,b as o,a as n,r as l}from"./app.9b10ba0a.js";const i="/assets/ba1ffb12de9c48c881a8b07c1c4d31bd-20230304221929004.6119abf6.png",r="/assets/3630c42db4494a76841389749fdeff97-20230304221928990.af9a6db2.png",d="/assets/e4e33dd409b74e8bb8720982af3a2d0f-20230304221929064.d17cf603.png",u="/assets/91f3468c9e2348689af0d9694dc20f1a-20230304221928977.66ab28b4.png",m="/assets/60174ad4e16f4421bf47516030d15db1-20230304221929036.f618735b.png",g="/assets/d577ae8fc2ed447bb372e29d87c4ed6f-20230304221928965.d8d2ac41.png",b="/assets/48c2f81a0f4d4c78b150047bfeecaa1f-20230304221929189.59099584.png",k="/assets/8be4fe879294477388a9a9e93069a6fe-20230304221929193.f0e4f282.png",v="/assets/2a2d3e8b947c4ef69d4430b3a24223a5-20230304221929072.48ac5d48.png",h="/assets/0aee6ba4bf0e418285e614b4eef2b8ae-20230304221929167.97fdba9c.png",f="/assets/0989897b3a26446eb35b4341bc1fd175-20230304221929158.a1ef3daa.png",_="/assets/9524a784cbbb4e6d8bbd05d7de6d8eda-20230304221929180.64df469a.png",x="/assets/a7d6e34ce0b84266a45f558522b001d3-20230304221929178.540a7206.png",q="/assets/58f399cafa6c4575880d579e35a904a1-20230304221929239.3ef9b83b.png",w="/assets/48baf3098e4c4399ab3ece463d2a86aa-20230304221929244.cdf7b756.png",E="/assets/f334975c50e24a8bb7c45830b982951e-20230304221929243.8b97b044.png",T="/assets/fcfb309f1e624ed6bf1cabf205216a24-20230304221929248.5754d050.png",A="/assets/c6421627211747b1929a60827dd38114-20230304221929253.0b7e97e6.png",y="/assets/ea30fa39754d48649beb5bfcc63ab8b8-20230304221929262.a63cef9d.png",M="/assets/fe4dd461939e4d84aae0fb1be4ea550c-20230304221929289.49f14bb4.png",L="/assets/14198535168d4288b9e3ab65777c4156-20230304221929296.7b9b1f7b.png",B="/assets/5ea0cd2d1c554155a7ea6fb0837d5aa1-20230304222007084.aed7bd11.png",D="/assets/9df98c758a8c4785979f882df7b708dd-20230304222006856.6754d242.png",S="/assets/da8720ea547543adb7e861a17a71e228-20230304222006880.33fa488f.png",I="/assets/f447e7bc46b14c80865d859c5e90ab54-20230304222006858.87976eb8.png",j="/assets/16af789711f14411b66be438954698fc-20230304222006844.2ef5a993.png",C="/assets/624db3335a244bebbe617efa48fb7889-20230304222006954.64497f9d.png",N="/assets/46097bb5813b4b3d89eca0be4c078f9b-20230304222006945.7c323f85.png",X="/assets/8823fbe0138b4c14a44da980021cdfd7-20230304222006962.123bab2a.png",W="/assets/fde4d5f4ba074cd6bc0b9e5602d02f56-20230304222006980.04a31892.png",F="/assets/f885bbf9c9a64b179f1b4641a2582d28-20230304222006980.78111092.png",H="/assets/441516e8d5be45e28a3ff95d9b960ba6-20230304222007054.c061c87e.png",P="/assets/45dc57b4811d40e799dcba9db0047761-20230304222007230.5538de9b.png",O="/assets/e0b87209ca4a45ad8d3a97a99a40dd79-20230304222007057.286bca8f.png",R="/assets/68cc20be01f141ebbe33b0a9d0b44257-20230304222007055.20ebf885.png",U="/assets/efcf33b84eb44a2b992eaedffa9b9745-20230304222007244.30ec28e1.png",J="/assets/616762994f3344b4a96e68ad6315c689-20230304222007058.e9a5a25c.png",V="/assets/7ac2cf5442704129ab22cc54fbd71538-20230304222007065.38583eaf.png",Y="/assets/de3eda400fe84a348f472085bf74de4b-20230304222007244.61ef5849.png",G="/assets/349d1c5bbf2b4cf5a3beb614c3e9cff1-20230304222007230.ddd48ee5.png",K="/assets/f1862b371c4b4326829774f97d60e988-20230304222007232.c8775fcc.png",z="/assets/2b0544963d4143dbbbb92764c43a03cf-20230304222007244.4ddebb52.png",Q="/assets/c099f2daf22144f5ab92812f4953ff43-20230304222007302.376e174c.png",Z="/assets/5b0d40037d0a46a2b3143c76fb57d3d0-20230304222007300.8f666c74.png",$="/assets/40debd547ec6448db09fa1c596f90db2-20230304222007303.7bed22d2.png",aa="/assets/901cd429e0634d18acfb04eaddd0baad-20230304222007305.65811f36.png",sa="/assets/a4fb6f01d83145928c48b48b23c11701-20230304222007303.369f4fc8.png",na="/assets/a13aae9e6c36467f8de121423f52373b-20230304222007332.1a78e2bb.png",ta="/assets/a720363c00b74baa8de0da5fabd01e9d-20230304222007305.fdec09a6.png",ea="/assets/aa84dda3bb8f4c1195bfb3a9b174db2f-20230304222007337.bf7904a9.png",pa="/assets/20a723ddfa57472bba5d06e46e2d8075-20230304222007353.9ac2aadc.png",ca="/assets/97004e30d0d742939eaabf5aa4a8d6f5-20230304222007347.574e1bd3.png",oa="/assets/4d84768c797445d18a30b704ade45718-20230304222007357.1fd4486b.png",la="/assets/ed738546c8f74415b1cfbc48743f0691-20230304222007390.008af80f.png",ia="/assets/e76809c882b84a058a04e2a8e67e8bf2-20230304222007357.1b5d5999.png",ra="/assets/0f811daaa4a94f11b761e09aab9c25c7-20230304222007391.0a784106.png",da="/assets/06f6d839a82743e09ea1961033c490e4-20230304222007396.13c641cc.png",ua={},ma=n('<h1 id="_08、tomcat" tabindex="-1"><a class="header-anchor" href="#_08、tomcat" aria-hidden="true">#</a> 08、Tomcat</h1><h2 id="一、配置文件" tabindex="-1"><a class="header-anchor" href="#一、配置文件" aria-hidden="true">#</a> 一、配置文件</h2><h3 id="_1、配置" tabindex="-1"><a class="header-anchor" href="#_1、配置" aria-hidden="true">#</a> 1、配置</h3><h4 id="设置" tabindex="-1"><a class="header-anchor" href="#设置" aria-hidden="true">#</a> 设置</h4><p>所谓设置其实就是通过修改一个一个的<strong>参数</strong>，告诉<strong>应用软件</strong>它该<strong>怎么工作</strong>。</p><p><img src="'+i+`" alt="image.png"></p><h4 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h4><p>本质上配置和设置是一样的，只是对象和形式不同：</p><table><thead><tr><th></th><th>配置</th><th>设置</th></tr></thead><tbody><tr><td>对象</td><td>开发中使用的应用程序或框架</td><td>应用软件</td></tr><tr><td>形式</td><td>特定格式的配置文件</td><td>应用软件的友好界面</td></tr></tbody></table><h3 id="_2、配置文件" tabindex="-1"><a class="header-anchor" href="#_2、配置文件" aria-hidden="true">#</a> 2、配置文件</h3><h4 id="xml" tabindex="-1"><a class="header-anchor" href="#xml" aria-hidden="true">#</a> XML</h4><p>先来个例子：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 配置SpringMVC前端控制器 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>dispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.servlet.DispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- 在初始化参数中指定SpringMVC配置文件位置 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>classpath:spring-mvc.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- 设置当前Servlet创建对象的时机是在Web应用启动时 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>load-on-startup</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>dispatcherServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>

        <span class="token comment">&lt;!-- url-pattern配置斜杠表示匹配所有请求 --&gt;</span>
        <span class="token comment">&lt;!-- 两种可选的配置方式：
                1、斜杠开头：/
                2、包含星号：*.atguigu
             不允许的配置方式：前面有斜杠，中间有星号
                /*.app
         --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="名词解释" tabindex="-1"><a class="header-anchor" href="#名词解释" aria-hidden="true">#</a> 名词解释</h5><p>XML是e<strong>X</strong>tensible <strong>M</strong>arkup <strong>L</strong>anguage的缩写，翻译过来就是<strong>可扩展标记语言</strong>。所以很明显，XML和HTML一样都是标记语言，也就是说它们的基本语法都是标签。</p><h5 id="可扩展" tabindex="-1"><a class="header-anchor" href="#可扩展" aria-hidden="true">#</a> 可扩展</h5><p><strong>可扩展</strong>三个字<strong>表面上</strong>的意思是XML允许<strong>自定义格式</strong>。但是别美，这<strong>不代表</strong>你<strong>可以随便写</strong>。</p><p><img src="`+r+`" alt="image.png"></p><p>在XML基本语法规范的基础上，你使用的那些第三方应用程序、框架会通过设计**『XML约束』<strong>的方式</strong>『强制规定』**配置文件中可以写什么和怎么写，规定之外的都不可以写。</p><p>XML基本语法这个知识点的定位是：我们不需要从零开始，从头到尾的一行一行编写XML文档，而是在第三方应用程序、框架<strong>已提供的配置文件</strong>的基础上<strong>修改</strong>。要改成什么样取决于你的需求，而怎么改取决于<strong>XML基本语法</strong>和<strong>具体的XML约束</strong>。</p><h5 id="xml基本语法" tabindex="-1"><a class="header-anchor" href="#xml基本语法" aria-hidden="true">#</a> XML基本语法</h5><ul><li>XML声明</li></ul><p>这部分基本上就是固定格式，大家知道就好</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>根标签</li></ul><p>根标签有且只能有一个。</p><ul><li>标签关闭 <ul><li>双标签：开始标签和结束标签必须成对出现。</li><li>单标签：单标签在标签内关闭。</li></ul></li><li>标签嵌套 <ul><li>可以嵌套，但是不能交叉嵌套。</li></ul></li><li>注释不能嵌套</li><li>标签名、属性名建议使用小写字母</li><li>属性 <ul><li>属性必须有值</li><li>属性值必须加引号，单双都行</li></ul></li></ul><p>看到这里大家一定会发现XML的基本语法和HTML的基本语法简直如出一辙。其实这不是偶然的，XML基本语法+HTML约束=HTML语法。在逻辑上HTML确实是XML的子集。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">HTML</span> <span class="token name">PUBLIC</span> <span class="token string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span>
<span class="token string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,29),ga={href:"http://www.w3.org/TR/html4/loose.dtd%E8%BF%99%E4%B8%AA%E6%96%87%E4%BB%B6%E5%AE%9A%E4%B9%89%E4%BA%86HTML%E6%96%87%E6%A1%A3%E4%B8%AD%E5%8F%AF%E4%BB%A5%E5%86%99%E5%93%AA%E4%BA%9B%E6%A0%87%E7%AD%BE%EF%BC%8C%E6%A0%87%E7%AD%BE%E5%86%85%E5%8F%AF%E4%BB%A5%E5%86%99%E5%93%AA%E4%BA%9B%E5%B1%9E%E6%80%A7%EF%BC%8C%E6%9F%90%E4%B8%AA%E6%A0%87%E7%AD%BE%E5%8F%AF%E4%BB%A5%E6%9C%89%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E5%AD%90%E6%A0%87%E7%AD%BE%E3%80%82",target:"_blank",rel:"noopener noreferrer"},ba=n(`<h5 id="xml约束" tabindex="-1"><a class="header-anchor" href="#xml约束" aria-hidden="true">#</a> XML约束</h5><p>将来我们主要就是根据XML约束中的规定来编写XML配置文件。而XML约束主要包括DTD和Schema两种。如果XML配置文件使用的是DTD，那么对我们几乎没有影响。如果是Schema约束，需要我们稍微参与一点点。</p><ul><li>DTD</li></ul><p>将来在IDEA中有代码提示的协助，在DTD文档的约束下进行配置非常简单。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;!ENTITY % fontstyle
 &quot;TT | I | B | U | S | STRIKE | BIG | SMALL&quot;&gt;

&lt;!ENTITY % phrase &quot;EM | STRONG | DFN | CODE |
                   SAMP | KBD | VAR | CITE | ABBR | ACRONYM&quot; &gt;

&lt;!ENTITY % special
   &quot;A | IMG | APPLET | OBJECT | FONT | BASEFONT | BR | SCRIPT |
    MAP | Q | SUB | SUP | SPAN | BDO | IFRAME&quot;&gt;

&lt;!ENTITY % formctrl &quot;INPUT | SELECT | TEXTAREA | LABEL | BUTTON&quot;&gt;

&lt;!-- %inline; covers inline or &quot;text-level&quot; elements --&gt;
&lt;!ENTITY % inline &quot;#PCDATA | %fontstyle; | %phrase; | %special; | %formctrl;&quot;&gt;

&lt;!ELEMENT (%fontstyle;|%phrase;) - - (%inline;)*&gt;
&lt;!ATTLIST (%fontstyle;|%phrase;)
  %attrs;                              -- %coreattrs, %i18n, %events --
  &gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Schema</li></ul><p>我们将来使用SSM框架中的Spring、SpringMVC框架时，会涉及到一点点对Schema约束的设置。不过不必紧张，有IDEA的支持操作会非常简单，我们现在只需要理解基本概念即可。</p><p>首先我们要理解一个概念：<strong>『名称空间』</strong>，英文：name space</p><p><img src="`+d+`" alt="image.png"></p><p>Schema约束要求我们一个XML文档中，所有标签，所有属性都必须在约束中有明确的定义。</p><p>下面我们以web.xml的约束声明为例来做个说明：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>属性名</th><th>作用</th></tr></thead><tbody><tr><td>xmlns</td><td>指出当前XML文档约束规则的名称空间在哪里 我们就是通过这个属性来引用一个具体的名称空间</td></tr><tr><td>xmlns:xsi</td><td>指出xmlns这个属性是在哪个约束文档中被定义的</td></tr><tr><td>xsi:schemaLocation</td><td>语法格式：在xsi名称空间下引用schemaLocation属性 配置含义：指定当前XML文档中所用到的约束文档本身的文件的地址</td></tr></tbody></table><p>xmlns和xsi:schemaLocation对应关系如下图：</p><p><img src="`+u+`" alt="image.png"></p><p>引入多个名称空间的例子如下：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/mvc<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.atguigu.crud.component<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewResolver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prefix<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/WEB-INF/pages/<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>suffix<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.jsp<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>default-servlet-handler</span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span><span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+m+`" alt="image.png"></p><p>看到这么复杂，这么长的名称空间字符串，我们会觉得很担心，根本记不住。但是其实不需要记，在IDEA中编写配置文件时，IDEA会协助我们导入，会有提示。我们<strong>理解各个部分的含义能够调整</strong>即可。</p><h4 id="属性文件" tabindex="-1"><a class="header-anchor" href="#属性文件" aria-hidden="true">#</a> 属性文件</h4><p>以properties作为扩展名的文件。</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">yykk.jdbc.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://127.0.0.1:3306/mybatis</span>
<span class="token key attr-name">yykk.jdbc.driver</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">yykk.jdbc.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">yykk.jdbc.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>由键值对组成</li><li>键和值之间的符号是等号</li><li>每一行都必须顶格写，前面不能有空格之类的其他符号</li></ul><p>也有人叫资源文件。</p><h4 id="其他形式" tabindex="-1"><a class="header-anchor" href="#其他形式" aria-hidden="true">#</a> 其他形式</h4><p>YAML语言的配置文件：在SpringBoot中使用。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> fc
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> mydb
    <span class="token key atrule">type</span><span class="token punctuation">:</span> com.alibaba.druid.pool.DruidDataSource
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//192.168.41.100<span class="token punctuation">:</span>3306/spring_boot<span class="token punctuation">?</span>serverTimezone=UTC
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> atguigu
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>
  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token important">*:/mybatis-mapper/*Mapper.xml</span>
<span class="token key atrule">logging</span><span class="token punctuation">:</span>
  <span class="token key atrule">level</span><span class="token punctuation">:</span>
    <span class="token key atrule">com.atguigu.function.compute.mapper</span><span class="token punctuation">:</span> debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JSON格式的配置文件：一般是前端使用。</p><h2 id="二、tomcat的部署和启动" tabindex="-1"><a class="header-anchor" href="#二、tomcat的部署和启动" aria-hidden="true">#</a> 二、Tomcat的部署和启动</h2><h3 id="_1、tomcat扮演的角色" tabindex="-1"><a class="header-anchor" href="#_1、tomcat扮演的角色" aria-hidden="true">#</a> 1、Tomcat扮演的角色</h3><h4 id="对外-web服务器" tabindex="-1"><a class="header-anchor" href="#对外-web服务器" aria-hidden="true">#</a> 对外：Web服务器</h4><p><img src="`+g+'" alt="image.png"></p><h4 id="对内-servlet容器" tabindex="-1"><a class="header-anchor" href="#对内-servlet容器" aria-hidden="true">#</a> 对内：Servlet容器</h4><p><img src="'+b+'" alt="image.png"></p><h3 id="_2、部署" tabindex="-1"><a class="header-anchor" href="#_2、部署" aria-hidden="true">#</a> 2、部署</h3><h4 id="前提" tabindex="-1"><a class="header-anchor" href="#前提" aria-hidden="true">#</a> 前提</h4><p>Tomcat本身是一个Java程序，所以当前系统中必须正确配置了JAVA_HOME环境变量。我们可以通过下面的命令检测：</p><blockquote><p>C:\\Users\\Administrator&gt;<strong>java -version</strong> java version &quot;1.8.0_141&quot; Java(TM) SE Runtime Environment (build 1.8.0_141-b15) Java HotSpot(TM) 64-Bit Server VM (build 25.141-b15, mixed mode)</p><p>C:\\Users\\Administrator&gt;<strong>echo %JAVA_HOME%</strong> D:\\software\\Java</p><p>C:\\Users\\Administrator&gt;<strong>echo %PATH%</strong> D:\\software\\xftp;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;D:\\software\\Java\\bin;D:\\software\\apache-maven-3.5.4\\bin;C:\\Users\\Administrator\\AppData\\Local\\Microsoft\\WindowsApps;</p></blockquote><h4 id="解压" tabindex="-1"><a class="header-anchor" href="#解压" aria-hidden="true">#</a> 解压</h4><p>将Tomcat压缩包解压到一个<strong>非中文无空格</strong>的目录下。</p><p><img src="'+k+'" alt="image.png"></p><h4 id="tomcat目录结构" tabindex="-1"><a class="header-anchor" href="#tomcat目录结构" aria-hidden="true">#</a> Tomcat目录结构</h4><p><img src="'+v+'" alt="image.png"></p><h4 id="启动tomcat并访问首页" tabindex="-1"><a class="header-anchor" href="#启动tomcat并访问首页" aria-hidden="true">#</a> 启动Tomcat并访问首页</h4><p>启动Tomcat：运行Tomcat解压后根目录下\\bin\\startup.bat即可，例如：</p><blockquote><p>D:\\software\\apache-tomcat-7.0.79\\bin\\startup.bat</p></blockquote><p><img src="'+h+'" alt="image.png"></p><p>如果需要停止Tomcat，则运行shutdown.bat程序，例如：</p><blockquote><p>D:\\software\\apache-tomcat-7.0.79\\bin\\shutdown.bat</p></blockquote><p>小提示：将来我们在IDEA中启动Tomcat，如果IDEA卡死强关，Tomcat不会正常退出。下次再启动Tomcat会因为残留进程仍然占用8080端口，导致新的进程无法启动。此时可以使用shutdown.bat结束残留进程。</p><h4 id="部署一个war包并启动tomcat" tabindex="-1"><a class="header-anchor" href="#部署一个war包并启动tomcat" aria-hidden="true">#</a> 部署一个war包并启动Tomcat</h4><p><img src="'+f+'" alt="image.png"></p><p>在Tomcat启动过程中，会打印启动日志，其中我们能看到hello.war被部署的日志信息：</p><blockquote><p>信息: Deployment of web application archive D:\\software\\apache-tomcat-7.0.79\\webapps\\hello.war has finished in 1,150 ms</p></blockquote><p>此时，我们回到webapps目录，能看到hello.war被解压了：</p><p><img src="'+_+'" alt="image.png"></p><h4 id="访问刚才部署的web应用" tabindex="-1"><a class="header-anchor" href="#访问刚才部署的web应用" aria-hidden="true">#</a> 访问刚才部署的Web应用</h4><p><img src="'+x+'" alt="image.png"></p><h4 id="关于tomcat端口号" tabindex="-1"><a class="header-anchor" href="#关于tomcat端口号" aria-hidden="true">#</a> 关于Tomcat端口号</h4><p><img src="'+q+`" alt="image.png"></p><p>配置文件节选：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>……
<span class="token comment">&lt;!-- 第22行 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Server</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8005<span class="token punctuation">&quot;</span></span> <span class="token attr-name">shutdown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>SHUTDOWN<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
……
<span class="token comment">&lt;!-- 第71行 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8080<span class="token punctuation">&quot;</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>HTTP/1.1<span class="token punctuation">&quot;</span></span>
           <span class="token attr-name">connectionTimeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20000<span class="token punctuation">&quot;</span></span>
           <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8443<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
……
<span class="token comment">&lt;!-- 第93行 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8009<span class="token punctuation">&quot;</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>AJP/1.3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8443<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>三个位置共定义了3个端口号，Tomcat启动后，这个三个端口号都会被占用。</p><h2 id="三、在idea中关联tomcat" tabindex="-1"><a class="header-anchor" href="#三、在idea中关联tomcat" aria-hidden="true">#</a> 三、在IDEA中关联Tomcat</h2><p><img src="`+w+'" alt="image.png"></p><p><img src="'+E+'" alt="image.png"></p><p><img src="'+T+'" alt="image.png"></p><p><img src="'+A+'" alt="image.png"></p><p><img src="'+y+'" alt="image.png"></p><p><img src="'+M+'" alt="image.png"></p><p><img src="'+L+'" alt="image.png"></p><h2 id="四、创建动态web工程并部署运行" tabindex="-1"><a class="header-anchor" href="#四、创建动态web工程并部署运行" aria-hidden="true">#</a> 四、创建动态Web工程并部署运行</h2><h3 id="_1、第一步" tabindex="-1"><a class="header-anchor" href="#_1、第一步" aria-hidden="true">#</a> 1、第一步</h3><p>创建empty project</p><h3 id="_2、第二步" tabindex="-1"><a class="header-anchor" href="#_2、第二步" aria-hidden="true">#</a> 2、第二步</h3><p>以下操作基于IDEA2018.3</p><p><img src="'+B+'" alt="image.png"></p><p>创建动态Web工程：</p><p><img src="'+D+'" alt="image.png"></p><p><img src="'+S+'" alt="image.png"></p><p>创建好的工程如下所示：</p><p><img src="'+I+'" alt="image.png"></p><p><strong>注意</strong>：src目录应该是蓝色的，web目录的图标上有个蓝色的圆点。</p><h3 id="_3、动态web工程目录结构介绍" tabindex="-1"><a class="header-anchor" href="#_3、动态web工程目录结构介绍" aria-hidden="true">#</a> 3、动态Web工程目录结构介绍</h3><table><thead><tr><th>目录或文件名</th><th>功能</th></tr></thead><tbody><tr><td>src目录</td><td>存放Java源文件</td></tr><tr><td>web目录</td><td>存放Web开发相关资源</td></tr><tr><td>web/WEB-INF目录</td><td>存放web.xml文件、classes目录、lib目录</td></tr><tr><td>web/WEB-INF/web.xml文件</td><td>别名：部署描述符deployment descriptor 作用：Web工程的核心配置文件</td></tr><tr><td>web/WEB-INF/classes目录</td><td>存放编译得到的*.class字节码文件</td></tr><tr><td>web/WEB-INF/lib目录</td><td>存放第三方jar包</td></tr></tbody></table><h3 id="_4、创建用来部署web工程的tomcat实例" tabindex="-1"><a class="header-anchor" href="#_4、创建用来部署web工程的tomcat实例" aria-hidden="true">#</a> 4、创建用来部署Web工程的Tomcat实例</h3><p><img src="'+j+'" alt="image.png"></p><p><img src="'+C+'" alt="image.png"></p><p><img src="'+N+'" alt="image.png"></p><p><img src="'+X+'" alt="image.png"></p><p>通常我们会觉得现在这个Application context太长了，改简短一些会更方便。</p><p><img src="'+W+'" alt="image.png"></p><p><img src="'+F+'" alt="image.png"></p><p><img src="'+H+'" alt="image.png"></p><h3 id="_5、编写简单的测试代码" tabindex="-1"><a class="header-anchor" href="#_5、编写简单的测试代码" aria-hidden="true">#</a> 5、编写简单的测试代码</h3><h4 id="java代码" tabindex="-1"><a class="header-anchor" href="#java代码" aria-hidden="true">#</a> Java代码</h4><p><img src="'+P+`" alt="image.png"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;年少不知软饭香&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jsp代码" tabindex="-1"><a class="header-anchor" href="#jsp代码" aria-hidden="true">#</a> JSP代码</h4><p><img src="`+O+`" alt="image.png"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;%=new Hello().getMessage() %&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="启动专门为这个工程创建的tomcat实例" tabindex="-1"><a class="header-anchor" href="#启动专门为这个工程创建的tomcat实例" aria-hidden="true">#</a> 启动专门为这个工程创建的Tomcat实例</h4><p><img src="`+R+'" alt="image.png"></p><h4 id="错误提示" tabindex="-1"><a class="header-anchor" href="#错误提示" aria-hidden="true">#</a> 错误提示</h4><p><img src="'+U+'" alt="image.png"></p><p>提示信息的含义：未指定编译结果的保存目录。</p><p>错误原因：</p><ul><li>父工程只是一个empty project</li><li>当前模块继承父工程的编译输出路径</li></ul><p>为了解决这个问题我们可以在父工程中设置输出路径：</p><p><img src="'+J+'" alt="image.png"></p><p><img src="'+V+'" alt="image.png"></p><p><img src="'+Y+'" alt="image.png"></p><p><img src="'+G+'" alt="image.png"></p><h3 id="_6、idea运行程序时界面布局" tabindex="-1"><a class="header-anchor" href="#_6、idea运行程序时界面布局" aria-hidden="true">#</a> 6、IDEA运行程序时界面布局</h3><p><img src="'+K+'" alt="image.png"></p><h2 id="五、在idea中重新部署运行" tabindex="-1"><a class="header-anchor" href="#五、在idea中重新部署运行" aria-hidden="true">#</a> 五、在IDEA中重新部署运行</h2><h3 id="_1、为什么需要重新部署" tabindex="-1"><a class="header-anchor" href="#_1、为什么需要重新部署" aria-hidden="true">#</a> 1、为什么需要重新部署？</h3><p>对于已经运行过的Web项目，如果我们增加了目录和文件，那么部署目录有可能不会自动同步过来，从而造成实际运行的效果和我们期望的不同。</p><p>如下图中，我们在工程目录已经新增了././images目录和两个图片：</p><p><img src="'+z+'" alt="image.png"></p><p>但是在部署目录并没有出现：</p><p><img src="'+Q+'" alt="image.png"></p><p>哪怕我们执行了重新部署也没有起作用。</p><h3 id="_2、如何重新部署" tabindex="-1"><a class="header-anchor" href="#_2、如何重新部署" aria-hidden="true">#</a> 2、如何重新部署？</h3><h4 id="清理部署目录" tabindex="-1"><a class="header-anchor" href="#清理部署目录" aria-hidden="true">#</a> 清理部署目录</h4><p><img src="'+Z+'" alt="image.png"></p><p><img src="'+$+'" alt="image.png"></p><h4 id="构建" tabindex="-1"><a class="header-anchor" href="#构建" aria-hidden="true">#</a> 构建</h4><p><img src="'+aa+'" alt="image.png"></p><h4 id="效果" tabindex="-1"><a class="header-anchor" href="#效果" aria-hidden="true">#</a> 效果</h4><p><img src="'+sa+'" alt="image.png"></p><h2 id="六、导入别人的web-module" tabindex="-1"><a class="header-anchor" href="#六、导入别人的web-module" aria-hidden="true">#</a> 六、导入别人的web module</h2><p>如果你想把老师发给你的module导入自己的project中运行起来，可以参考下面的操作：</p><blockquote><p>做下面操作前，需要把要导入的module复制到project目录下。</p></blockquote><p><img src="'+na+'" alt="image.png"></p><p><img src="'+ta+'" alt="image.png"></p><p><img src="'+ea+'" alt="image.png"></p><p><img src="'+pa+'" alt="image.png"></p><p><img src="'+ca+'" alt="image.png"></p><p><img src="'+oa+'" alt="image.png"></p><p><img src="'+la+'" alt="image.png"></p><p><img src="'+ia+'" alt="image.png"></p><p><img src="'+ra+'" alt="image.png"></p><p><img src="'+da+'" alt="image.png"></p>',144);function ka(va,ha){const t=l("ExternalLinkIcon");return p(),c("div",null,[ma,a("p",null,[s("从HTML4.01版本的文档类型声明中可以看出，这里使用的DTD类型的XML约束。也就是说"),a("a",ga,[s("http://www.w3.org/TR/html4/loose.dtd这个文件定义了HTML文档中可以写哪些标签，标签内可以写哪些属性，某个标签可以有什么样的子标签。"),o(t)])]),ba])}const xa=e(ua,[["render",ka],["__file","08、Tomcat.html.vue"]]);export{xa as default};
