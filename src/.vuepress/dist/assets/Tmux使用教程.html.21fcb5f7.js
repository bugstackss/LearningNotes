import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as t,d as a,e,b as s,a as i,r as c}from"./app.9b10ba0a.js";const r="/assets/bg2019102005.c70a09af.png",o="/assets/bg2019102006.ef374548.png",p="/assets/bg2019102007.1c400bca.jpg",u={},m=i('<h1 id="tmux使用教程" tabindex="-1"><a class="header-anchor" href="#tmux使用教程" aria-hidden="true">#</a> Tmux使用教程</h1><p>Tmux 是一个终端复用器（terminal multiplexer），非常有用，属于常用的开发工具。</p><p>本文介绍如何使用 Tmux。</p><p><img src="'+r+'" alt="img"></p><h2 id="一、tmux-是什么" tabindex="-1"><a class="header-anchor" href="#一、tmux-是什么" aria-hidden="true">#</a> 一、Tmux 是什么？</h2><h3 id="_1-1-会话与进程" tabindex="-1"><a class="header-anchor" href="#_1-1-会话与进程" aria-hidden="true">#</a> 1.1 会话与进程</h3><p>命令行的典型使用方式是，打开一个终端窗口（terminal window，以下简称&quot;窗口&quot;），在里面输入命令。<strong>用户与计算机的这种临时的交互，称为一次&quot;会话&quot;（session）</strong> 。</p>',7),h={href:"https://www.ruanyifeng.com/blog/2016/02/linux-daemon.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html",target:"_blank",rel:"noopener noreferrer"},v=i(`<p>为了解决这个问题，会话与窗口可以&quot;解绑&quot;：窗口关闭时，会话并不终止，而是继续运行，等到以后需要的时候，再让会话&quot;绑定&quot;其他窗口。</p><h3 id="_1-2-tmux-的作用" tabindex="-1"><a class="header-anchor" href="#_1-2-tmux-的作用" aria-hidden="true">#</a> 1.2 Tmux 的作用</h3><p><strong>Tmux 就是会话与窗口的&quot;解绑&quot;工具，将它们彻底分离。</strong></p><p>（1）它允许在单个窗口中，同时访问多个会话。这对于同时运行多个命令行程序很有用。</p><p>（2） 它可以让新窗口&quot;接入&quot;已经存在的会话。</p><p>（3）它允许每个会话有多个连接窗口，因此可以多人实时共享会话。</p><p>（4）它还支持窗口任意的垂直和水平拆分。</p><p>类似的终端复用器还有 GNU Screen。Tmux 与它功能相似，但是更易用，也更强大。</p><h2 id="二、基本用法" tabindex="-1"><a class="header-anchor" href="#二、基本用法" aria-hidden="true">#</a> 二、基本用法</h2><h3 id="_2-1-安装" tabindex="-1"><a class="header-anchor" href="#_2-1-安装" aria-hidden="true">#</a> 2.1 安装</h3><p>Tmux 一般需要自己安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Ubuntu 或 Debian</span>
$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> tmux

<span class="token comment"># CentOS 或 Fedora</span>
$ <span class="token function">sudo</span> yum <span class="token function">install</span> tmux

<span class="token comment"># Mac</span>
$ brew <span class="token function">install</span> tmux
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-启动与退出" tabindex="-1"><a class="header-anchor" href="#_2-2-启动与退出" aria-hidden="true">#</a> 2.2 启动与退出</h3><p>安装完成后，键入<code>tmux</code>命令，就进入了 Tmux 窗口。</p><blockquote><p>$ tmux</p></blockquote><p>上面命令会启动 Tmux 窗口，底部有一个状态栏。状态栏的左侧是窗口信息（编号和名称），右侧是系统信息。</p><p><img src="`+o+`" alt="img"></p><p>按下<code>Ctrl+d</code>或者显式输入<code>exit</code>命令，就可以退出 Tmux 窗口。</p><blockquote><p>$ exit</p></blockquote><h3 id="_2-3-前缀键" tabindex="-1"><a class="header-anchor" href="#_2-3-前缀键" aria-hidden="true">#</a> 2.3 前缀键</h3><p>Tmux 窗口有大量的快捷键。所有快捷键都要通过前缀键唤起。默认的前缀键是<code>Ctrl+b</code>，即先按下<code>Ctrl+b</code>，快捷键才会生效。</p><p>举例来说，帮助命令的快捷键是<code>Ctrl+b ?</code>。它的用法是，在 Tmux 窗口中，先按下<code>Ctrl+b</code>，再按下<code>?</code>，就会显示帮助信息。</p><p>然后，按下 ESC 键或<code>q</code>键，就可以退出帮助。</p><blockquote><p>备注：Ctrl+b 快捷键 可以 备注下 松开后再按其它键。</p></blockquote><h2 id="三、会话管理" tabindex="-1"><a class="header-anchor" href="#三、会话管理" aria-hidden="true">#</a> 三、会话管理</h2><h3 id="_3-1-新建会话" tabindex="-1"><a class="header-anchor" href="#_3-1-新建会话" aria-hidden="true">#</a> 3.1 新建会话</h3><p>第一个启动的 Tmux 窗口，编号是<code>0</code>，第二个窗口的编号是<code>1</code>，以此类推。这些窗口对应的会话，就是 0 号会话、1 号会话。</p><p>使用编号区分会话，不太直观，更好的方法是为会话起名。</p><blockquote><p>$ tmux new -s &lt; session-name &gt;</p></blockquote><p>上面命令新建一个指定名称的会话。</p><h3 id="_3-2-分离会话" tabindex="-1"><a class="header-anchor" href="#_3-2-分离会话" aria-hidden="true">#</a> 3.2 分离会话</h3><p>在 Tmux 窗口中，按下<code>Ctrl+b d</code>或者输入<code>tmux detach</code>命令，就会将当前会话与窗口分离。</p><blockquote><p>$ tmux detach</p></blockquote><p>上面命令执行后，就会退出当前 Tmux 窗口，但是会话和里面的进程仍然在后台运行。</p><p><code>tmux ls</code>命令可以查看当前所有的 Tmux 会话。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ tmux <span class="token function">ls</span>
<span class="token comment"># or</span>
$ tmux list-session
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-接入会话" tabindex="-1"><a class="header-anchor" href="#_3-3-接入会话" aria-hidden="true">#</a> 3.3 接入会话</h3><p><code>tmux attach</code>命令用于重新接入某个已存在的会话。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用会话编号</span>
$ tmux attach <span class="token parameter variable">-t</span> <span class="token number">0</span>

<span class="token comment"># 使用会话名称</span>
$ tmux attach <span class="token parameter variable">-t</span> <span class="token operator">&lt;</span>session-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-杀死会话" tabindex="-1"><a class="header-anchor" href="#_3-4-杀死会话" aria-hidden="true">#</a> 3.4 杀死会话</h3><p><code>tmux kill-session</code>命令用于杀死某个会话。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用会话编号</span>
$ tmux kill-session <span class="token parameter variable">-t</span> <span class="token number">0</span>

<span class="token comment"># 使用会话名称</span>
$ tmux kill-session <span class="token parameter variable">-t</span> <span class="token operator">&lt;</span>session-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-切换会话" tabindex="-1"><a class="header-anchor" href="#_3-5-切换会话" aria-hidden="true">#</a> 3.5 切换会话</h3><p><code>tmux switch</code>命令用于切换会话。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用会话编号</span>
$ tmux switch <span class="token parameter variable">-t</span> <span class="token number">0</span>

<span class="token comment"># 使用会话名称</span>
$ tmux switch <span class="token parameter variable">-t</span> <span class="token operator">&lt;</span>session-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-重命名会话" tabindex="-1"><a class="header-anchor" href="#_3-6-重命名会话" aria-hidden="true">#</a> 3.6 重命名会话</h3><p><code>tmux rename-session</code>命令用于重命名会话。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ tmux rename-session <span class="token parameter variable">-t</span> <span class="token number">0</span> <span class="token operator">&lt;</span>new-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面命令将0号会话重命名。</p><h3 id="_3-7-会话快捷键" tabindex="-1"><a class="header-anchor" href="#_3-7-会话快捷键" aria-hidden="true">#</a> 3.7 会话快捷键</h3><p>下面是一些会话相关的快捷键。</p><blockquote><ul><li><code>Ctrl+b d</code>：分离当前会话。</li><li><code>Ctrl+b s</code>：列出所有会话。</li><li><code>Ctrl+b $</code>：重命名当前会话。</li></ul></blockquote><h2 id="四、最简操作流程" tabindex="-1"><a class="header-anchor" href="#四、最简操作流程" aria-hidden="true">#</a> 四、最简操作流程</h2><p>综上所述，以下是 Tmux 的最简操作流程。</p><blockquote><ol><li>新建会话<code>tmux new -s my_session</code>。</li><li>在 Tmux 窗口运行所需的程序。</li><li>按下快捷键<code>Ctrl+b d</code>将会话分离。</li><li>下次使用时，重新连接到会话<code>tmux attach-session -t my_session</code>。</li></ol></blockquote><h2 id="五、窗格操作" tabindex="-1"><a class="header-anchor" href="#五、窗格操作" aria-hidden="true">#</a> 五、窗格操作</h2><p>Tmux 可以将窗口分成多个窗格（pane），每个窗格运行不同的命令。以下命令都是在 Tmux 窗口中执行。</p><h3 id="_5-1-划分窗格" tabindex="-1"><a class="header-anchor" href="#_5-1-划分窗格" aria-hidden="true">#</a> 5.1 划分窗格</h3><p><code>tmux split-window</code>命令用来划分窗格。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 划分上下两个窗格</span>
$ tmux split-window

<span class="token comment"># 划分左右两个窗格</span>
$ tmux split-window <span class="token parameter variable">-h</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+p+`" alt="img"></p><h3 id="_5-2-移动光标" tabindex="-1"><a class="header-anchor" href="#_5-2-移动光标" aria-hidden="true">#</a> 5.2 移动光标</h3><p><code>tmux select-pane</code>命令用来移动光标位置。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 光标切换到上方窗格</span>
$ tmux select-pane <span class="token parameter variable">-U</span>

<span class="token comment"># 光标切换到下方窗格</span>
$ tmux select-pane <span class="token parameter variable">-D</span>

<span class="token comment"># 光标切换到左边窗格</span>
$ tmux select-pane <span class="token parameter variable">-L</span>

<span class="token comment"># 光标切换到右边窗格</span>
$ tmux select-pane <span class="token parameter variable">-R</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-交换窗格位置" tabindex="-1"><a class="header-anchor" href="#_5-3-交换窗格位置" aria-hidden="true">#</a> 5.3 交换窗格位置</h3><p><code>tmux swap-pane</code>命令用来交换窗格位置。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 当前窗格上移</span>
$ tmux swap-pane <span class="token parameter variable">-U</span>

<span class="token comment"># 当前窗格下移</span>
$ tmux swap-pane <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是一些窗格操作的快捷键。</p><blockquote><ul><li><code>Ctrl+b %</code>：划分左右两个窗格。</li><li><code>Ctrl+b &quot;</code>：划分上下两个窗格。</li><li><code>Ctrl+b &lt;arrow key&gt;</code>：光标切换到其他窗格。<code>&lt;arrow key&gt;</code>是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键<code>↓</code>。</li><li><code>Ctrl+b ;</code>：光标切换到上一个窗格。</li><li><code>Ctrl+b o</code>：光标切换到下一个窗格。</li><li><code>Ctrl+b {</code>：当前窗格与上一个窗格交换位置。</li><li><code>Ctrl+b }</code>：当前窗格与下一个窗格交换位置。</li><li><code>Ctrl+b Ctrl+o</code>：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。</li><li><code>Ctrl+b Alt+o</code>：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。</li><li><code>Ctrl+b x</code>：关闭当前窗格。</li><li><code>Ctrl+b !</code>：将当前窗格拆分为一个独立窗口。</li><li><code>Ctrl+b z</code>：当前窗格全屏显示，再使用一次会变回原来大小。</li><li><code>Ctrl+b Ctrl+&lt;arrow key&gt;</code>：按箭头方向调整窗格大小。</li><li><code>Ctrl+b q</code>：显示窗格编号。</li></ul></blockquote><h2 id="六、窗口管理" tabindex="-1"><a class="header-anchor" href="#六、窗口管理" aria-hidden="true">#</a> 六、窗口管理</h2><p>除了将一个窗口划分成多个窗格，Tmux 也允许新建多个窗口。</p><h3 id="_6-1-新建窗口" tabindex="-1"><a class="header-anchor" href="#_6-1-新建窗口" aria-hidden="true">#</a> 6.1 新建窗口</h3><p><code>tmux new-window</code>命令用来创建新窗口。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ tmux new-window

<span class="token comment"># 新建一个指定名称的窗口</span>
$ tmux new-window <span class="token parameter variable">-n</span> <span class="token operator">&lt;</span>window-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-切换窗口" tabindex="-1"><a class="header-anchor" href="#_6-2-切换窗口" aria-hidden="true">#</a> 6.2 切换窗口</h3><p><code>tmux select-window</code>命令用来切换窗口。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 切换到指定编号的窗口</span>
$ tmux select-window <span class="token parameter variable">-t</span> <span class="token operator">&lt;</span>window-number<span class="token operator">&gt;</span>

<span class="token comment"># 切换到指定名称的窗口</span>
$ tmux select-window <span class="token parameter variable">-t</span> <span class="token operator">&lt;</span>window-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-重命名窗口" tabindex="-1"><a class="header-anchor" href="#_6-3-重命名窗口" aria-hidden="true">#</a> 6.3 重命名窗口</h3><p><code>tmux rename-window</code>命令用于为当前窗口起名（或重命名）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ tmux rename-window <span class="token operator">&lt;</span>new-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-4-窗口快捷键" tabindex="-1"><a class="header-anchor" href="#_6-4-窗口快捷键" aria-hidden="true">#</a> 6.4 窗口快捷键</h3><p>下面是一些窗口操作的快捷键。</p><blockquote><ul><li><code>Ctrl+b c</code>：创建一个新窗口，状态栏会显示多个窗口的信息。</li><li><code>Ctrl+b p</code>：切换到上一个窗口（按照状态栏上的顺序）。</li><li><code>Ctrl+b n</code>：切换到下一个窗口。</li><li><code>Ctrl+b &lt;number&gt;</code>：切换到指定编号的窗口，其中的<code>&lt;number&gt;</code>是状态栏上的窗口编号。</li><li><code>Ctrl+b w</code>：从列表中选择窗口。</li><li><code>Ctrl+b ,</code>：窗口重命名。</li></ul></blockquote><h2 id="七、其他命令" tabindex="-1"><a class="header-anchor" href="#七、其他命令" aria-hidden="true">#</a> 七、其他命令</h2><p>下面是一些其他命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 列出所有快捷键，及其对应的 Tmux 命令</span>
$ tmux list-keys

<span class="token comment"># 列出所有 Tmux 命令及其参数</span>
$ tmux list-commands

<span class="token comment"># 列出当前所有 Tmux 会话的信息</span>
$ tmux info

<span class="token comment"># 重新加载当前的 Tmux 配置</span>
$ tmux source-file ~/.tmux.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,86);function x(k,g){const n=c("ExternalLinkIcon");return l(),t("div",null,[m,a("p",null,[e("会话的一个重要特点是，窗口与其中启动的进程是"),a("a",h,[e("连在一起"),s(n)]),e("的。打开窗口，会话开始；关闭窗口，会话结束，会话内部的进程也会随之终止，不管有没有运行完。")]),a("p",null,[e("一个典型的例子就是，"),a("a",b,[e("SSH 登录"),s(n)]),e("远程计算机，打开一个远程窗口执行命令。这时，网络突然断线，再次登录的时候，是找不回上一次执行的命令的。因为上一次 SSH 会话已经终止了，里面的进程也随之消失了。")]),v])}const f=d(u,[["render",x],["__file","Tmux使用教程.html.vue"]]);export{f as default};
