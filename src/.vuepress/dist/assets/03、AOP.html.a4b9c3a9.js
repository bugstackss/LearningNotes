const e=JSON.parse('{"key":"v-e5b0bac4","path":"/notes/framework/spring/03%E3%80%81AOP.html","title":"AOP","lang":"zh-CN","frontmatter":{"title":"AOP","category":["spring"],"tag":["spring","SSM框架","AOP"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"1、AOP 概述 定义：AOP（Aspect Oriented Programming，面向切面编程），通过预编译和运行时动态代理扩展程序功能; 作用：利用 AOP 可以对业务逻辑的各个部分进行隔离，降低耦合性，提高程序可重用性和开发效率; 场景：日志记录，性能统计，安全控制，事务处理，异常处理; 通俗描述：不修改源代码，在主干功能中添加新功能; 使用...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/framework/spring/03%E3%80%81AOP.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"AOP"}],["meta",{"property":"og:description","content":"1、AOP 概述 定义：AOP（Aspect Oriented Programming，面向切面编程），通过预编译和运行时动态代理扩展程序功能; 作用：利用 AOP 可以对业务逻辑的各个部分进行隔离，降低耦合性，提高程序可重用性和开发效率; 场景：日志记录，性能统计，安全控制，事务处理，异常处理; 通俗描述：不修改源代码，在主干功能中添加新功能; 使用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"AOP"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:tag","content":"SSM框架"}],["meta",{"property":"article:tag","content":"AOP"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"1、AOP 概述","slug":"_1、aop-概述","link":"#_1、aop-概述","children":[]},{"level":2,"title":"2、AOP 底层原理","slug":"_2、aop-底层原理","link":"#_2、aop-底层原理","children":[{"level":3,"title":"2.1、JDK 动态代理","slug":"_2-1、jdk-动态代理","link":"#_2-1、jdk-动态代理","children":[]},{"level":3,"title":"2.2、CGlib 动态代理","slug":"_2-2、cglib-动态代理","link":"#_2-2、cglib-动态代理","children":[]}]},{"level":2,"title":"3、JDK 动态代理实现","slug":"_3、jdk-动态代理实现","link":"#_3、jdk-动态代理实现","children":[]},{"level":2,"title":"4、AOP 术语","slug":"_4、aop-术语","link":"#_4、aop-术语","children":[]},{"level":2,"title":"5、AOP 准备工作","slug":"_5、aop-准备工作","link":"#_5、aop-准备工作","children":[{"level":3,"title":"5.1、AspectJ 介绍","slug":"_5-1、aspectj-介绍","link":"#_5-1、aspectj-介绍","children":[]},{"level":3,"title":"5.2、引入 AOP 相关依赖","slug":"_5-2、引入-aop-相关依赖","link":"#_5-2、引入-aop-相关依赖","children":[]},{"level":3,"title":"5.3、切入点表达式","slug":"_5-3、切入点表达式","link":"#_5-3、切入点表达式","children":[]}]},{"level":2,"title":"6、AspectJ 注解实现","slug":"_6、aspectj-注解实现","link":"#_6、aspectj-注解实现","children":[{"level":3,"title":"6.1、Spring 配置文件","slug":"_6-1、spring-配置文件","link":"#_6-1、spring-配置文件","children":[]},{"level":3,"title":"6.2、创建被增强对象和增强对象","slug":"_6-2、创建被增强对象和增强对象","link":"#_6-2、创建被增强对象和增强对象","children":[]},{"level":3,"title":"6.3、添加增强类注解和切入点表达式","slug":"_6-3、添加增强类注解和切入点表达式","link":"#_6-3、添加增强类注解和切入点表达式","children":[]},{"level":3,"title":"6.4、代码测试","slug":"_6-4、代码测试","link":"#_6-4、代码测试","children":[]},{"level":3,"title":"6.5、抽取相同切入点表达式","slug":"_6-5、抽取相同切入点表达式","link":"#_6-5、抽取相同切入点表达式","children":[]},{"level":3,"title":"6.6、设置增强类优先级","slug":"_6-6、设置增强类优先级","link":"#_6-6、设置增强类优先级","children":[]},{"level":3,"title":"6.7、完全注解开发","slug":"_6-7、完全注解开发","link":"#_6-7、完全注解开发","children":[]}]},{"level":2,"title":"7、AspectJ 配置文件实现","slug":"_7、aspectj-配置文件实现","link":"#_7、aspectj-配置文件实现","children":[{"level":3,"title":"7.1、创建被增强对象和增强对象","slug":"_7-1、创建被增强对象和增强对象","link":"#_7-1、创建被增强对象和增强对象","children":[]},{"level":3,"title":"7.2、Spring 配置文件","slug":"_7-2、spring-配置文件","link":"#_7-2、spring-配置文件","children":[]},{"level":3,"title":"7.3、代码测试","slug":"_7-3、代码测试","link":"#_7-3、代码测试","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":8.41,"words":2522},"filePathRelative":"notes/framework/spring/03、AOP.md","localizedDate":"2023年5月31日"}');export{e as data};
