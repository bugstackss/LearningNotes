import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,d as a,e as i,b as l,a as s,r as o}from"./app.9b10ba0a.js";const c="/assets/2023-04-27-05-50-41-image.261de616.png",r="/assets/2023-04-27-06-28-02-image.b378ce9a.png",u="/assets/2023-04-27-06-30-15-image.68c25f3d.png",d="/assets/2023-04-27-06-31-00-image.6de7ba39.png",m="/assets/2023-04-27-06-32-10-image.a87b71bb.png",g="/assets/2023-04-27-06-33-13-image.f4484377.png",k="/assets/image-20230427064007105.87f653f6.png",v="/assets/2023-04-27-06-34-44-image.a7dae50b.png",b="/assets/2023-04-27-06-36-04-image.e2831a39.png",_="/assets/2023-04-27-06-38-02-image.ee74ccb5.png",h="/assets/image-20230427064133493.b2935736.png",y="/assets/image-20230427064235885.2c6ec270.png",f="/assets/image-20230427064446240.32a11686.png",A="/assets/image-20230427064412268.4988bbb6.png",E="/assets/image-20230427064604186.5f750a11.png",S="/assets/image-20230427064822897.4bb2beaa.png",j="/assets/image-20230427064949249.b6b14ddb.png",x="/assets/image-20230427065434952.d469da39.png",w="/assets/image-20230505233238195.5dabe688.png",T="/assets/image-20230505235727822.5bba85fd.png",C="/assets/image-20230427070129865.6d471e9e.png",I="/assets/image-20230427070423906.48624a26.png",M="/assets/image-20230427070703095.f14b4dbd.png",$="/assets/image-20230513231328951.0c8c2d06.png",q="/assets/image-20230514012525469.312bb693.png",D="/assets/image-20230514013007613.efc90b32.png",G="/assets/image-20230514013034091.954deb7a.png",F="/assets/image-20230514015147623.be00707b.png",V="/assets/image-20230514015203129.e4f1b3d0.png",J={},B=s(`<h2 id="_01、主题推荐" tabindex="-1"><a class="header-anchor" href="#_01、主题推荐" aria-hidden="true">#</a> 01、主题推荐</h2><ul><li><p>Atom Material Icons 一款好看的图标库</p></li><li><p>Cyan Light Theme</p></li><li><p>Dracula Theme 吸血鬼主题</p></li><li><p>Material Theme UI （推荐的主题，但是在2021.3版本之后就开始收费了）</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>解决方法：
https://plugins.jetbrains.com/plugin/8006-material-theme-ui/versions/stable

上面的是官网的地址，请先登录官网，然后下载6.10之前的版本，然后将该版本导入到idea中即可！
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+'" alt=""></p><blockquote><p>注意点：这里导入的时候是导入zip压缩的，文件夹之类的不可以！</p></blockquote><ul><li><p>One Dark Theme</p></li><li><p>Vuesion Theme</p></li><li><p>Xcode-Dark Theme</p></li><li><p>Dark purple Theme</p></li></ul><h2 id="_02、插件推荐" tabindex="-1"><a class="header-anchor" href="#_02、插件推荐" aria-hidden="true">#</a> 02、插件推荐</h2>',7),L=s("<li><p>Rainbow Brackets 彩色括号</p></li><li><p>Maven Helper</p></li><li><p>Tabnine AI Code 智能提示插件</p></li><li><p>JPA Buddy 提供jpa的支持</p></li><li><p>String Manipulation</p></li><li><p>Free Mybatis Tool</p></li><li><p>Alibaba Cloud Toolkit</p></li><li><p>.ignore</p></li><li><p>Alibaba Java Coding Guidelines</p></li><li><p>CheckStyle-IDEA</p></li><li><p>GenerateAllSetter</p></li><li><p>GitToolBox</p></li><li><p>maven-search</p></li><li><p>MybatisX</p></li><li><p>PlantUML Integration</p></li><li><p>Vue.js 如果你喜欢idea写前端，支持vue语法</p></li><li><p>Translation 翻译插件</p></li><li><p>FindBugs 可以更加深入的去检测异常</p></li><li><p>GsonFormat 代码生成插件。在类中使用，粘贴一段 Json 文本，能自动生成对象的嵌套结构代码。</p></li><li><p>Key Promoter X 快捷键提示</p></li><li><p>AiXcoder Code Completer（codeta貌似已经不可以使用了，推荐使用tabnine）</p></li><li><p>Arthas idea（阿里开源的Java在线诊断工具）</p></li><li><p>Auto filling Java call arguments 代码生成插件。通过快捷键自动补全函数的调用参数，针对包含大量参数的构造函数和方法非常有用！</p></li><li><p>GenerateSerialVersionUID （代码生成插件。一键为实现 Serializable 接口的类生成 SerialVersionUID。）</p></li><li><p>VisualVM Launcher （jvm调优插件。运行java程序的时候启动visualvm，方便查看jvm的情况 比如堆内存大小的分配。）</p></li><li><p>MyBatisCodeHelperPro （mybatis代码帮助插件。最好的Mybatis代码提示，完整支持Mybatis动态sql代码提示，代码检测，写sql几乎所有地方都有代码提示。）</p></li><li><p>lombok</p></li><li><p>google-java-format 代码自动格式化</p></li><li><p>RestfulToolkit （搜索URL，准确的说是搜索SpringMVC项目里，Controller层的@RequestMapping里的URL，通过URL匹配到相应的Controller层方法。）</p></li><li><p><strong>Jclasslib Bytecode Viewer</strong>（看类的字节码文件）</p></li><li><p><strong>CamelCase</strong>（在几种字符串格式之间来回切换）</p></li><li><p><strong>Jrebel for Intellij</strong>（热部署插件）</p></li><li><p><strong>SequenceDiagram</strong>（生成简单序列图）</p></li><li><p>HighlghtBracketPair （代码开头和结尾高亮）</p></li><li><p>Generate020（自动填充参数的值）</p></li><li><p>File Expander （不仅可以反编译，而且可以打开tar.gz，zip等压缩文件）</p></li><li><p>VisualGC（可以查看JVM堆栈可视化信工具）</p></li><li><p>Grep Console（日志工具）</p></li><li><p>yaml （yaml格式提示高亮）</p></li><li><p>Markdown</p></li><li><p>Gradle</p></li><li><p>sonarLint 代码问题检查插件</p></li><li><p>Bito （AI插件）</p></li>",43),N={href:"https://juejin.cn/post/7226585879480188984",target:"_blank",rel:"noopener noreferrer"},R=a("li",null,[a("p",null,"。。。")],-1),P=s('<h2 id="_03、调优设置" tabindex="-1"><a class="header-anchor" href="#_03、调优设置" aria-hidden="true">#</a> 03、调优设置</h2><ol><li>显示工具条</li></ol><p><img src="'+r+'" alt=""></p><ol start="2"><li>自动导包</li></ol><p>File | Settings | Editor | General | Auto Import</p><p><img src="'+u+'" alt=""></p><ol start="3"><li>设置鼠标悬浮提示</li></ol><p><img src="'+d+'" alt=""></p><ol start="4"><li>代码忽略大小写</li></ol><p><img src="'+m+'" alt=""></p><ol start="5"><li>设置控制台大小</li></ol><p><img src="'+g+'" alt=""></p><ol start="6"><li>显示方法分割线，行号，特殊字符</li></ol><p>File | Settings | Editor | General | Appearance</p><p><img src="'+k+'" alt="image-20230427064007105"></p><ol start="7"><li>字体设置</li></ol><p><img src="'+v+'" alt=""></p><ol start="8"><li>启动软件可选择打开的项目</li></ol><p><img src="'+b+'" alt=""></p><ol start="9"><li>去除idea自动更新</li></ol><p>File | Settings | Appearance &amp; Behavior | System Settings | Updates</p><p><img src="'+_+'" alt=""></p><ol start="10"><li>取消在同一行内显示tab</li></ol><p>File | Settings | Editor | General | Editor Tabs</p><p><img src="'+h+'" alt="image-20230427064133493"></p><ol start="11"><li>修改文件编码</li></ol><p>File | Settings | Editor | File Encodings</p><p><img src="'+y+'" alt="image-20230427064235885"></p><ol start="12"><li>双斜杠注释改成紧跟代码头</li></ol><p>File | Settings | Editor | Code Style | Java</p><p><img src="'+f+'" alt="image-20230427064446240"></p><ol start="13"><li>idea代码大括号换行</li></ol><p><img src="'+A+'" alt="image-20230427064412268"></p><ol start="14"><li>maven配置</li></ol><p><img src="'+E+'" alt="image-20230427064604186"></p><p><img src="'+S+'" alt="image-20230427064822897"></p><blockquote><p>-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true</p></blockquote><ol start="15"><li>取消索引分享</li></ol><p>File | Settings | Tools | Shared Indexes</p><p>这个设置是取消新版idea提示预加载jdk和maven等的索引，小项目没有什么意义的可以取消。但是大项目建议是要的。</p><p><img src="'+j+'" alt="image-20230427064949249"></p><ol start="16"><li><p>Editor-General</p><p>设置鼠标滚轮滚动修改字体大小</p></li></ol><p><img src="'+x+'" alt="image-20230427065434952"></p><ol start="17"><li>IDEA注释多行变单行</li></ol><p>Editor-Code Style-Java–Other-Javadoc</p><p><img src="'+w+'" alt="image-20230505233238195"></p><ol start="18"><li>idea 注释格式化之后回到同一行</li></ol><p>如上图一直勾选Editor-Code Style-Java–Other-Javadoc-将Preserve line feeds 选中</p><ol start="19"><li>个人的一些其他设置（纯属个人爱）</li></ol><p>包括：格式化后注释与注入类一行，以及参数居中之类的！</p><p><img src="'+T+`" alt="image-20230505235727822"></p><h2 id="_04、常用代码模版" tabindex="-1"><a class="header-anchor" href="#_04、常用代码模版" aria-hidden="true">#</a> 04、常用代码模版</h2><ul><li>创建类时添加注释信息</li></ul><p><strong>setting-&gt;Editor-&gt;File and Code Templates-&gt;Includes-&gt;File Header</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> ragnarok
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@create</span> $<span class="token punctuation">{</span>YEAR<span class="token punctuation">}</span>-$<span class="token punctuation">{</span>MONTH<span class="token punctuation">}</span>-$<span class="token punctuation">{</span>DAY<span class="token punctuation">}</span> $<span class="token punctuation">{</span>TIME<span class="token punctuation">}</span>
 * <span class="token keyword">@github</span> https://github.com/Ragnarokoo
 * <span class="token keyword">@version</span> 1.0
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>tsleep/tmsleep睡眠时间模版</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>  <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+C+`" alt="image-20230427070129865"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>  <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+I+`" alt="image-20230427070423906"></p><ul><li>springboot启动类的快捷方式（mainboot）</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+M+'" alt="image-20230427070703095"></p><ul><li>注释（IDEA添加代码模版）</li></ul><p>1.创建时同时添加注释</p><p><img src="'+$+`" alt="image-20230513231328951"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>#<span class="token keyword">if</span> <span class="token punctuation">(</span>$<span class="token punctuation">{</span><span class="token constant">PACKAGE_NAME</span><span class="token punctuation">}</span> <span class="token operator">&amp;&amp;</span> $<span class="token punctuation">{</span><span class="token constant">PACKAGE_NAME</span><span class="token punctuation">}</span> <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token keyword">package</span> $<span class="token punctuation">{</span><span class="token constant">PACKAGE_NAME</span><span class="token punctuation">}</span><span class="token punctuation">;</span>#end
<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> ragnarok
 * <span class="token keyword">@description</span>
 * <span class="token keyword">@create</span> $<span class="token punctuation">{</span>YEAR<span class="token punctuation">}</span>-$<span class="token punctuation">{</span>MONTH<span class="token punctuation">}</span>-$<span class="token punctuation">{</span>DAY<span class="token punctuation">}</span> $<span class="token punctuation">{</span>TIME<span class="token punctuation">}</span>
 * <span class="token keyword">@github</span> https://github.com/Ragnarokoo
 * <span class="token keyword">@version</span> 1.0
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> $<span class="token punctuation">{</span><span class="token constant">NAME</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>方法注释</li></ol><p><img src="`+q+'" alt="image-20230514012525469"></p><p><img src="'+D+'" alt="image-20230514013007613"></p><p><img src="'+G+`" alt="image-20230514013034091"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">*</span><span class="token operator">*</span>
 <span class="token operator">*</span> <span class="token annotation punctuation">@description</span> $description$
 <span class="token operator">*</span> <span class="token annotation punctuation">@author</span> ragnarok
 <span class="token operator">*</span> <span class="token annotation punctuation">@date</span> $date$ $time$
 <span class="token operator">*</span> <span class="token annotation punctuation">@version</span> <span class="token number">1.0</span><span class="token number">.0</span> 
$param$ 
 <span class="token operator">*</span> <span class="token annotation punctuation">@return</span> $<span class="token keyword">return</span>$ 
 <span class="token operator">*</span><span class="token operator">/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>param</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>groovyScript<span class="token punctuation">(</span><span class="token string">&quot;def result=&#39;&#39;; def params=<span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">\${_1}</span><span class="token entity" title="\\&quot;">\\&quot;</span>.replaceAll(&#39;[<span class="token entity" title="\\\\">\\\\</span><span class="token entity" title="\\\\">\\\\</span>[|<span class="token entity" title="\\\\">\\\\</span><span class="token entity" title="\\\\">\\\\</span>]|<span class="token entity" title="\\\\">\\\\</span><span class="token entity" title="\\\\">\\\\</span>s]&#39;, &#39;&#39;).split(&#39;,&#39;).toList(); result=&#39; * @param &#39; + params[0]; for(i = 1; i &lt; params.size(); i++) {result+=&#39;<span class="token entity" title="\\\\">\\\\</span>n     * @param &#39; + params[i] + ((i+1 &lt; params.size() - 1) ? &#39;<span class="token entity" title="\\\\">\\\\</span>n&#39; : &#39;&#39;)};return result&quot;</span>, methodParameters<span class="token punctuation">(</span><span class="token punctuation">))</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>return</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>methodReturnType()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>Skip if defind 可以跳过定义！–这里防止格式乱了!</p></blockquote><p><img src="`+F+'" alt="image-20230514015147623"></p><p>最后点击apply，ok即可！</p><p><img src="'+V+'" alt="image-20230514015203129"></p><p>根据自己情况决定使用哪种！</p>',81);function U(O,z){const n=o("ExternalLinkIcon");return t(),p("div",null,[B,a("ul",null,[L,a("li",null,[a("p",null,[a("a",N,[i("AI 代码工具大揭秘：提高编程效率的必备神器！ - 掘金 (juejin.cn)"),l(n)])])]),R]),P])}const X=e(J,[["render",U],["__file","玩转IDEA以及调优设置.html.vue"]]);export{X as default};
