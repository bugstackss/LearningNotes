import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,a as p}from"./app.9b10ba0a.js";const t="/assets/image-20230510025602863.a887efa3.png",e="/assets/image-20230510025644495.d3c4bb9a.png",o="/assets/image-20230510030307062.d08136c0.png",c={},l=p('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>没有总结，骗你的，防止不学习，完结撒花</p><p>没有总结，骗你的，防止不学习，完结撒花</p><p>没有总结，骗你的，防止不学习，完结撒花</p><p>没有总结，骗你的，防止不学习，完结撒花</p><p>没有总结，骗你的，防止不学习，完结撒花</p><hr><p>写进简历的靓点，腾讯面试题，如何做一个迷你版的微信抢红包？</p><ul><li>2023年，请认真搞钱</li></ul><p>告诉老默，暂不吃鱼；跟着阳哥，你想学习！</p><p><img src="'+t+'" alt="image-20230510025602863"></p><h2 id="案例实战-微信抢红包" tabindex="-1"><a class="header-anchor" href="#案例实战-微信抢红包" aria-hidden="true">#</a> 案例实战：微信抢红包</h2><p>1.业务描述</p><img src="'+e+`" alt="image-20230510025644495" style="zoom:50%;"><p>2.需求分析</p><blockquote><p>1 各种节假日，发红包+抢红包，不说了，100%高并发业务要求，不能用mysql来做</p><p>2 一个总的大红包，会有可能拆分成多个小红包，总金额= 分金额1+分金额2+分金额3......分金额N</p><p>3 每个人只能抢一次，你需要有记录，比如100块钱，被拆分成10个红包发出去，</p><p>总计有10个红包，抢一个少一个，总数显示(10/6)直到完，需要记录那些人抢到了红包，重复抢作弊不可以。</p><p>4 有可能还需要你计时，完整抢完，从发出到全部over，耗时多少？</p><p>5 红包过期，或者群主人品差，没人抢红包，原封不动退回。</p><p>6 红包过期，剩余金额可能需要回退到发红包主账户下</p><p><strong>由于是高并发不能用mysql来做，只能用redis，那需要要redis的什么数据类型？</strong></p></blockquote><p>3.架构设计</p><blockquote><p>难点：</p><p><code>1 拆分算法如何</code></p><pre><code>红包其实就是金额，拆分算法如何 ？给你100块，分成10个小红包(金额有可能小概率相同，有2个红包都是2.58)，

如何拆分随机金额设定每个红包里面安装多少钱?
</code></pre><p><code> 2 次数限制</code></p><pre><code>每个人只能抢一次，次数限制
</code></pre><p><code> 3 原子性</code></p><pre><code>每抢走一个红包就减少一个(类似减库存)，那这个就需要保证库存的-----------------------原子性，不加锁实现
</code></pre><p>你认为存在redis什么数据类型里面？set ？hash？ list？</p></blockquote><p><strong>关键点</strong></p><ul><li>发红包</li><li>抢红包 <ul><li>抢，不加锁且原子性，还能支持高并发</li><li>每人一次且有抢红包记录</li></ul></li><li>记红包 <ul><li>每个人抢了多少</li></ul></li><li>拆红包 <ul><li>拆红包算法 <ol><li>所有人抢到的金额之和等于红包金额，不能超过，也不能少于</li><li>每个人至少抢到一分钱。</li><li>要保证所有人抢到金额的几率相等。</li></ol></li></ul></li></ul><p><strong>结论</strong></p><p>抢红包业务通用算法</p><blockquote><p><strong>二倍均值法</strong></p><p>剩余红包金额为M，剩余人数为N，那么有如下公式：</p><p>每次抢到的金额 = 随机区间 （0， (剩余红包金额M ÷ 剩余人数N ) X 2）</p><p>这个公式，保证了每次随机金额的平均值是相等的，不会因为抢红包的先后顺序而造成不公平。</p><p>举个栗子：</p><p>假设有10个人，红包总额100元。</p><p>第1次：</p><p>100÷10 X2 = 20, 所以第一个人的随机范围是（0，20 )，平均可以抢到10元。假设第一个人随机到10元，那么剩余金额是100-10 = 90 元。</p><p>第2次：</p><p>90÷9 X2 = 20, 所以第二个人的随机范围同样是（0，20 )，平均可以抢到10元。假设第二个人随机到10元，那么剩余金额是90-10 = 80 元。</p><p>第3次：</p><p>80÷8 X2 = 20, 所以第三个人的随机范围同样是（0，20 )，平均可以抢到10元。 以此类推，每一次随机范围的均值是相等的。</p></blockquote><hr><p>4.编码实现</p><ul><li>省略其他不重要的，只写Controller表示即可！</li></ul><p>coding</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzyy<span class="token punctuation">.</span>study<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">IdUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>common<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span></span><span class="token class-name">Ints</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@auther</span> zzyy
 * <span class="token keyword">@create</span> 2020-11-19 17:29
 */</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedPackageController</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">RED_PACKAGE_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;redpackage:&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">RED_PACKAGE_CONSUME_KEY</span> <span class="token operator">=</span> <span class="token string">&quot;redpackage:consume:&quot;</span><span class="token punctuation">;</span>


    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 拆分+发送红包
     * http://localhost:5555/send?totalMoney=100&amp;redPackageNumber=5
     * <span class="token keyword">@param</span> <span class="token parameter">totalMoney</span>
     * <span class="token keyword">@param</span> <span class="token parameter">redPackageNumber</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/send&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">sendRedPackage</span><span class="token punctuation">(</span><span class="token keyword">int</span> totalMoney<span class="token punctuation">,</span><span class="token keyword">int</span> redPackageNumber<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//1 拆红包，总金额拆分成多少个红包，每个小红包里面包多少钱</span>
        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> splitRedPackages <span class="token operator">=</span> <span class="token function">splitRedPackage</span><span class="token punctuation">(</span>totalMoney<span class="token punctuation">,</span> redPackageNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2 红包的全局ID</span>
        <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token constant">RED_PACKAGE_KEY</span><span class="token operator">+</span><span class="token class-name">IdUtil</span><span class="token punctuation">.</span><span class="token function">simpleUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//3 采用list存储红包并设置过期时间</span>
        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPushAll</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>splitRedPackages<span class="token punctuation">)</span><span class="token punctuation">;</span>
        redisTemplate<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">DAYS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> key<span class="token operator">+</span><span class="token string">&quot;\\t&quot;</span><span class="token operator">+</span><span class="token string">&quot;\\t&quot;</span><span class="token operator">+</span> <span class="token class-name">Ints</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>splitRedPackages<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">valueOf</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * http://localhost:5555/rob?redPackageKey=上一步的红包UUID&amp;userId=1
     * <span class="token keyword">@param</span> <span class="token parameter">redPackageKey</span>
     * <span class="token keyword">@param</span> <span class="token parameter">userId</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/rob&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">rodRedPackage</span><span class="token punctuation">(</span><span class="token class-name">String</span> redPackageKey<span class="token punctuation">,</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//1 验证某个用户是否抢过红包</span>
        <span class="token class-name">Object</span> redPackage <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">RED_PACKAGE_CONSUME_KEY</span> <span class="token operator">+</span> redPackageKey<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2 没有抢过就开抢，否则返回-2表示抢过</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>redPackage <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 2.1 从list里面出队一个红包，抢到了一个</span>
            <span class="token class-name">Object</span> partRedPackage <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPop</span><span class="token punctuation">(</span><span class="token constant">RED_PACKAGE_KEY</span> <span class="token operator">+</span> redPackageKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>partRedPackage <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//2.2 抢到手后，记录进去hash表示谁抢到了多少钱的某一个红包</span>
                redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">RED_PACKAGE_CONSUME_KEY</span> <span class="token operator">+</span> redPackageKey<span class="token punctuation">,</span>userId<span class="token punctuation">,</span>partRedPackage<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;用户: &quot;</span><span class="token operator">+</span>userId<span class="token operator">+</span><span class="token string">&quot;\\t 抢到多少钱红包: &quot;</span><span class="token operator">+</span>partRedPackage<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//TODO 后续异步进mysql或者RabbitMQ进一步处理</span>
                <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>partRedPackage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//抢完</span>
            <span class="token keyword">return</span> <span class="token string">&quot;errorCode:-1,红包抢完了&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//3 某个用户抢过了，不可以作弊重新抢</span>
        <span class="token keyword">return</span> <span class="token string">&quot;errorCode:-2,   message: &quot;</span><span class="token operator">+</span><span class="token string">&quot;\\t&quot;</span><span class="token operator">+</span>userId<span class="token operator">+</span><span class="token string">&quot; 用户你已经抢过红包了&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 1 拆完红包总金额+每个小红包金额别太离谱
     * <span class="token keyword">@param</span> <span class="token parameter">totalMoney</span>
     * <span class="token keyword">@param</span> <span class="token parameter">redPackageNumber</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">splitRedPackage</span><span class="token punctuation">(</span><span class="token keyword">int</span> totalMoney<span class="token punctuation">,</span> <span class="token keyword">int</span> redPackageNumber<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> useMoney <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> redPackageNumbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span>redPackageNumber<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">Random</span> random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> redPackageNumber<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> redPackageNumber <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                redPackageNumbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> totalMoney <span class="token operator">-</span> useMoney<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token keyword">int</span> avgMoney <span class="token operator">=</span> <span class="token punctuation">(</span>totalMoney <span class="token operator">-</span> useMoney<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">/</span> <span class="token punctuation">(</span>redPackageNumber <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                redPackageNumbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>avgMoney <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            useMoney <span class="token operator">=</span> useMoney <span class="token operator">+</span> redPackageNumbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> redPackageNumbers<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.多学一手</p><p>上述哪里有许多红包记录了，如何批量删除</p><p><img src="`+o+'" alt="image-20230510030307062"></p>',31),i=[l];function u(k,r){return s(),a("div",null,i)}const v=n(c,[["render",u],["__file","12.终章の总结.html.vue"]]);export{v as default};
