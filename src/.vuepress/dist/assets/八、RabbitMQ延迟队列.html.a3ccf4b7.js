const t=JSON.parse('{"key":"v-74a9be6f","path":"/notes/mq/rabbitmq/%E5%85%AB%E3%80%81RabbitMQ%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97.html","title":"八、RabbitMQ延迟队列","lang":"zh-CN","frontmatter":{"title":"八、RabbitMQ延迟队列","category":["rabbitmq"],"tag":["rabbitmq","消息中间件","MQ"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"01、延迟队列介绍 延迟队列概念： 延时队列,队列内部是有序的，最重要的特性就体现在它的延时属性上，延时队列中的元素是希望 在指定时间到了以后或之前取出和处理，简单来说，延时队列就是用来存放需要在指定时间被处理的 元素的队列。 延迟队列使用场景： 1. 订单在十分钟之内未支付则自动取消 2. 新创建的店铺，如果在十天内都没有上传过商品，则自动发送消息提...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/mq/rabbitmq/%E5%85%AB%E3%80%81RabbitMQ%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"八、RabbitMQ延迟队列"}],["meta",{"property":"og:description","content":"01、延迟队列介绍 延迟队列概念： 延时队列,队列内部是有序的，最重要的特性就体现在它的延时属性上，延时队列中的元素是希望 在指定时间到了以后或之前取出和处理，简单来说，延时队列就是用来存放需要在指定时间被处理的 元素的队列。 延迟队列使用场景： 1. 订单在十分钟之内未支付则自动取消 2. 新创建的店铺，如果在十天内都没有上传过商品，则自动发送消息提..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"八、RabbitMQ延迟队列"}],["meta",{"property":"article:tag","content":"rabbitmq"}],["meta",{"property":"article:tag","content":"消息中间件"}],["meta",{"property":"article:tag","content":"MQ"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"01、延迟队列介绍","slug":"_01、延迟队列介绍","link":"#_01、延迟队列介绍","children":[]},{"level":2,"title":"02、TTL的两种设置","slug":"_02、ttl的两种设置","link":"#_02、ttl的两种设置","children":[]},{"level":2,"title":"03、整合SpringBoot","slug":"_03、整合springboot","link":"#_03、整合springboot","children":[]},{"level":2,"title":"04、队列TTL","slug":"_04、队列ttl","link":"#_04、队列ttl","children":[{"level":3,"title":"代码架构图","slug":"代码架构图","link":"#代码架构图","children":[]},{"level":3,"title":"配置类代码","slug":"配置类代码","link":"#配置类代码","children":[]},{"level":3,"title":"生产者","slug":"生产者","link":"#生产者","children":[]},{"level":3,"title":"消费者","slug":"消费者","link":"#消费者","children":[]}]},{"level":2,"title":"05、延时队列TTL优化","slug":"_05、延时队列ttl优化","link":"#_05、延时队列ttl优化","children":[{"level":3,"title":"配置类代码","slug":"配置类代码-1","link":"#配置类代码-1","children":[]},{"level":3,"title":"生产者","slug":"生产者-1","link":"#生产者-1","children":[]}]},{"level":2,"title":"06、Rabbitmq插件实现延迟队列","slug":"_06、rabbitmq插件实现延迟队列","link":"#_06、rabbitmq插件实现延迟队列","children":[]},{"level":2,"title":"07、插件实战","slug":"_07、插件实战","link":"#_07、插件实战","children":[{"level":3,"title":"配置类代码","slug":"配置类代码-2","link":"#配置类代码-2","children":[]}]},{"level":2,"title":"08、总结","slug":"_08、总结","link":"#_08、总结","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":13.72,"words":4117},"filePathRelative":"notes/mq/rabbitmq/八、RabbitMQ延迟队列.md","localizedDate":"2023年5月31日"}');export{t as data};
