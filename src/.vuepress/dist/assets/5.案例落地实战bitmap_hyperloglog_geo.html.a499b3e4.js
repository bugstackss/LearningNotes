import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,d as n,e as s,b as t,a,r as i}from"./app.9b10ba0a.js";const l="/assets/image-20230503001538425.4eaa5dd3.png",u="/assets/2023-05-03-23-37-28-image.eb78eaa9.png",k="/assets/image-20230503001807801.51c69f0f.png",r="/assets/image-20230503180522738.1d66ffa6.png",d="/assets/2023-05-03-23-57-16-image.ebbc3bad.png",m="/assets/image-20230503180759537.a9ed10f4.png",v="/assets/image-20230503180809360.2f0c8b66.png",g="/assets/image-20230503180817346.6377d5b9.png",b="/assets/image-20230503181510469.885d0ac8.png",h="/assets/image-20230503181519394.3024d5ad.png",y="/assets/image-20230503181923608.ffa0e99d.png",w="/assets/image-20230503182005982.a12a5af3.png",_="/assets/image-20230503182018678.d12750b1.png",f="/assets/image-20230503182025509.7298eb4d.png",q="/assets/image-20230503182402242.afd56d1b.png",x="/assets/2023-05-04-00-46-50-image.0bc149f9.png",R="/assets/2023-05-04-00-47-00-image.e209e0bd.png",S="/assets/image-20230503182708969.0f15c92a.png",G="/assets/image-20230503182726244.e33194a1.png",T="/assets/image-20230503182951972.a3b22891.png",E="/assets/image-20230503183007648.1f07b3d5.png",A="/assets/image-20230503182923325.5f12469b.png",M="/assets/image-20230503183324151.bed84d1e.png",C="/assets/image-20230503183339176.0594cb19.png",I="/assets/2023-05-04-00-50-41-image.b0cc2ca8.png",O="/assets/image-20230503183505599.c64ab8a1.png",j="/assets/image-20230503183514271.53ad64e9.png",L="/assets/image-20230503204348631.d463545c.png",D="/assets/image-20230503204422625.8b50a8e7.png",B="/assets/image-20230503205519031.f3d470b5.png",U="/assets/2023-05-04-01-09-15-image.145ba268.png",P="/assets/image-20230503210438134.88c88634.png",H="/assets/image-20230503210827930.0256eedb.png",V="/assets/image-20230503210907820.f1605a4f.png",z="/assets/image-20230503211047978.3b404e86.png",N="/assets/image-20230503211055126.412ba22f.png",Y="/assets/image-20230503211251262.2038b1ae.png",F="/assets/image-20230503211309437.014cffbf.png",W="/assets/image-20230503211323979.8ca6885c.png",X="/assets/image-20230503211359853.867f5cd3.png",K="/assets/image-20230503211505484.903b7785.png",Q="/assets/image-20230503211537777.a53cde99.png",Z="/assets/image-20230503211608673.9cf370d4.png",J={},$=a('<h2 id="_01、先看看大厂真实需求-面试题反馈" tabindex="-1"><a class="header-anchor" href="#_01、先看看大厂真实需求-面试题反馈" aria-hidden="true">#</a> 01、先看看大厂真实需求+面试题反馈</h2><p><strong>面试题1</strong></p><ul><li>抖音电商直播，主播介绍的商品有评论，1个商品对应1系列的评论，排序+展现+取前10条记录</li><li>用户在手机APP上的签到打卡信息：1天对应1系列用户的签到记录，新浪微博、钉钉打卡签到，来没来如何设计？</li><li>应用网站上的网页访问信息：1个网页对应1系列的访问点击，淘宝网首页，每天有多少人浏览首页？</li><li>你们公司系统上线后，说一下UV、PV、DAU分别是多少？</li><li>。。。。。。</li></ul><p><strong>面试题2</strong></p><p>面试问</p><blockquote><p>记录对集合中的数据进行统计</p></blockquote><ul><li>在移动应用中，需要统计每天的新增用户数和第2天的留存用户数；</li><li>在电商网站的商品评论中，需要统计评论列表中的最新评论；</li><li>在签到打卡中，需要统计一个月内连续打卡的用户数；</li><li>在网页访问记录中，需要统计独立访客（Unique Visitor，UV）量。</li><li>。。。。。。</li></ul><p>痛点：</p><p>类似今日头条、抖音、淘宝这样的额用户访问级别都是亿级的，请问如何处理？</p><p><strong>需求痛点</strong></p><ul><li>亿级数据的手机+清洗+统计+展现</li><li>一句话：<code>存的进+取的快+多维度</code></li><li>真正有价值的是统计。。。</li></ul><h2 id="_02、统计的类型有哪些" tabindex="-1"><a class="header-anchor" href="#_02、统计的类型有哪些" aria-hidden="true">#</a> 02、统计的类型有哪些？</h2><blockquote><p>亿级系统中常见的四种统计</p></blockquote><p><strong>聚合统计</strong></p><ul><li>统计多个集合元素的聚合结果，就是前面的<code>交差并等集合统计</code></li><li>复习命令</li></ul><p><img src="'+l+'" alt="image-20230503001538425"></p><ul><li>交并差集和聚合函数的应用</li></ul><p><strong>排序统计</strong></p><ul><li><p>抖音短视频最新评论留言的场景，请你设计一个展现列表。</p><p>考察你的数据结构和设计思路</p></li><li><p>设计案例和回答思路</p></li></ul><p><strong>以抖音vcr最新的留言评价为案例，所有评论需要两个功能，按照时间排序(正序、反序)+分页显示</strong></p><p><strong>能够排序+分页显示的redis数据结构是什么合适？</strong></p><img src="'+u+'" style="zoom:50%;"><p><code>answer</code></p><p>zset</p><p><img src="'+k+'" alt="image-20230503001807801"></p><p>在面对需要展示最新列表、排行榜等场景时，如果数据更新频繁或者需要分页显示，建议使用<code>Zset</code></p><p><strong>二值统计</strong></p><ul><li><p>在集合元素的取值只有0和1两种。</p><p>在钉钉上班签到打卡的场景中，我们只用记录有签到(1)或没有签到(0)</p></li><li><p>使用bitmap</p></li></ul><p><strong>基数统计</strong></p><ul><li>指统计一个集合中不重复元素个数</li><li>使用hyperloglog</li></ul><h2 id="_03、hyperloglog" tabindex="-1"><a class="header-anchor" href="#_03、hyperloglog" aria-hidden="true">#</a> 03、hyperloglog</h2><h3 id="说名词-谈谈行资" tabindex="-1"><a class="header-anchor" href="#说名词-谈谈行资" aria-hidden="true">#</a> 说名词，谈谈行资</h3><blockquote><p>什么是UV</p></blockquote><p>Unique Visitor，独立访客，一般理解为客户端IP</p><p><strong>需要考虑去重</strong></p><blockquote><p>什么是PV</p></blockquote><p>Page View，页面浏览量</p><p>不用去重</p><blockquote><p>什么是DAU</p></blockquote><p><strong>Daily Active User</strong></p><ul><li>日活跃用户量：登录或者使用了某个产品的用户数（去重复登录的用户）</li><li>常用于反映网站、互联网应用或者网络游戏的运营状态</li></ul><blockquote><p>什么是MAU</p></blockquote><p>Monthly Active User</p><ul><li>月活跃用户量</li></ul><p>假如上述术语，你不知道o(╥﹏╥)o</p><h3 id="看需求" tabindex="-1"><a class="header-anchor" href="#看需求" aria-hidden="true">#</a> 看需求</h3><p>很多计数类场景，比如 每日注册 IP 数、每日访问 IP 数、页面实时访问数 PV、访问用户数 UV等。</p><p>因为主要的目标高效、巨量地进行计数，所以对存储的数据的内容并不太关心。</p><p>也就是说它只能用于统计巨量数量，不太涉及具体的统计对象的内容和精准性。</p><p>统计单日一个页面的访问量(PV)，单次访问就算一次。</p><p>统计单日一个页面的用户访问量(UV)，即按照用户为维度计算，单个用户一天内多次访问也只算一次。</p><p>多个key的合并统计，某个门户网站的所有模块的PV聚合统计就是整个网站的总PV。</p><h3 id="是什么-基础篇讲过-快速复习一下" tabindex="-1"><a class="header-anchor" href="#是什么-基础篇讲过-快速复习一下" aria-hidden="true">#</a> 是什么（基础篇讲过，快速复习一下）</h3><p><strong>基数</strong></p><ul><li>是一种数据集，去重后的真实个数</li><li>案例Case</li></ul><img src="'+r+'" alt="image-20230503180522738" style="zoom:50%;"><p><strong>去重复统计功能的基数估计算法-就是Hyperloglog</strong></p><p><img src="'+d+'" alt=""></p><p>基数统计：用于同一一个集合中不重复的元素个数，就是对集合去重复后剩余元素的计算</p><p>一句话：去重脱水后的真实数据</p><p>基本命令</p><p><img src="'+m+'" alt="image-20230503180759537"></p><p><img src="'+v+'" alt="image-20230503180809360"></p><p><img src="'+g+'" alt="image-20230503180817346"></p><h3 id="hyperloglog如何做的-如何演化而来的" tabindex="-1"><a class="header-anchor" href="#hyperloglog如何做的-如何演化而来的" aria-hidden="true">#</a> HyperLoglog如何做的？如何演化而来的？</h3><p>基数统计就是HyperLoglog</p><p>去重复统计你会先想到哪些方式？</p><ul><li><p>HashSet</p></li><li><p>bitmap</p></li></ul><p>如果数据显较大亿级统计,使用bitmaps同样会有这个问题。</p><p>bitmap是通过用位bit数组来表示各元素是否出现，每个元素对应一位，所需的总内存为N个bit。</p><p>基数计数则将每一个元素对应到bit数组中的其中一位，比如bit数组010010101(按照从零开始下标，有的就是1、4、6、8)。</p><p>新进入的元素只需要将已经有的bit数组和新加入的元素进行按位或计算就行。这个方式能大大减少内存占用且位操作迅速。</p><p>But，假设一个样本案例就是一亿个基数位值数据，一个样本就是一亿</p><p>如果要统计1亿个数据的基数位值,<code>大约需要内存100000000/8/1024/1024约等于12M</code>,内存减少占用的效果显著。</p><p>这样得到统计一个对象样本的基数值需要12M。</p><p>如果统计10000个对象样本(1w个亿级),就需要117.1875G将近120G，可见使用bitmaps还是不适用大数据量下(亿级)的基数计数场景，</p><p><code>但是bitmaps方法是精确计算的。</code></p><blockquote><p>结论</p></blockquote><p>样本元素越多内存消耗急剧增大，难以管控+各种慢，对于亿级统计不太合适，大数据害死人，o(╥﹏╥)o</p><p>量变引起质变</p><blockquote><p>办法</p></blockquote><p><strong>概率算法</strong></p><p><code>通过牺牲准确率来换取空间</code>，对于不要求<code>绝对准确率</code>的场景下可以使用，因为<code>概率算法不直接存储数据本身</code>，</p><p>通过一定的概率统计方法预估基数值，同时保证误差在一定范围内，由于又不储存数据故此可以大大节约内存。</p><p><code>HyperLogLog就是一种概率算法的实现。</code></p><blockquote><p><code>原理说明</code></p></blockquote>',86),nn=n("li",null,[n("code",null,"只是进行不重复的基数统计，不是集合也不保存数据，只是记录数量而不是具体内容。")],-1),sn=n("li",null,[s("有误差 "),n("ul",null,[n("li",null,"HyperLoglog提供不精确的去重计数方案"),n("li",null,[n("code",null,"牺牲准确率来换取空间，该误差仅仅只是0.81%左右")])])],-1),an={href:"http://antirez.com/news/75",target:"_blank",rel:"noopener noreferrer"},pn=n("li",null,[n("code",null,"Redis之父安特雷兹回答：")],-1),tn=a('<p><img src="'+b+'" alt="image-20230503181510469"></p><p><img src="'+h+'" alt="image-20230503181519394"></p><h3 id="淘宝网首页亿级uv的redis统计方案" tabindex="-1"><a class="header-anchor" href="#淘宝网首页亿级uv的redis统计方案" aria-hidden="true">#</a> 淘宝网首页亿级UV的Redis统计方案</h3><blockquote><p>需求</p></blockquote><ul><li>UV统计需要去重，一个用户一天内的多次访问只能算作一次</li><li>淘宝，天猫首页的UV，平均每天是1~1.5亿左右</li><li>每天存1.5亿的IP，访问者来了后先去查看是否存在，不存在加入</li></ul><blockquote><p>方案讨论</p></blockquote><ul><li>用mysql：傻X，o(╥﹏╥)o，不解释</li><li>用redis的hash数据存储</li></ul><p><img src="'+y+'" alt="image-20230503181923608"></p><p><strong>说明</strong></p><p>redis——hash = &lt;keyDay,&lt;ip,1&gt;&gt;</p>',10),en={href:"http://xn--xxx-ic8em72d.xxx.xxx.xxx",target:"_blank",rel:"noopener noreferrer"},on=a('<p>某一天的1.5亿 * 15个字节= 2G，一个月60G，redis死定了。o(╥﹏╥)o</p><ul><li>hyperloglog</li></ul><p><img src="'+w+'" alt="image-20230503182005982"></p><p><strong>为什么是只需要花费12Kb？</strong></p><p><img src="'+_+'" alt="image-20230503182018678"></p><p><img src="'+f+`" alt="image-20230503182025509"></p><blockquote><p>HyperLoglogService</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostConstruct</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@auther</span> zzyy
 * <span class="token keyword">@create</span> 2021-05-02 18:16
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HyperLogLogService</span>
<span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 模拟后台有用户点击首页，每个用户来自不同ip地址
     */</span>
    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;------模拟后台有用户点击首页，每个用户来自不同ip地址&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> ip <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span><span class="token number">200</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ip <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">Long</span> hll <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHyperLogLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;hll&quot;</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;ip={},该ip地址访问首页的次数={}&quot;</span><span class="token punctuation">,</span>ip<span class="token punctuation">,</span>hll<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//暂停几秒钟线程</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;t1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>HyperLoglogController</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Api</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@auther</span> zzyy
 * <span class="token keyword">@create</span> 2021-05-02 18:16
 */</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;淘宝亿级UV的Redis统计方案&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HyperLogLogController</span>
<span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;获得IP去重后的首页访问量&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/uv&quot;</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">uv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//pfcount</span>
        <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHyperLogLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token string">&quot;hll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_04、geo" tabindex="-1"><a class="header-anchor" href="#_04、geo" aria-hidden="true">#</a> 04、GEO</h2><h3 id="redis之geo" tabindex="-1"><a class="header-anchor" href="#redis之geo" aria-hidden="true">#</a> Redis之GEO</h3><blockquote><p>大厂面试题简介</p></blockquote><p><strong>面试题说明：</strong></p><p>移动互联网时代LBS应用越来越多，交友软件中附近的小姐姐、外卖软件中附近的美食店铺、打车软件附近的车辆等等。</p><p>那这种附近各种形形色色的XXX地址位置选择是如何实现的？</p><p>会有什么问题呢？</p><p>1.查询性能问题，如果并发高，数据量大这种查询是要搞垮mysql数据库的</p><p>2.一般mysql查询的是一个平面矩形访问，而叫车服务要以我为中心N公里为半径的圆形覆盖。</p><p>3.精准度的问题，我们知道地球不是平面坐标系，而是一个圆球，这种矩形计算在长距离计算时会有很大误差，mysql不合适</p><blockquote><p>地址只是说明</p></blockquote><p><strong>经纬度</strong></p><p>经度与纬度的合称组成一个坐标系统。又称为地理坐标系统，它是一种利用三度空间的球面来定义地球上的空间的球面坐标系统，能够标示地球上的任何一个位置。</p><p><strong>经线和纬线</strong></p><p>是人们为了在地球上确定位置和方向的，在地球仪和地图上画出来的，地面上并线。</p><p><code>和经线相垂直的线叫做纬线(纬线指示东西方向)。纬线是一条条长度不等的圆圈。最长的纬线就是赤道。 </code></p><p>因为经线指示南北方向，所以经线又叫子午线。 国际上规定，把通过英国格林尼治天文台原址的经线叫做0°所以经线也叫本初子午线。<code>在地球上经线指示南北方向，纬线指示东西方向。</code></p><p>东西半球分界线：东经160° 西经20°</p><p><strong>经度和维度</strong></p><p><code>经度(longitude)：东经为正数，西经为负数。东西经</code></p><p><code>纬度(latitude)：北纬为正数，南纬为负数。南北纬</code></p><p><img src="`+q+'" alt="image-20230503182402242"></p>',32),cn=n("p",null,"如何获得某个地址的经纬度？",-1),ln={href:"http://api.map.baidu.com/lbsapi/getpoint/",target:"_blank",rel:"noopener noreferrer"},un=a('<blockquote><p>命令复习，第二次</p></blockquote><ul><li>GEOADD添加经纬度坐标</li></ul><p><img src="'+x+'" alt=""></p><p><img src="'+R+`" alt=""></p><p>命令如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GEOADD city <span class="token number">116.403963</span> <span class="token number">39.915119</span> <span class="token string">&quot;天安门&quot;</span> <span class="token number">116.403414</span> <span class="token number">39.924091</span> <span class="token string">&quot;故宫&quot;</span> <span class="token number">116.024067</span> <span class="token number">40.362639</span> <span class="token string">&quot;长城&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>中文乱码如何处理</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># redis-cli --raw</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>GEOPOS返回经纬度</li></ul><p><img src="`+S+`" alt="image-20230503182708969"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GEOPOS city 天安门 故宫
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+G+'" alt="image-20230503182726244"></p><ul><li>GEOHASH返回坐标的geohash表示</li></ul><p><img src="'+T+`" alt="image-20230503182951972"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GEOHASH city 天安门 故宫 长城
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+E+'" alt="image-20230503183007648"></p><p>geohash算法生成的base32编码值</p><p>三维变二维变一维</p><p><img src="'+A+'" alt="image-20230503182923325"></p><ul><li>GEODIST两个位置之间的距离</li></ul><p><img src="'+M+`" alt="image-20230503183324151"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GEODIST city 天安门 长城 km
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+C+`" alt="image-20230503183339176"></p><p>后面参数是距离单位：</p><ul><li>m 米</li><li>km 千米</li><li>ft 英尺</li><li>mi 英里</li></ul><hr><ul><li>GEORADIUS</li></ul><p>georadius 以给定的经纬度为中心， 返回键包含的位置元素当中， 与中心的距离不超过给定最大距离的所有位置元素。</p><p>GEORADIUS city 116.418017 39.914402 10 km withdist withcoord count 10 withhash desc</p><p>GEORADIUS city 116.418017 39.914402 10 km withdist withcoord count 10 desc</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>WITHDIST: 在返回位置元素的同时， 将位置元素与中心之间的距离也一并返回。 距离的单位和用户给定的范围单位保持一致。

WITHCOORD: 将位置元素的经度和维度也一并返回。

WITHHASH: 以 52 位有符号整数的形式， 返回位置元素经过原始 geohash 编码的有序集合分值。 这个选项主要用于底层应用或者调试， 实际中的作用并不大

COUNT 限定返回的记录数。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>当前位置(116.418017 39.914402),阳哥在王府井</code></p><p><img src="`+I+'" alt=""></p><p>以半径为中心，查找附近的XXX</p><ul><li>GEORADIUSBYMEMBER</li></ul><p><img src="'+O+'" alt="image-20230503183505599"></p><p><img src="'+j+'" alt="image-20230503183514271"></p><h3 id="美团地图位置附近的酒店推送" tabindex="-1"><a class="header-anchor" href="#美团地图位置附近的酒店推送" aria-hidden="true">#</a> 美团地图位置附近的酒店推送</h3><blockquote><p>需求分析</p></blockquote><ul><li>美团app附近的酒店</li></ul><img src="'+L+'" alt="image-20230503204348631" style="zoom:50%;"><ul><li>摇个妹子，附近的妹子</li></ul><img src="'+D+'" alt="image-20230503204422625" style="zoom:50%;"><ul><li><p>高德地图附近的人或者一公里以内的各种营业厅、加油站、理发店、超市……</p></li><li><p>找个单车</p></li><li><p>……</p></li></ul><blockquote><p>架构设计</p></blockquote><ul><li>Redis的新类型GEO</li></ul><p><img src="'+B+'" alt="image-20230503205519031"></p>',47),kn={href:"http://www.redis.cn/commands/geoadd.html",target:"_blank",rel:"noopener noreferrer"},rn=a(`<blockquote><p>编码实现</p></blockquote><p><strong>关键点</strong></p><p>GEORADIUS：以给定的经纬度为中心，找出某一半径内的元素</p><p><strong>GeoController</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>redis7<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">GeoService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Api</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>geo<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span><span class="token class-name">RedisGeoCommands</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMethod</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@auther</span> zzyy
 * <span class="token keyword">@create</span> 2022-12-25 12:12
 */</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">&quot;美团地图位置附近的酒店推送GEO&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GeoController</span>
<span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">GeoService</span> geoService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;添加坐标geoadd&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/geoadd&quot;</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">geoAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> geoService<span class="token punctuation">.</span><span class="token function">geoAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;获取经纬度坐标geopos&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/geopos&quot;</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Point</span> <span class="token function">position</span><span class="token punctuation">(</span><span class="token class-name">String</span> member<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> geoService<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span>member<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;获取经纬度生成的base32编码值geohash&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/geohash&quot;</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">String</span> member<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> geoService<span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>member<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;获取两个给定位置之间的距离&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/geodist&quot;</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Distance</span> <span class="token function">distance</span><span class="token punctuation">(</span><span class="token class-name">String</span> member1<span class="token punctuation">,</span> <span class="token class-name">String</span> member2<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> geoService<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>member1<span class="token punctuation">,</span>member2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;通过经度纬度查找北京王府井附近的&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/georadius&quot;</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">GeoResults</span> <span class="token function">radiusByxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> geoService<span class="token punctuation">.</span><span class="token function">radiusByxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;通过地方查找附近,本例写死天安门作为地址&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/georadiusByMember&quot;</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">GeoResults</span> <span class="token function">radiusByMember</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> geoService<span class="token punctuation">.</span><span class="token function">radiusByMember</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>GeoService</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>geo<span class="token punctuation">.</span></span><span class="token class-name">Distance</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>geo<span class="token punctuation">.</span></span><span class="token class-name">GeoResults</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>geo<span class="token punctuation">.</span></span><span class="token class-name">Metrics</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>geo<span class="token punctuation">.</span></span><span class="token class-name">Point</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>geo<span class="token punctuation">.</span></span><span class="token class-name">Circle</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span><span class="token class-name">RedisGeoCommands</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@auther</span> zzyy
 * <span class="token keyword">@create</span> 2022-12-25 12:11
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GeoService</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CITY</span> <span class="token operator">=</span><span class="token string">&quot;city&quot;</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">geoAdd</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> map<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;天安门&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">116.403963</span><span class="token punctuation">,</span><span class="token number">39.915119</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;故宫&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">116.403414</span> <span class="token punctuation">,</span><span class="token number">39.924091</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;长城&quot;</span> <span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">116.024067</span><span class="token punctuation">,</span><span class="token number">40.362639</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token constant">CITY</span><span class="token punctuation">,</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Point</span> <span class="token function">position</span><span class="token punctuation">(</span><span class="token class-name">String</span> member<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//获取经纬度坐标</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> list<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token constant">CITY</span><span class="token punctuation">,</span>member<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">String</span> member<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//geohash算法生成的base32编码值</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token constant">CITY</span><span class="token punctuation">,</span>member<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">Distance</span> <span class="token function">distance</span><span class="token punctuation">(</span><span class="token class-name">String</span> member1<span class="token punctuation">,</span> <span class="token class-name">String</span> member2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//获取两个给定位置之间的距离</span>
        <span class="token class-name">Distance</span> distance<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span><span class="token constant">CITY</span><span class="token punctuation">,</span>member1<span class="token punctuation">,</span>member2<span class="token punctuation">,</span> <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>DistanceUnit</span><span class="token punctuation">.</span><span class="token constant">KILOMETERS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> distance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">GeoResults</span> <span class="token function">radiusByxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//通过经度，纬度查找附近的,北京王府井位置116.418017,39.914402</span>
        <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">116.418017</span><span class="token punctuation">,</span> <span class="token number">39.914402</span><span class="token punctuation">,</span> <span class="token class-name">Metrics</span><span class="token punctuation">.</span><span class="token constant">KILOMETERS</span><span class="token punctuation">.</span><span class="token function">getMultiplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//返回50条</span>
        <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span> args <span class="token operator">=</span> <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span><span class="token punctuation">.</span><span class="token function">newGeoRadiusArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includeDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includeCoordinates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sortAscending</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">GeoResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoLocation</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> geoResults<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span><span class="token constant">CITY</span><span class="token punctuation">,</span>circle<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> geoResults<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">GeoResults</span> <span class="token function">radiusByMember</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//通过地方查找附近</span>
        <span class="token class-name">String</span> member<span class="token operator">=</span><span class="token string">&quot;天安门&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//返回50条</span>
        <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span> args <span class="token operator">=</span> <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span><span class="token punctuation">.</span><span class="token function">newGeoRadiusArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includeDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includeCoordinates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sortAscending</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//半径10公里内</span>
        <span class="token class-name">Distance</span> distance<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Distance</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token class-name">Metrics</span><span class="token punctuation">.</span><span class="token constant">KILOMETERS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">GeoResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoLocation</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> geoResults<span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span><span class="token constant">CITY</span><span class="token punctuation">,</span>member<span class="token punctuation">,</span> distance<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> geoResults<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_05、bitmap" tabindex="-1"><a class="header-anchor" href="#_05、bitmap" aria-hidden="true">#</a> 05、bitmap</h2><blockquote><p>大厂真实面试题案例</p></blockquote><ul><li>日活统计</li><li>连续签到打卡</li><li>最近一周的活跃用户</li><li>统计指定用户一年之中的登录天数</li><li>某用户按照一年365天，哪几天登录过？哪几天没有登录？全年中登录的天数总计多少？</li></ul><blockquote><p>是什么？</p></blockquote><p><img src="`+U+'" alt=""></p><p>说明：<code>用String类型作为底层数据结构实现的一种统计二值状态的数据类型</code></p><p>位图本质是数组，它是基于String数据类型的按位的操作。该数组由多个二进制位组成，每个二进制位都对应一个偏移量(我们可以称之为一个索引或者位格)。Bitmap支持的最大位数是2<sup>32位，它可以极大的节约存储空间，使用512M内存就可以存储多大42.9亿的字节信息(2</sup>32 = 4294967296)</p><p>一句话：由0和1状态表现的二进制位的bit数组</p><blockquote><p>能干嘛？</p></blockquote><p>**用于状态统计 **</p><p>Y、N，类似AtomicBoolean</p><p><strong>看需求</strong></p><ul><li>用户是否登录过Y、N，比如京东每日签到送京豆</li><li>电影、广告是否被点击播放过</li><li>钉钉打卡上下班，签到统计</li><li>……</li></ul><blockquote><p>京东签到送京豆</p></blockquote><p><strong>需求说明</strong></p><p><img src="'+P+`" alt="image-20230503210438134"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>签到日历仅展示当月签到数据
签到日历需展示最近连续签到天数
假设当前日期是20210618，且20210616未签到
若20210617已签到且0618未签到，则连续签到天数为1
若20210617已签到且0618已签到，则连续签到天数为2
连续签到天数越多，奖励越大
所有用户均可签到
截至2020年3月31日的12个月，京东年度活跃用户数3.87亿，同比增长24.8%，环比增长超2500万，此外，2020年3月移动端日均活跃用户数同比增长46%假设10%左右的用户参与签到，签到用户也高达3千万。。。。。。o(╥﹏╥)o
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>小厂方法，传统mysql方式</strong></p><ul><li>建表SQL</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> user_sign
<span class="token punctuation">(</span>
  keyid <span class="token keyword">BIGINT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  user_key <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">#京东用户ID</span>
  sign_date <span class="token keyword">DATETIME</span><span class="token punctuation">,</span><span class="token comment">#签到日期(20210618)</span>
  sign_count <span class="token keyword">INT</span> <span class="token comment">#连续签到天数</span>
<span class="token punctuation">)</span>

<span class="token comment">--------------------------</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> user_sign<span class="token punctuation">(</span>user_key<span class="token punctuation">,</span>sign_date<span class="token punctuation">,</span>sign_count<span class="token punctuation">)</span>
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;20210618-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2020-06-18 15:11:12&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">--------------------------</span>

<span class="token keyword">SELECT</span>
    sign_count
<span class="token keyword">FROM</span>
    user_sign
<span class="token keyword">WHERE</span>
    user_key <span class="token operator">=</span> <span class="token string">&#39;20210618-xxxx-xxxx-xxxx-xxxxxxxxxxxx&#39;</span>
    <span class="token operator">AND</span> sign_date <span class="token operator">BETWEEN</span> <span class="token string">&#39;2020-06-17 00:00:00&#39;</span> <span class="token operator">AND</span> <span class="token string">&#39;2020-06-18 23:59:59&#39;</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
    sign_date <span class="token keyword">DESC</span>
    <span class="token keyword">LIMIT</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>困难和解决思路</li></ul><p>方法正确但是难以落地实现，o(╥﹏╥)o。</p><p>签到用户量较小时这么设计能行，但京东这个体量的用户（估算3000W签到用户，一天一条数据，一个月就是9亿数据）</p><p>对于京东这样的体量，如果一条签到记录对应着当日用记录，那会很恐怖......</p><p><code>如何解决这个痛点？ </code></p><p>1 一条签到记录对应一条记录，会占据越来越大的空间。</p><p>2 一个月最多31天，刚好我们的int类型是32位，那这样一个int类型就可以搞定一个月，32位大于31天，当天来了位是1没来就是0。</p><p>3 一条数据直接存储一个月的签到记录，不再是存储一天的签到记录。</p><p><strong>大厂方法，基于Redis的Bitmap实现签到日历</strong></p><ul><li>建表-按位-redis bitmap</li></ul><p>在签到统计时，每个用户一天的签到用1个bit位就能表示，</p><p>一个月（假设是31天）的签到情况用31个bit位就可以，一年的签到也只需要用365个bit位，根本不用太复杂的集合类型</p><blockquote><p>命令复习，第二次</p></blockquote><p><img src="`+H+'" alt="image-20230503210827930"></p><p><strong>setbit</strong></p><ul><li>setbit key offset value</li></ul><p><img src="'+V+'" alt="image-20230503210907820"></p><ul><li>setbit 键 偏移量 只能零或者1</li><li><strong>Bitmap的偏移量是从零开始算的</strong></li></ul><hr><p><strong>getbit</strong></p><ul><li>getbit key offset</li></ul><hr><p><strong>setbit和getbit案例说明</strong></p><ul><li>按照天</li></ul><img src="'+z+'" alt="image-20230503211047978" style="zoom:50%;"><p><img src="'+N+'" alt="image-20230503211055126"></p><ul><li>按照年</li></ul><p>按年去存储一个用户的签到情况，365 天只需要 365 / 8 ≈ 46 Byte，1000W 用户量一年也只需要 44 MB 就足够了。</p><p>假如是亿级的系统，</p><p>每天使用1个<code>1亿位的Bitmap约占12MB的内存</code>（10^8/8/1024/1024），10天的Bitmap的内存开销约为120MB，内存压力不算太高。在实际使用时，最好对Bitmap设置过期时间，让Redis自动删除不再需要的签到记录以节省内存开销。</p><hr><p><strong>bitmap的底层编码说明，get命令操作如何</strong></p><ul><li>实质是二进制的ascii编码对应</li><li>redis里用type命令看看bitmap实质是什么类型？？？</li><li>man ascii</li></ul><p><img src="'+Y+'" alt="image-20230503211251262"></p><ul><li>设置命令</li></ul><p><img src="'+F+'" alt="image-20230503211309437"></p><table><thead><tr><th>两个setbit命令对k1进行设置后，对应的二进制串就是0100 0001</th></tr></thead><tbody><tr><td>二进制串就是0100 0001对应的10进制就是65，所以见下图：</td></tr></tbody></table><img src="'+W+'" alt="image-20230503211323979" style="zoom:50%;"><hr><p><strong>strlen</strong></p><img src="'+X+'" alt="image-20230503211359853" style="zoom:50%;"><p>不是字符串长度而是占据几个字节，超过8位后自己按照8位一组一<code>byte</code>再扩容</p><p><code>统计字节数占用多少</code></p><hr><p><strong>bitcount</strong></p><ul><li>全部键里面包含1的有多少个？</li></ul><img src="'+K+'" alt="image-20230503211505484" style="zoom:50%;"><ul><li>一年365缇娜，全年天天登录占用多少字节</li></ul><img src="'+Q+'" alt="image-20230503211537777" style="zoom:50%;"><hr><p><strong>bitop</strong></p><p><code>连续2天都签到的用户</code></p><p>加入某个网站或者系统，它的用户有1000W，做个用户id和位置的映射</p><p>比如0号位对应用户id：uid-092iok-lkj</p><p>比如1号位对应用户id：uid-7388c-xxx</p><p>。。。。。。</p><img src="'+Z+'" alt="image-20230503211608673" style="zoom:50%;"><blockquote><p>案例实战见下一章，bitmap类型签到+结合布隆过滤器，案例升级</p></blockquote>',85);function dn(mn,vn){const p=i("ExternalLinkIcon");return o(),c("div",null,[$,n("ul",null,[nn,sn,n("li",null,[s("这个误差如何来的？论文地址和出处 "),n("ul",null,[n("li",null,[n("a",an,[s("http://antirez.com/news/75"),t(p)])]),pn])])]),tn,n("p",null,[s('按照ipv4的结构来说明，每个ipv4的地址最多是15个字节(ip = "192.168.111.1"，'),n("a",en,[s("最多xxx.xxx.xxx.xxx"),t(p)]),s(")")]),on,n("blockquote",null,[cn,n("p",null,[n("a",ln,[s("拾取坐标系统 (baidu.com)"),t(p)])])]),un,n("ul",null,[n("li",null,[n("a",kn,[s("命令"),t(p)])])]),rn])}const hn=e(J,[["render",dn],["__file","5.案例落地实战bitmap|hyperloglog|geo.html.vue"]]);export{hn as default};
