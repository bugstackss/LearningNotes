const e=JSON.parse('{"key":"v-7b9df23c","path":"/web/javascript/10%20%E3%80%90%E6%A0%87%E5%87%86%E5%BA%93%E4%B9%8BRegExp%E5%AF%B9%E8%B1%A1%E3%80%91.html","title":"10 【标准库之RegExp对象】","lang":"zh-CN","frontmatter":{"title":"10 【标准库之RegExp对象】","icon":"javascript","category":["javascript"],"tag":["javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"12.1 什么是正则表达式 正则表达式（regular expression）是一种表达文本模式（即字符串结构）的方法，有点像字符串的模板，常常用来按照“给定模式”匹配文本。 比如：验证手机号、验证邮箱、验证身份证…… 12.1.1 快速感知正则表达式 用一个例子快速演示正则表达式基本使用方法：检查某个字符串是否是 6 位数字。 12.1.2 正则表达...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/javascript/10%20%E3%80%90%E6%A0%87%E5%87%86%E5%BA%93%E4%B9%8BRegExp%E5%AF%B9%E8%B1%A1%E3%80%91.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"10 【标准库之RegExp对象】"}],["meta",{"property":"og:description","content":"12.1 什么是正则表达式 正则表达式（regular expression）是一种表达文本模式（即字符串结构）的方法，有点像字符串的模板，常常用来按照“给定模式”匹配文本。 比如：验证手机号、验证邮箱、验证身份证…… 12.1.1 快速感知正则表达式 用一个例子快速演示正则表达式基本使用方法：检查某个字符串是否是 6 位数字。 12.1.2 正则表达..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"10 【标准库之RegExp对象】"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"12.1 什么是正则表达式","slug":"_12-1-什么是正则表达式","link":"#_12-1-什么是正则表达式","children":[{"level":3,"title":"12.1.1 快速感知正则表达式","slug":"_12-1-1-快速感知正则表达式","link":"#_12-1-1-快速感知正则表达式","children":[]},{"level":3,"title":"12.1.2 正则表达式“按位”描述规则","slug":"_12-1-2-正则表达式-按位-描述规则","link":"#_12-1-2-正则表达式-按位-描述规则","children":[]}]},{"level":2,"title":"12.2 正则表达式的创建","slug":"_12-2-正则表达式的创建","link":"#_12-2-正则表达式的创建","children":[]},{"level":2,"title":"12.3 正则对象的实例方法","slug":"_12-3-正则对象的实例方法","link":"#_12-3-正则对象的实例方法","children":[{"level":3,"title":"12.3.1 RegExp.prototype.test()","slug":"_12-3-1-regexp-prototype-test","link":"#_12-3-1-regexp-prototype-test","children":[]},{"level":3,"title":"12.3.2 RegExp.prototype.exec()","slug":"_12-3-2-regexp-prototype-exec","link":"#_12-3-2-regexp-prototype-exec","children":[]}]},{"level":2,"title":"12.4 字符串的实例方法","slug":"_12-4-字符串的实例方法","link":"#_12-4-字符串的实例方法","children":[{"level":3,"title":"12.4.1 String.prototype.match()","slug":"_12-4-1-string-prototype-match","link":"#_12-4-1-string-prototype-match","children":[]},{"level":3,"title":"12.4.2 String.prototype.search()","slug":"_12-4-2-string-prototype-search","link":"#_12-4-2-string-prototype-search","children":[]},{"level":3,"title":"12.4.3 String.prototype.replace()","slug":"_12-4-3-string-prototype-replace","link":"#_12-4-3-string-prototype-replace","children":[]},{"level":3,"title":"12.4.4 String.prototype.split()","slug":"_12-4-4-string-prototype-split","link":"#_12-4-4-string-prototype-split","children":[]}]},{"level":2,"title":"12.5 匹配规则","slug":"_12-5-匹配规则","link":"#_12-5-匹配规则","children":[{"level":3,"title":"12.5.1 字面量字符","slug":"_12-5-1-字面量字符","link":"#_12-5-1-字面量字符","children":[]},{"level":3,"title":"12.5.2 元字符","slug":"_12-5-2-元字符","link":"#_12-5-2-元字符","children":[]},{"level":3,"title":"12.5.3 字符的转义","slug":"_12-5-3-字符的转义","link":"#_12-5-3-字符的转义","children":[]},{"level":3,"title":"12.5.4 特殊字符","slug":"_12-5-4-特殊字符","link":"#_12-5-4-特殊字符","children":[]},{"level":3,"title":"12.5.5 字符类","slug":"_12-5-5-字符类","link":"#_12-5-5-字符类","children":[]},{"level":3,"title":"12.5.6 预定义模式","slug":"_12-5-6-预定义模式","link":"#_12-5-6-预定义模式","children":[]},{"level":3,"title":"12.5.7 量词","slug":"_12-5-7-量词","link":"#_12-5-7-量词","children":[]},{"level":3,"title":"12.5.8 贪婪模式","slug":"_12-5-8-贪婪模式","link":"#_12-5-8-贪婪模式","children":[]},{"level":3,"title":"12.5.9 修饰符","slug":"_12-5-9-修饰符","link":"#_12-5-9-修饰符","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":24.85,"words":7454},"filePathRelative":"web/javascript/10 【标准库之RegExp对象】.md","localizedDate":"2023年5月31日"}');export{e as data};
