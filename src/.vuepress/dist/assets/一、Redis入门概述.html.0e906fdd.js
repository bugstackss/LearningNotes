import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as l,c as a,d as e,e as t,b as i,a as o,r as p}from"./app.9b10ba0a.js";const n="/assets/2023-03-25-16-32-55-image.1fdc58ba.png",d="/assets/2023-03-25-19-10-03-image.1eaadbd9.png",c="/assets/2023-03-25-19-12-24-image.1d84a92c.png",h="/assets/2023-03-25-16-36-25-image.63976089.png",u="/assets/2023-03-25-19-30-38-image.af803dfc.png",_="/assets/2023-03-25-16-38-16-image.dc82cbc1.png",m="/assets/2023-03-25-16-43-44-image.73ee4ede.png",b="/assets/2023-03-25-16-46-57-image.0d952df5.png",g="/assets/2023-03-25-16-49-07-image.5aa9b17d.png",f="/assets/image-20230325193657307.119097a8.png",k="/assets/2023-03-25-16-52-52-image.88cabdee.png",R="/assets/2023-03-25-16-56-10-image.36f80e40.png",q="/assets/2023-03-25-16-58-33-image.bbefc44f.png",x="/assets/2023-03-25-17-04-32-image.1fdd4cd6.png",y="/assets/2023-03-25-17-05-52-image.431b248f.png",w="/assets/2023-03-25-17-03-56-image.f38f7aca.png",S="/assets/2023-03-25-17-08-01-image.5ae1b56c.png",A="/assets/2023-03-25-17-13-53-image.388c712f.png",L="/assets/2023-03-25-17-16-32-image.175e568d.png",z="/assets/2023-03-25-18-08-27-image.ba1b3d53.png",B="/assets/2023-03-25-18-09-02-image.ad431617.png",C="/assets/2023-03-25-19-55-21-image.e749fbd3.png",O="/assets/2023-03-25-18-12-50-image.070f411f.png",v="/assets/2023-03-25-18-13-28-image.fe9e580c.png",V="/assets/2023-03-25-18-14-00-image.9620a6e1.png",E="/assets/2023-03-25-18-15-07-image.72acd329.png",F="/assets/2023-03-25-18-15-32-image.012da2d6.png",I="/assets/2023-03-25-18-16-00-image.01b2512b.png",N="/assets/2023-03-25-18-16-20-image.998e3e7e.png",P="/assets/2023-03-25-18-16-34-image.66b95016.png",D={},M=o('<h2 id="_01、redis是什么" tabindex="-1"><a class="header-anchor" href="#_01、redis是什么" aria-hidden="true">#</a> 01、Redis是什么？</h2><blockquote><p>Redis : REmote Dictionary Server （远程字典服务器）</p></blockquote><h3 id="官网解释" tabindex="-1"><a class="header-anchor" href="#官网解释" aria-hidden="true">#</a> 官网解释：</h3><blockquote><p>Remote Dictionary Server(远程字典服务)是完全开源的，使用ANSI，C语言编写遵守BSD协议，是一个高性能的Key-Value数据库提供了丰富的数据结构，例如String、Hash、List、Set、SortedSet等等。数据是存在内存中的，同时Redis支持事务、持久化、LUA脚本、发布/订阅、缓存淘汰、流技术等多种功能特性提供了主从模式、Redis Sentinel和Redis Cluster集群架构方案</p></blockquote><p><img src="'+n+'" alt=""></p><h3 id="拜拜神" tabindex="-1"><a class="header-anchor" href="#拜拜神" aria-hidden="true">#</a> 拜拜神</h3><blockquote><p>Redis之父安特雷兹</p><p>Redis之父Salvatore Sanfilippo，一名意大利程序员，大家更习惯称呼他Antirez</p></blockquote><p><img src="'+d+'" alt=""></p><p><img src="'+c+'" alt=""></p>',9),T={href:"https://github.com/antirez",target:"_blank",rel:"noopener noreferrer"},G={href:"http://antirez.com/latest/0",target:"_blank",rel:"noopener noreferrer"},Z=o('<p><img src="'+h+'" alt=""></p><h2 id="_02、redis能干嘛" tabindex="-1"><a class="header-anchor" href="#_02、redis能干嘛" aria-hidden="true">#</a> 02、Redis能干嘛？</h2><blockquote><p>技术介绍</p></blockquote><p><img src="'+u+'" alt=""></p><h3 id="主流功能与应用" tabindex="-1"><a class="header-anchor" href="#主流功能与应用" aria-hidden="true">#</a> 主流功能与应用</h3><ol><li>分布式缓存，挡在mysql数据库之前的带刀侍卫</li></ol><p><img src="'+_+'" alt=""></p><blockquote><p>与传统数据库关系(mysql)</p><p>Redis是key-value数据库(NoSQL一种)，mysql是关系数据库</p><p>Redis数据操作主要在内存，而mysql主要存储在磁盘</p><p>Redis在某一些场景使用中要明显优于mysql，比如计数器、排行榜等方面</p><p>Redis通常用于一些特定场景，需要与Mysql一起配合使用</p><p>两者并不是相互替换和竞争关系，而是共用和配合使用</p></blockquote><ol start="2"><li><p>内存存储和持久化（RDB+AOF）</p><p>Redis支持异步将内存中的数据写到磁盘上，同时不影响继续服务</p></li><li><p>高可用架构搭配</p><ul><li><p>单机</p></li><li><p>主从</p></li><li><p>哨兵</p></li><li><p>集群</p></li></ul></li><li><p>缓存穿透、击穿、雪崩</p></li><li><p>分布式锁</p></li><li><p>队列</p></li></ol><blockquote><p>Reids提供list和set操作，这使得Redis能作为一个很好的消息队列平台来使用。</p><p>我们常通过Reids的队列功能做购买限制。比如到节假日或者推广期间，进行一些活动，</p><p>对用户购买行为进行限制，限制今天只能购买几次商品或者一段时间内只能购买一次。也比较适合适用。</p></blockquote><ol start="7"><li>排行榜+点赞</li></ol><blockquote><p>在互联网应用中，有各种各样的排行榜，如电商网站的月度销量排行榜、社交APP的礼物排行榜、小程序的投票排行榜等等。Redis提供的zset数据类型能够快速实现这些复杂的排行榜。</p><p>比如小说网站对小说进行排名，根据排名，将排名靠前的小说推荐给用户</p></blockquote><ol start="8"><li>。。。。。。</li></ol><h3 id="总体功能概述-图示如下" tabindex="-1"><a class="header-anchor" href="#总体功能概述-图示如下" aria-hidden="true">#</a> 总体功能概述，图示如下</h3><p><img src="'+m+'" alt=""></p><h3 id="优势" tabindex="-1"><a class="header-anchor" href="#优势" aria-hidden="true">#</a> 优势</h3><ul><li><p>性能极高--Redis能读的速度是110000次/秒，写的速度是81000次/秒</p></li><li><p>Redis数据类型丰富，不仅仅支持简单的 key-value 类型的数据，同时还提供了list，set，zset，hash等数据结构的存储</p></li></ul><p><img src="'+b+'" alt=""></p><ul><li><p>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用</p></li><li><p>Redis支持数据的备份，即master-salve模式的数据备份</p></li></ul><h3 id="小总结" tabindex="-1"><a class="header-anchor" href="#小总结" aria-hidden="true">#</a> 小总结</h3><p><img src="'+g+'" alt=""></p><h2 id="_03、redis去哪下" tabindex="-1"><a class="header-anchor" href="#_03、redis去哪下" aria-hidden="true">#</a> 03、Redis去哪下</h2><h3 id="官网地址" tabindex="-1"><a class="header-anchor" href="#官网地址" aria-hidden="true">#</a> 官网地址</h3>',23),H={href:"https://redis.io",target:"_blank",rel:"noopener noreferrer"},U=e("p",null,[e("img",{src:f,alt:"image-20230325193657307"})],-1),W={href:"http://www.redis.cn",target:"_blank",rel:"noopener noreferrer"},J={href:"https://www.redis.com.cn/documentation.html",target:"_blank",rel:"noopener noreferrer"},K=e("p",null,[e("img",{src:k,alt:""})],-1),Q=e("h3",{id:"下载安装包",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#下载安装包","aria-hidden":"true"},"#"),t(" 下载安装包")],-1),j={href:"https://redis.io/download",target:"_blank",rel:"noopener noreferrer"},X=e("p",null,[e("img",{src:R,alt:""})],-1),Y=e("blockquote",null,[e("p",null,"本次Reids7")],-1),$=e("ul",null,[e("li",null,"redis-7.0.0.tar.gz")],-1),ee=e("blockquote",null,[e("p",null,"Redis6以及其他版本")],-1),te=e("p",null,[e("img",{src:q,alt:""})],-1),se=e("h3",{id:"其他文档资料",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#其他文档资料","aria-hidden":"true"},"#"),t(" 其他文档资料")],-1),ie=e("p",null,"Redis源码地址",-1),oe={href:"https://github.com/redis/redis",target:"_blank",rel:"noopener noreferrer"},re=e("p",null,"中国大陆打开会比较慢，建议多试几次或者使用梯子进行尝试！",-1),le=e("p",null,[e("img",{src:x,alt:""})],-1),ae=e("p",null,"Redis在线测试",-1),pe={href:"https://try.redis.io/",target:"_blank",rel:"noopener noreferrer"},ne=e("p",null,[e("img",{src:y,alt:""})],-1),de=e("p",null,"Redis命令参考",-1),ce={href:"http://doc.redisfans.com/",target:"_blank",rel:"noopener noreferrer"},he=o('<p><img src="'+w+'" alt=""></p><h2 id="_04、redis怎么玩" tabindex="-1"><a class="header-anchor" href="#_04、redis怎么玩" aria-hidden="true">#</a> 04、Redis怎么玩</h2><ul><li>官网</li></ul><p><img src="'+S+'" alt=""></p><ul><li><p>多种数据类型基本操作和配置</p></li><li><p>持久化和赋值，RDB/AOF</p></li><li><p>事务的控制</p></li><li><p>复制，集群等</p></li><li><p>。。。。。。</p></li></ul><h2 id="_05、redis迭代演化和redis7新特性浅谈" tabindex="-1"><a class="header-anchor" href="#_05、redis迭代演化和redis7新特性浅谈" aria-hidden="true">#</a> 05、Redis迭代演化和Redis7新特性浅谈</h2><h3 id="时间推移-版本升级" tabindex="-1"><a class="header-anchor" href="#时间推移-版本升级" aria-hidden="true">#</a> 时间推移，版本升级</h3>',7),ue=e("p",null,"VCR",-1),_e={href:"https://www.bilibili.com/video/BV1oW411u75R?p=1",target:"_blank",rel:"noopener noreferrer"},me=e("p",null,"Redis之父安特雷兹的发言",-1),be={href:"http://antirez.com/news/132",target:"_blank",rel:"noopener noreferrer"},ge=o('<h3 id="redis版本迭代推演介绍" tabindex="-1"><a class="header-anchor" href="#redis版本迭代推演介绍" aria-hidden="true">#</a> Redis版本迭代推演介绍</h3><blockquote><p>1.几个里程碑式的重要版本</p></blockquote><p><img src="'+A+'" alt=""></p><blockquote><p>5.0版本是直接升级到6.0版本，对于这个激进的升级，Redis之父antirez表现得很有信心和兴奋，</p><p>所以第一时间发文来阐述6.0的一些重大功能&quot;Redis 6.0.0 GA is out!&quot;:</p></blockquote><blockquote><p>随后Redis再接再厉，直接王炸Redis7.0---2023年爆款</p></blockquote><blockquote><p>2022年4月27日Redis正式发布了7.0更新<br> （其实早在2022年1月31日，Redis已经预发布了7.0rc-1，经过社区的考验后，确认没重大Bug才会正式发布）</p></blockquote><blockquote><p><code>提示：在Redis的技术中主要关注（阿里、美团）这两个大厂的使用！</code></p></blockquote><blockquote><p>2.命名规则</p></blockquote><blockquote><p>Redis从发布至今，已经有十余年的时光了，一直遵循着自己的命名规则：</p><p>版本号第二位如果是奇数，则为非稳定版本 如2.7、2.9、3.1</p><p>版本号第二位如果是偶数，则为稳定版本 如2.6、2.8、3.0、3.2</p><p>当前奇数版本就是下一个稳定版本的开发版本，如2.9版本是3.0版本的开发版本</p><p>我们可以通过redis.io官网来下载自己感兴趣的版本进行源码阅读：</p><p>历史发布版本的源码：<code>https://download.redis.io/releases/</code></p></blockquote><p><img src="'+L+'" alt=""></p><h3 id="redis7-0新特性概述" tabindex="-1"><a class="header-anchor" href="#redis7-0新特性概述" aria-hidden="true">#</a> Redis7.0新特性概述</h3><blockquote><p><code>https://github.com/redis/redis/releases</code></p></blockquote><p><img src="'+z+'" alt=""></p><blockquote><p>新特性</p></blockquote><p><img src="'+B+'" alt=""></p><blockquote><p>中文翻译：</p></blockquote><p>新特性：</p>',17),fe={href:"https://redis.io/topics/functions-intro%EF%BC%9B",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://redis.io/topics/acl#key-permissions",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://redis.io/topics/acl#selectors%EF%BC%9B",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://redis.io/topics/pubsub#sharded-pubsub",target:"_blank",rel:"noopener noreferrer"},xe=e("li",null,[e("p",null,"在大多数情况下把子命令当作一类命令处理（Treat subcommands as commands）（影响 ACL类别、INFO 命令统计等）")],-1),ye={href:"https://redis.io/commands/command-docs",target:"_blank",rel:"noopener noreferrer"},we={href:"https://redis.io/topics/command-tips",target:"_blank",rel:"noopener noreferrer"},Se=o("<li><p>Command key-specs：为客户端定位key参数和读/写目的提供一种更好的方式；</p></li><li><p>多部分 AOF 机制避免了 AOF 重写的开销；</p></li><li><p>集群支持主机名配置，而不仅仅是 IP 地址；</p></li><li><p>客户端驱逐策略：改进了对网络缓冲区消耗的内存的管理，并且提供一个选项，当总内存超过限制时，剔除对应的客户端；</p></li><li><p>提供一种断开集群总线连接的机制，来防止不受控制的缓冲区增长；</p></li><li><p>AOF：增加时间戳和对基于时间点恢复的支持；</p></li><li><p>Lua：支持 EVAL 脚本中的函数标志；</p></li><li><p>Lua：支持 Verbatim 和 Big-Number 类型的 RESP3 回复；</p></li><li><p>Lua：可以通过 redis.REDIS_VERSION、redis.REDIS_VERSION_NUM来获取 Redis 版本。</p></li>",9),Ae=o('<blockquote><p>部分新特性总览</p></blockquote><blockquote><p>2022 年 4 月正式发布的 Redis 7.0 是目前 Redis 历史版本中变化最大的版本。</p><p>首先，它有超过 50 个以上新增命令；其次，它有大量核心特性的新增和改进。</p></blockquote><p><img src="'+C+'" alt=""></p><ul><li>Redis Functions</li></ul><p><img src="'+O+'" alt=""></p><ul><li>Client-eviction</li></ul><p><img src="'+v+'" alt=""></p><ul><li>Multi-part AOF</li></ul><p><img src="'+V+'" alt=""></p><ul><li>ACL V2</li></ul><p><img src="'+E+'" alt=""></p><ul><li>新增命令</li></ul><p><img src="'+F+'" alt=""></p><ul><li>listpack替代ziplist</li></ul><blockquote><p>listpack 是用来替代 ziplist 的新数据结构，在 7.0 版本已经没有 ziplist 的配置了（6.0版本仅部分数据类型作为过渡阶段在使用）</p></blockquote><p><img src="'+I+'" alt=""></p><ul><li>底层性能提升（和编码关系不大）</li></ul><p><img src="'+N+'" alt=""></p><p><img src="'+P+'" alt=""></p><ul><li>。。。。。。</li></ul><h3 id="本次将对redis的一部分新特性做说明-not-all" tabindex="-1"><a class="header-anchor" href="#本次将对redis的一部分新特性做说明-not-all" aria-hidden="true">#</a> 本次将对Redis的一部分新特性做说明（not all）</h3><blockquote><p><strong>总体概述：</strong></p><p>大体和之前的redis版本保持一致和稳定，主要是自身底层性能和资源利用率上的优化和提高，如果你生产上系统稳定，不用着急升级到最新的redis7版本，当然，O(∩_∩)O哈哈~，如果你是从零开始的新系统，直接上Redis7.0-GA版。<sup>_</sup></p></blockquote><table><thead><tr><th>多AOF文件支持</th><th>7.0 版本中一个比较大的变化就是 aof 文件由一个变成了多个，主要分为两种类型：基本文件(base files)、增量文件(incr files)，请注意这些文件名称是复数形式说明每一类文件不仅仅只有一个。在此之外还引入了一个清单文件(manifest) 用于跟踪文件以及文件的创建和应用顺序（恢复）</th></tr></thead><tbody><tr><td>config命令增强</td><td>对于Config Set 和Get命令，支持在一次调用过程中传递多个配置参数。例如，现在我们可以在执行一次Config Set命令中更改多个参数： config set maxmemory 10000001 maxmemory-clients 50% port 6399</td></tr><tr><td>限制客户端内存使用<br><br>Client-eviction</td><td>一旦 Redis 连接较多，再加上每个连接的内存占用都比较大的时候， Redis总连接内存占用可能会达到maxmemory的上限，可以增加允许限制所有客户端的总内存使用量配置项，redis.config 中对应的配置项<br><br>// 两种配置形式：指定内存大小、基于 maxmemory 的百分比。<br><br>maxmemory-clients 1g<br><br>maxmemory-clients 10%</td></tr><tr><td>listpack紧凑列表调整</td><td>listpack 是用来替代 ziplist 的新数据结构，在 7.0 版本已经没有 ziplist 的配置了（6.0版本仅部分数据类型作为过渡阶段在使用）listpack 已经替换了 ziplist 类似 hash-max-ziplist-entries 的配置</td></tr><tr><td>访问安全性增强ACLV2</td><td>在redis.conf配置文件中，protected-mode默认为yes，只有当你希望你的客户端在没有授权的情况下可以连接到Redis server的时候可以将protected-mode设置为no</td></tr><tr><td>Redis Functions</td><td>Redis函数，一种新的通过服务端脚本扩展Redis的方式，函数与数据本身一起存储。<br><br>简言之，redis自己要去抢夺Lua脚本的饭碗</td></tr><tr><td>RDB保存时间调整</td><td>将持久化文件RDB的保存规则发生了改变，尤其是时间记录频度变化</td></tr><tr><td>命令新增和变动</td><td>Zset (有序集合)增加 ZMPOP、BZMPOP、ZINTERCARD 等命令<br><br>Set (集合)增加 SINTERCARD 命令<br><br>LIST (列表)增加 LMPOP、BLMPOP ，从提供的键名列表中的第一个非空列表键中弹出一个或多个元素。</td></tr><tr><td>性能资源利用率、安全、等改进</td><td>自身底层部分优化改动，Redis核心在许多方面进行了重构和改进<br><br>主动碎片整理V2：增强版主动碎片整理，配合Jemalloc版本更新，更快更智能，延时更低<br><br>HyperLogLog改进：在Redis5.0中，HyperLogLog算法得到改进，优化了计数统计时的内存使用效率，7更加优秀<br><br>更好的内存统计报告<br><br>如果不为了API向后兼容，我们将不再使用slave一词......(政治正确)</td></tr></tbody></table>',23);function Le(ze,Be){const s=p("ExternalLinkIcon");return l(),a("div",null,[M,e("blockquote",null,[e("p",null,[t("Github："),e("a",T,[t("https://github.com/antirez"),i(s)])]),e("p",null,[t("个人博客："),e("a",G,[t("http://antirez.com/latest/0"),i(s)])])]),Z,e("blockquote",null,[e("p",null,[t("英文文档："),e("a",H,[t("https://redis.io"),i(s)])])]),U,e("blockquote",null,[e("p",null,[t("中文文档："),e("a",W,[t("http://www.redis.cn"),i(s)])]),e("p",null,[t("中文文档："),e("a",J,[t("https://www.redis.com.cn/documentation.html"),i(s)])])]),K,Q,e("blockquote",null,[e("p",null,[t("下载地址："),e("a",j,[t("https://redis.io/download"),i(s)])])]),X,Y,$,ee,te,se,e("blockquote",null,[ie,e("p",null,[e("a",oe,[t("https://github.com/redis/redis"),i(s)])]),re]),le,e("blockquote",null,[ae,e("p",null,[e("a",pe,[t("https://try.redis.io/"),i(s)])])]),ne,e("blockquote",null,[de,e("p",null,[e("a",ce,[t("http://doc.redisfans.com/"),i(s)])])]),he,e("blockquote",null,[ue,e("p",null,[e("a",_e,[t("https://www.bilibili.com/video/BV1oW411u75R?p=1"),i(s)])])]),e("blockquote",null,[me,e("p",null,[e("a",be,[t("http://antirez.com/news/132"),i(s)])])]),ge,e("ul",null,[e("li",null,[e("p",null,[t("Redis Functions：Redis函数，一种新的通过服务端脚本扩展Redis的方式，函数与数据本身一起存储。函数还被持久化到AOF文件，并从主文件复制到副本，因此它们与数据本身一样持久，见："),e("a",fe,[t("https://redis.io/topics/functions-intro；"),i(s)])])]),e("li",null,[e("p",null,[t("ACL改进：支持基于key的细粒度的权限，允许用户支持多个带有选择器的命令规则集，见："),e("a",ke,[t("https://redis.io/topics/acl#key-permissions"),i(s)]),t(" 和"),e("a",Re,[t("https://redis.io/topics/acl#selectors；"),i(s)])])]),e("li",null,[e("p",null,[t("sharded-pubsub：分片发布/订阅支持，之前消息会在整个集群中广播，而与订阅特定频道/模式无关。发布行为会连接到集群中的所有节点，而不用客户端连接到所有节点都会收到订阅消息。见 "),e("a",qe,[t("https://redis.io/topics/pubsub#sharded-pubsub"),i(s)])])]),xe,e("li",null,[e("p",null,[t("文档更新：提供命令的元数据和文档，文档更完善，见"),e("a",ye,[t("https://redis.io/commands/command-docs"),i(s)]),t(" 、"),e("a",we,[t("https://redis.io/topics/command-tips"),i(s)])])]),Se]),Ae])}const ve=r(D,[["render",Le],["__file","一、Redis入门概述.html.vue"]]);export{ve as default};
