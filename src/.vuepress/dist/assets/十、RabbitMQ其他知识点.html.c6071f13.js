const e=JSON.parse('{"key":"v-3723097a","path":"/notes/mq/rabbitmq/%E5%8D%81%E3%80%81RabbitMQ%E5%85%B6%E4%BB%96%E7%9F%A5%E8%AF%86%E7%82%B9.html","title":"十、RabbitMQ其他知识点","lang":"zh-CN","frontmatter":{"title":"十、RabbitMQ其他知识点","category":["rabbitmq"],"tag":["rabbitmq","消息中间件","MQ"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"01、幂等性 概念 用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了副作用。举个最简单的例子，那就是支付，用户购买商品后支付，支付扣款成功，但是返回结果的时候网络异常，此时钱已经扣了，用户再次点击按钮，此时会进行第二次扣款，返回结果成功，用户查询余额发现多扣钱了，流水记录也变成了两条。在以前的单应用系统中，我们只需要把...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/mq/rabbitmq/%E5%8D%81%E3%80%81RabbitMQ%E5%85%B6%E4%BB%96%E7%9F%A5%E8%AF%86%E7%82%B9.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"十、RabbitMQ其他知识点"}],["meta",{"property":"og:description","content":"01、幂等性 概念 用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了副作用。举个最简单的例子，那就是支付，用户购买商品后支付，支付扣款成功，但是返回结果的时候网络异常，此时钱已经扣了，用户再次点击按钮，此时会进行第二次扣款，返回结果成功，用户查询余额发现多扣钱了，流水记录也变成了两条。在以前的单应用系统中，我们只需要把..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"十、RabbitMQ其他知识点"}],["meta",{"property":"article:tag","content":"rabbitmq"}],["meta",{"property":"article:tag","content":"消息中间件"}],["meta",{"property":"article:tag","content":"MQ"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"01、幂等性","slug":"_01、幂等性","link":"#_01、幂等性","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"消息重复消费","slug":"消息重复消费","link":"#消息重复消费","children":[]},{"level":3,"title":"解决思路","slug":"解决思路","link":"#解决思路","children":[]},{"level":3,"title":"消费端的幂等性保障","slug":"消费端的幂等性保障","link":"#消费端的幂等性保障","children":[]}]},{"level":2,"title":"02、优先级队列","slug":"_02、优先级队列","link":"#_02、优先级队列","children":[{"level":3,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":3,"title":"添加方法","slug":"添加方法","link":"#添加方法","children":[]}]},{"level":2,"title":"03、实战","slug":"_03、实战","link":"#_03、实战","children":[{"level":3,"title":"生产者代码","slug":"生产者代码","link":"#生产者代码","children":[]},{"level":3,"title":"消费者代码","slug":"消费者代码","link":"#消费者代码","children":[]}]},{"level":2,"title":"04、惰性队列","slug":"_04、惰性队列","link":"#_04、惰性队列","children":[{"level":3,"title":"使用场景","slug":"使用场景-1","link":"#使用场景-1","children":[]},{"level":3,"title":"两种模式","slug":"两种模式","link":"#两种模式","children":[]},{"level":3,"title":"内存开销对比","slug":"内存开销对比","link":"#内存开销对比","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":7.68,"words":2305},"filePathRelative":"notes/mq/rabbitmq/十、RabbitMQ其他知识点.md","localizedDate":"2023年5月31日"}');export{e as data};
