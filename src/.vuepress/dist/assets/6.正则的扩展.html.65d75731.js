const e=JSON.parse('{"key":"v-a09a9ac8","path":"/web/es6/6.%E6%AD%A3%E5%88%99%E7%9A%84%E6%89%A9%E5%B1%95.html","title":"正则的扩展","lang":"zh-CN","frontmatter":{"title":"正则的扩展","category":["es6"],"tag":["ECMASCRIPT","javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"RegExp 构造函数 在 ES5 中，RegExp构造函数的参数有两种情况。 第一种情况是，参数是字符串，这时第二个参数表示正则表达式的修饰符（flag）。 第二种情况是，参数是一个正则表示式，这时会返回一个原有正则表达式的拷贝。 但是，ES5 不允许此时使用第二个参数添加修饰符，否则会报错。 ES6 改变了这种行为。如果RegExp构造函数第一个参...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/es6/6.%E6%AD%A3%E5%88%99%E7%9A%84%E6%89%A9%E5%B1%95.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"正则的扩展"}],["meta",{"property":"og:description","content":"RegExp 构造函数 在 ES5 中，RegExp构造函数的参数有两种情况。 第一种情况是，参数是字符串，这时第二个参数表示正则表达式的修饰符（flag）。 第二种情况是，参数是一个正则表示式，这时会返回一个原有正则表达式的拷贝。 但是，ES5 不允许此时使用第二个参数添加修饰符，否则会报错。 ES6 改变了这种行为。如果RegExp构造函数第一个参..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"ECMASCRIPT"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"RegExp 构造函数","slug":"regexp-构造函数","link":"#regexp-构造函数","children":[]},{"level":2,"title":"字符串的正则方法","slug":"字符串的正则方法","link":"#字符串的正则方法","children":[]},{"level":2,"title":"u 修饰符","slug":"u-修饰符","link":"#u-修饰符","children":[]},{"level":2,"title":"RegExp.prototype.unicode 属性","slug":"regexp-prototype-unicode-属性","link":"#regexp-prototype-unicode-属性","children":[]},{"level":2,"title":"y 修饰符","slug":"y-修饰符","link":"#y-修饰符","children":[]},{"level":2,"title":"RegExp.prototype.sticky 属性","slug":"regexp-prototype-sticky-属性","link":"#regexp-prototype-sticky-属性","children":[]},{"level":2,"title":"RegExp.prototype.flags 属性","slug":"regexp-prototype-flags-属性","link":"#regexp-prototype-flags-属性","children":[]},{"level":2,"title":"s 修饰符：dotAll 模式","slug":"s-修饰符-dotall-模式","link":"#s-修饰符-dotall-模式","children":[]},{"level":2,"title":"后行断言","slug":"后行断言","link":"#后行断言","children":[]},{"level":2,"title":"Unicode 属性类","slug":"unicode-属性类","link":"#unicode-属性类","children":[]},{"level":2,"title":"v 修饰符：Unicode 属性类的运算","slug":"v-修饰符-unicode-属性类的运算","link":"#v-修饰符-unicode-属性类的运算","children":[]},{"level":2,"title":"具名组匹配","slug":"具名组匹配","link":"#具名组匹配","children":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"解构赋值和替换","slug":"解构赋值和替换","link":"#解构赋值和替换","children":[]},{"level":3,"title":"引用","slug":"引用","link":"#引用","children":[]}]},{"level":2,"title":"d 修饰符：正则匹配索引","slug":"d-修饰符-正则匹配索引","link":"#d-修饰符-正则匹配索引","children":[]},{"level":2,"title":"String.prototype.matchAll()","slug":"string-prototype-matchall","link":"#string-prototype-matchall","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":20.31,"words":6092},"filePathRelative":"web/es6/6.正则的扩展.md","localizedDate":"2023年5月31日"}');export{e as data};
