const t=JSON.parse('{"key":"v-00a44203","path":"/web/ts/6.%20%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD.html","title":"类型推断","lang":"zh-CN","frontmatter":{"title":"类型推断","category":["ts"],"tag":["typescript","javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"如果没有明确的指定类型，那么 TypeScript 会依照类型推论（Type Inference）的规则推断出一个类型。 什么是类型推论 以下代码虽然没有指定类型，但是会在编译的时候报错： 事实上，它等价于： TypeScript 会在没有明确的指定类型的时候推测出一个类型，这就是类型推论。 如果定义的时候没有赋值，不管之后有没有赋值，都会被推断成 a...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/ts/6.%20%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"类型推断"}],["meta",{"property":"og:description","content":"如果没有明确的指定类型，那么 TypeScript 会依照类型推论（Type Inference）的规则推断出一个类型。 什么是类型推论 以下代码虽然没有指定类型，但是会在编译的时候报错： 事实上，它等价于： TypeScript 会在没有明确的指定类型的时候推测出一个类型，这就是类型推论。 如果定义的时候没有赋值，不管之后有没有赋值，都会被推断成 a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"什么是类型推论","slug":"什么是类型推论","link":"#什么是类型推论","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":0.97,"words":292},"filePathRelative":"web/ts/6. 类型推断.md","localizedDate":"2023年5月31日"}');export{t as data};
