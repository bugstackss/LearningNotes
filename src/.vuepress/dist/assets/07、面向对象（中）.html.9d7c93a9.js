const e=JSON.parse('{"key":"v-4cfab03f","path":"/notes/javacore/java/07%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88%E4%B8%AD%EF%BC%89.html","title":"07、面向对象（中）","lang":"zh-CN","frontmatter":{"title":"07、面向对象（中）","category":["Java"],"tag":["Java"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"01、继承性的使用与理解 1、Person 类 2、Student 类 3、测试类 f0b15252-0ab1-47c2-b8c1-aefff214e79b java入门第三季4-10关于泛型，子类不能调用父类的参数-慕课网 3、Java 中关于继承性的规定 4、将上述 Person 类改为如下 5、Creature 类 a8dc5a99-b5c1-4...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/javacore/java/07%E3%80%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88%E4%B8%AD%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"07、面向对象（中）"}],["meta",{"property":"og:description","content":"01、继承性的使用与理解 1、Person 类 2、Student 类 3、测试类 f0b15252-0ab1-47c2-b8c1-aefff214e79b java入门第三季4-10关于泛型，子类不能调用父类的参数-慕课网 3、Java 中关于继承性的规定 4、将上述 Person 类改为如下 5、Creature 类 a8dc5a99-b5c1-4..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"07、面向对象（中）"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"01、继承性的使用与理解","slug":"_01、继承性的使用与理解","link":"#_01、继承性的使用与理解","children":[{"level":3,"title":"1.1、继承性练习","slug":"_1-1、继承性练习","link":"#_1-1、继承性练习","children":[]}]},{"level":2,"title":"02、方法的重写(override/overwrite)","slug":"_02、方法的重写-override-overwrite","link":"#_02、方法的重写-override-overwrite","children":[{"level":3,"title":"2.1、方法重写的细节","slug":"_2-1、方法重写的细节","link":"#_2-1、方法重写的细节","children":[]},{"level":3,"title":"2.2、方法的练习","slug":"_2-2、方法的练习","link":"#_2-2、方法的练习","children":[]}]},{"level":2,"title":"03、四种访问权限修饰符","slug":"_03、四种访问权限修饰符","link":"#_03、四种访问权限修饰符","children":[]},{"level":2,"title":"04、关键字：super","slug":"_04、关键字-super","link":"#_04、关键字-super","children":[]},{"level":2,"title":"05、子类对象实例化过程","slug":"_05、子类对象实例化过程","link":"#_05、子类对象实例化过程","children":[]},{"level":2,"title":"06、面向对象特征之三：多态性","slug":"_06、面向对象特征之三-多态性","link":"#_06、面向对象特征之三-多态性","children":[{"level":3,"title":"6.1、虚拟方法的补充","slug":"_6-1、虚拟方法的补充","link":"#_6-1、虚拟方法的补充","children":[]},{"level":3,"title":"6.2、向下转型的使用","slug":"_6-2、向下转型的使用","link":"#_6-2、向下转型的使用","children":[]},{"level":3,"title":"6.3、多态性的练习","slug":"_6-3、多态性的练习","link":"#_6-3、多态性的练习","children":[]}]},{"level":2,"title":"07、Object 类的使用","slug":"_07、object-类的使用","link":"#_07、object-类的使用","children":[{"level":3,"title":"7.1、Object类中的主要结构","slug":"_7-1、object类中的主要结构","link":"#_7-1、object类中的主要结构","children":[]},{"level":3,"title":"7.2、==操作符与equals方法","slug":"_7-2、-操作符与equals方法","link":"#_7-2、-操作符与equals方法","children":[]},{"level":3,"title":"7.2.1、重写equals()方法的原则","slug":"_7-2-1、重写equals-方法的原则","link":"#_7-2-1、重写equals-方法的原则","children":[]},{"level":3,"title":"7.3、toString的使用","slug":"_7-3、tostring的使用","link":"#_7-3、tostring的使用","children":[]}]},{"level":2,"title":"08、包装类(Wrapper)的使用","slug":"_08、包装类-wrapper-的使用","link":"#_08、包装类-wrapper-的使用","children":[{"level":3,"title":"8.1、单元测试方法的使用","slug":"_8-1、单元测试方法的使用","link":"#_8-1、单元测试方法的使用","children":[]},{"level":3,"title":"8.2、包装类的使用","slug":"_8-2、包装类的使用","link":"#_8-2、包装类的使用","children":[]},{"level":3,"title":"8.3、包装类与基本数据类型相互转换","slug":"_8-3、包装类与基本数据类型相互转换","link":"#_8-3、包装类与基本数据类型相互转换","children":[]},{"level":3,"title":"8.4、练习","slug":"_8-4、练习","link":"#_8-4、练习","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":37.91,"words":11372},"filePathRelative":"notes/javacore/java/07、面向对象（中）.md","localizedDate":"2023年5月31日"}');export{e as data};
