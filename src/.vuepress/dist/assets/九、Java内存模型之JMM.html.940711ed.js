const e=JSON.parse('{"key":"v-202dfea9","path":"/notes/juc/%E4%B9%9D%E3%80%81Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E4%B9%8BJMM.html","title":"九、Java内存模型之JMM","lang":"zh-CN","frontmatter":{"title":"九、Java内存模型之JMM","category":["JUC","java"],"tag":["java","juc","并发编程"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"九、Java内存模型之JMM JMM(java内存模型)，由于并发程序要比串行程序复杂很多，其中一个重要原因是并发程序中数据访问一致性和安全性将会受到严重挑战。如何保证一个线程可以看到正确的数据呢？这个问题看起来很白痴。对于串行程序来说，根本就是小菜一碟，如果你读取一个变量，这个变量的值是1，那么你读取到的一定是1，就是这么简单的问题在并行程序中居然变...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/juc/%E4%B9%9D%E3%80%81Java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E4%B9%8BJMM.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"九、Java内存模型之JMM"}],["meta",{"property":"og:description","content":"九、Java内存模型之JMM JMM(java内存模型)，由于并发程序要比串行程序复杂很多，其中一个重要原因是并发程序中数据访问一致性和安全性将会受到严重挑战。如何保证一个线程可以看到正确的数据呢？这个问题看起来很白痴。对于串行程序来说，根本就是小菜一碟，如果你读取一个变量，这个变量的值是1，那么你读取到的一定是1，就是这么简单的问题在并行程序中居然变..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"九、Java内存模型之JMM"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"juc"}],["meta",{"property":"article:tag","content":"并发编程"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"九、Java内存模型之JMM","slug":"九、java内存模型之jmm","link":"#九、java内存模型之jmm","children":[{"level":3,"title":"1、计算机硬件存储体系","slug":"_1、计算机硬件存储体系","link":"#_1、计算机硬件存储体系","children":[]},{"level":3,"title":"2、Java内存模型Java Memory Model","slug":"_2、java内存模型java-memory-model","link":"#_2、java内存模型java-memory-model","children":[]},{"level":3,"title":"3、JMM规范下，三大特性","slug":"_3、jmm规范下-三大特性","link":"#_3、jmm规范下-三大特性","children":[]},{"level":3,"title":"4、JMM规范下，多线程对变量的读写过程","slug":"_4、jmm规范下-多线程对变量的读写过程","link":"#_4、jmm规范下-多线程对变量的读写过程","children":[]},{"level":3,"title":"5、JMM规范下，多线程先行发生原则之happens-before","slug":"_5、jmm规范下-多线程先行发生原则之happens-before","link":"#_5、jmm规范下-多线程先行发生原则之happens-before","children":[]},{"level":3,"title":"6、happens-before之8条","slug":"_6、happens-before之8条","link":"#_6、happens-before之8条","children":[]},{"level":3,"title":"7、案例说明","slug":"_7、案例说明","link":"#_7、案例说明","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":11.43,"words":3429},"filePathRelative":"notes/juc/九、Java内存模型之JMM.md","localizedDate":"2023年5月31日"}');export{e as data};
