const e=JSON.parse('{"key":"v-9fcb160e","path":"/web/es6/11.%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B0%E5%A2%9E%E6%96%B9%E6%B3%95.html","title":"对象的新增方法","lang":"zh-CN","frontmatter":{"title":"对象的新增方法","category":["es6"],"tag":["ECMASCRIPT","javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"本章介绍 Object 对象的新增方法。 Object.is() ES5 比较两个值是否相等，只有两个运算符：相等运算符（==）和严格相等运算符（===）。它们都有缺点，前者会自动转换数据类型，后者的NaN不等于自身，以及+0等于-0。JavaScript 缺乏一种运算，在所有环境中，只要两个值是一样的，它们就应该相等。 ES6 提出“Same-val...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/es6/11.%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B0%E5%A2%9E%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"对象的新增方法"}],["meta",{"property":"og:description","content":"本章介绍 Object 对象的新增方法。 Object.is() ES5 比较两个值是否相等，只有两个运算符：相等运算符（==）和严格相等运算符（===）。它们都有缺点，前者会自动转换数据类型，后者的NaN不等于自身，以及+0等于-0。JavaScript 缺乏一种运算，在所有环境中，只要两个值是一样的，它们就应该相等。 ES6 提出“Same-val..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"ECMASCRIPT"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"Object.is()","slug":"object-is","link":"#object-is","children":[]},{"level":2,"title":"Object.assign()","slug":"object-assign","link":"#object-assign","children":[{"level":3,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":3,"title":"注意点","slug":"注意点","link":"#注意点","children":[]},{"level":3,"title":"常见用途","slug":"常见用途","link":"#常见用途","children":[]}]},{"level":2,"title":"Object.getOwnPropertyDescriptors()","slug":"object-getownpropertydescriptors","link":"#object-getownpropertydescriptors","children":[]},{"level":2,"title":"__proto__属性，Object.setPrototypeOf()，Object.getPrototypeOf()","slug":"proto-属性-object-setprototypeof-object-getprototypeof","link":"#proto-属性-object-setprototypeof-object-getprototypeof","children":[{"level":3,"title":"__proto__属性","slug":"proto-属性","link":"#proto-属性","children":[]},{"level":3,"title":"Object.setPrototypeOf()","slug":"object-setprototypeof","link":"#object-setprototypeof","children":[]},{"level":3,"title":"Object.getPrototypeOf()","slug":"object-getprototypeof","link":"#object-getprototypeof","children":[]}]},{"level":2,"title":"Object.keys()，Object.values()，Object.entries()","slug":"object-keys-object-values-object-entries","link":"#object-keys-object-values-object-entries","children":[{"level":3,"title":"Object.keys()","slug":"object-keys","link":"#object-keys","children":[]},{"level":3,"title":"Object.values()","slug":"object-values","link":"#object-values","children":[]},{"level":3,"title":"Object.entries()","slug":"object-entries","link":"#object-entries","children":[]}]},{"level":2,"title":"Object.fromEntries()","slug":"object-fromentries","link":"#object-fromentries","children":[]},{"level":2,"title":"Object.hasOwn()","slug":"object-hasown","link":"#object-hasown","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":15.88,"words":4765},"filePathRelative":"web/es6/11.对象的新增方法.md","localizedDate":"2023年5月31日"}');export{e as data};
