const e=JSON.parse('{"key":"v-7c6be4ac","path":"/notes/javacore/nio/%E7%AC%AC5%E7%AB%A0_Java%20NIO%EF%BC%88Selector%EF%BC%89.html","title":"五、Java NIO（Selector）","lang":"zh-CN","frontmatter":{"title":"五、Java NIO（Selector）","category":["IO"],"tag":["NIO","IO","java"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"1.1 Selector 简介 1、Selector和 Channel 关系 Selector 一般称 为选择器 ，也可以翻译为 多路复用器 。它是 Java NIO 核心组件中 的一个，用于检查一个或多个 NIO Channel（通道）的状态是否处于可读、可写。如 此可以实现单线程管理多个 channels,也就是可以管理多个网络链接。 image-...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/javacore/nio/%E7%AC%AC5%E7%AB%A0_Java%20NIO%EF%BC%88Selector%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"五、Java NIO（Selector）"}],["meta",{"property":"og:description","content":"1.1 Selector 简介 1、Selector和 Channel 关系 Selector 一般称 为选择器 ，也可以翻译为 多路复用器 。它是 Java NIO 核心组件中 的一个，用于检查一个或多个 NIO Channel（通道）的状态是否处于可读、可写。如 此可以实现单线程管理多个 channels,也就是可以管理多个网络链接。 image-..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"五、Java NIO（Selector）"}],["meta",{"property":"article:tag","content":"NIO"}],["meta",{"property":"article:tag","content":"IO"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"1.1 Selector 简介","slug":"_1-1-selector-简介","link":"#_1-1-selector-简介","children":[{"level":3,"title":"1、Selector和 Channel 关系","slug":"_1、selector和-channel-关系","link":"#_1、selector和-channel-关系","children":[]},{"level":3,"title":"2、可选择通道(SelectableChannel)","slug":"_2、可选择通道-selectablechannel","link":"#_2、可选择通道-selectablechannel","children":[]},{"level":3,"title":"*3、***Channel 注册到 Selector","slug":"_3、-channel-注册到-selector","link":"#_3、-channel-注册到-selector","children":[]},{"level":3,"title":"4、选择键(SelectionKey)","slug":"_4、选择键-selectionkey","link":"#_4、选择键-selectionkey","children":[]}]},{"level":2,"title":"1.2 Selector 的使用方法","slug":"_1-2-selector-的使用方法","link":"#_1-2-selector-的使用方法","children":[{"level":3,"title":"1. Selector 的创建","slug":"_1-selector-的创建","link":"#_1-selector-的创建","children":[]},{"level":3,"title":"2. 注册 Channel 到 Selector","slug":"_2-注册-channel-到-selector","link":"#_2-注册-channel-到-selector","children":[]},{"level":3,"title":"3. 轮询查询就绪操作","slug":"_3-轮询查询就绪操作","link":"#_3-轮询查询就绪操作","children":[]}]},{"level":2,"title":"1.3 NIO 编程步骤","slug":"_1-3-nio-编程步骤","link":"#_1-3-nio-编程步骤","children":[]},{"level":2,"title":"1.4 示例代码","slug":"_1-4-示例代码","link":"#_1-4-示例代码","children":[{"level":3,"title":"1、服务端代码","slug":"_1、服务端代码","link":"#_1、服务端代码","children":[]},{"level":3,"title":"2、客户端代码","slug":"_2、客户端代码","link":"#_2、客户端代码","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":8.1,"words":2431},"filePathRelative":"notes/javacore/nio/第5章_Java NIO（Selector）.md","localizedDate":"2023年5月31日"}');export{e as data};
