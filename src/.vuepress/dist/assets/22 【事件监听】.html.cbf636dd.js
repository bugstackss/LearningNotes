const e=JSON.parse('{"key":"v-8b8a31f4","path":"/web/javascript/22%20%E3%80%90%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E3%80%91.html","title":"22 【事件监听】","lang":"zh-CN","frontmatter":{"title":"22 【事件监听】","icon":"javascript","category":["javascript"],"tag":["javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"DOM 允许我们书写 JavaScript 代码以让 HTML 元素作出反应。 什么是 “事件”：用户与网页的交互动作。 “监听” 顾名思义，就是让计算机随时能够发现这个事件发生了，从而执行程序员预先编写好的一些程序。 设置事件监听的方法主要有 onxxx 和 addEventListener() 两种，二者的区别将在 “事件传播” 一课中介绍。 原始...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/javascript/22%20%E3%80%90%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E3%80%91.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"22 【事件监听】"}],["meta",{"property":"og:description","content":"DOM 允许我们书写 JavaScript 代码以让 HTML 元素作出反应。 什么是 “事件”：用户与网页的交互动作。 “监听” 顾名思义，就是让计算机随时能够发现这个事件发生了，从而执行程序员预先编写好的一些程序。 设置事件监听的方法主要有 onxxx 和 addEventListener() 两种，二者的区别将在 “事件传播” 一课中介绍。 原始..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"2.1 监听函数","slug":"_2-1-监听函数","link":"#_2-1-监听函数","children":[{"level":3,"title":"2.1.1 HTML 的 on- 属性","slug":"_2-1-1-html-的-on-属性","link":"#_2-1-1-html-的-on-属性","children":[]},{"level":3,"title":"2.1.2 元素节点的事件属性","slug":"_2-1-2-元素节点的事件属性","link":"#_2-1-2-元素节点的事件属性","children":[]},{"level":3,"title":"2.1.3 EventTarget.addEventListener()","slug":"_2-1-3-eventtarget-addeventlistener","link":"#_2-1-3-eventtarget-addeventlistener","children":[]},{"level":3,"title":"2.1.4 小结","slug":"_2-1-4-小结","link":"#_2-1-4-小结","children":[]}]},{"level":2,"title":"2.2 this 的指向","slug":"_2-2-this-的指向","link":"#_2-2-this-的指向","children":[]},{"level":2,"title":"3.1 概述","slug":"_3-1-概述","link":"#_3-1-概述","children":[]},{"level":2,"title":"3.2 EventTarget.addEventListener()","slug":"_3-2-eventtarget-addeventlistener","link":"#_3-2-eventtarget-addeventlistener","children":[]},{"level":2,"title":"3.3 EventTarget.removeEventListener()","slug":"_3-3-eventtarget-removeeventlistener","link":"#_3-3-eventtarget-removeeventlistener","children":[]},{"level":2,"title":"3.4 EventTarget.dispatchEvent()","slug":"_3-4-eventtarget-dispatchevent","link":"#_3-4-eventtarget-dispatchevent","children":[]},{"level":2,"title":"4.1 常见的鼠标事件监听","slug":"_4-1-常见的鼠标事件监听","link":"#_4-1-常见的鼠标事件监听","children":[]},{"level":2,"title":"4.2 常见的键盘事件监听","slug":"_4-2-常见的键盘事件监听","link":"#_4-2-常见的键盘事件监听","children":[]},{"level":2,"title":"4.3 常见的表单事件监听","slug":"_4-3-常见的表单事件监听","link":"#_4-3-常见的表单事件监听","children":[]},{"level":2,"title":"4.6 常见的页面事件监听","slug":"_4-6-常见的页面事件监听","link":"#_4-6-常见的页面事件监听","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":8.89,"words":2667},"filePathRelative":"web/javascript/22 【事件监听】.md","localizedDate":"2023年5月31日"}');export{e as data};
