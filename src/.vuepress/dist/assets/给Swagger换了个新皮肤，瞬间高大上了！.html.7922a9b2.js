import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as p,d as n,e as a,b as c,a as s,r as i}from"./app.9b10ba0a.js";const l={},u=s(`<p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/1737177a64d41711~tplv-t2oaga2asx-zoom-crop-mark:1512:1512:1512:851.awebp" alt="给Swagger换了个新皮肤，瞬间高大上了！"></p><h2 id="摘要" tabindex="-1"><a class="header-anchor" href="#摘要" aria-hidden="true">#</a> 摘要</h2><p>Swagger作为一款API文档生成工具，虽然功能已经很完善了，但是还是有些不足的地方。偶然发现knife4j弥补了这些不足，赋予了Swagger更多的功能，今天我们来讲下它的使用方法。</p><h2 id="knife4j简介" tabindex="-1"><a class="header-anchor" href="#knife4j简介" aria-hidden="true">#</a> knife4j简介</h2><p>knife4j是springfox-swagger的增强UI实现，为Java开发者在使用Swagger的时候，提供了简洁、强大的接口文档体验。knife4j完全遵循了springfox-swagger中的使用方式，并在此基础上做了增强功能，如果你用过Swagger，你就可以无缝切换到knife4j。</p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><blockquote><p>接下来我们来介绍下如何在SpringBoot中使用knife4j，仅需两步即可！</p></blockquote><ul><li>在pom.xml中增加knife4j的相关依赖；</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--整合Knife4j--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.xiaoymin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>knife4j-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在Swagger2Config中增加一个@EnableKnife4j注解，该注解可以开启knife4j的增强功能；</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Swagger2API文档的配置
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableSwagger2</span>
<span class="token annotation punctuation">@EnableKnife4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Swagger2Config</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),r={href:"https://link.juejin.cn/?target=http%3A%2F%2Flocalhost%3A8088%2Fdoc.html",title:"http://localhost:8088/doc.html",target:"_blank",rel:"noopener noreferrer"},d=s(`<p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/173717630ea2df3f~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h2 id="功能特点" tabindex="-1"><a class="header-anchor" href="#功能特点" aria-hidden="true">#</a> 功能特点</h2><blockquote><p>接下来我们对比下Swagger，看看使用knife4j和它有啥不同之处！</p></blockquote><h3 id="json功能增强" tabindex="-1"><a class="header-anchor" href="#json功能增强" aria-hidden="true">#</a> JSON功能增强</h3><blockquote><p>平时一直使用Swagger，但是Swagger的JSON支持一直不是很好，JSON不能折叠，太长没法看，传JSON格式参数时，没有参数校验功能。这些痛点，在knife4j上都得到了解决。</p></blockquote><ul><li>返回结果集支持折叠，方便查看；</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/173717630eeda0a1~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>请求参数有JSON校验功能。</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/17371763135991bc~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="登录认证" tabindex="-1"><a class="header-anchor" href="#登录认证" aria-hidden="true">#</a> 登录认证</h3><blockquote><p>knife4j也支持在头部添加Token，用于登录认证使用。</p></blockquote><ul><li>首先在<code>Authorize</code>功能中添加登录返回的Token；</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/1737176313aeae53~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>之后在每个接口中就可以看到已经在请求头中携带了Token信息。</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/1737176315cdfd58~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="离线文档" tabindex="-1"><a class="header-anchor" href="#离线文档" aria-hidden="true">#</a> 离线文档</h3><blockquote><p>knife4j支持导出离线文档，方便发送给别人，支持Markdown格式。</p></blockquote><ul><li>直接选择<code>文档管理-&gt;离线文档</code>功能，然后选择<code>下载Markdown</code>即可；</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/17371763168356a6~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>我们来查看下导出的Markdown离线文档，还是很详细的。</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/173717633cf0716b~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="全局参数" tabindex="-1"><a class="header-anchor" href="#全局参数" aria-hidden="true">#</a> 全局参数</h3><blockquote><p>knife4j支持临时设置全局参数，支持两种类型query(表单)、header(请求头)。</p></blockquote><ul><li>比如我们想要在所有请求头中加入一个参数appType来区分是android还是ios调用，可以在全局参数中添加；</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/173717633a08ef99~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>此时再调用接口时，就会包含<code>appType</code>这个请求头了。</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/173717633fec30ef~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="忽略参数属性" tabindex="-1"><a class="header-anchor" href="#忽略参数属性" aria-hidden="true">#</a> 忽略参数属性</h3><blockquote><p>有时候我们创建和修改的接口会使用同一个对象作为请求参数，但是我们创建的时候并不需要id，而修改的时候会需要id，此时我们可以忽略id这个属性。</p></blockquote><ul><li>比如这里的创建商品接口，id、商品数量、商品评论数量都可以让后台接口生成无需传递，可以使用knife4j提供的<code>@ApiOperationSupport</code>注解来忽略这些属性；</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 品牌管理Controller
 * Created by macro on 2019/4/19.
 */</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>tags <span class="token operator">=</span> <span class="token string">&quot;PmsBrandController&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;商品品牌管理&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Controller</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/brand&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PmsBrandController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">PmsBrandService</span> brandService<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> <span class="token constant">LOGGER</span> <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">PmsBrandController</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;添加品牌&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ApiOperationSupport</span><span class="token punctuation">(</span>ignoreParameters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;productCount&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;productCommentCount&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/create&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ResponseBody</span>
    <span class="token keyword">public</span> <span class="token class-name">CommonResult</span> <span class="token function">createBrand</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">PmsBrand</span> pmsBrand<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CommonResult</span> commonResult<span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> brandService<span class="token punctuation">.</span><span class="token function">createBrand</span><span class="token punctuation">(</span>pmsBrand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            commonResult <span class="token operator">=</span> <span class="token class-name">CommonResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>pmsBrand<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;createBrand success:{}&quot;</span><span class="token punctuation">,</span> pmsBrand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            commonResult <span class="token operator">=</span> <span class="token class-name">CommonResult</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span><span class="token string">&quot;操作失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token constant">LOGGER</span><span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;createBrand failed:{}&quot;</span><span class="token punctuation">,</span> pmsBrand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> commonResult<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>此时查看接口文档时，发现这三个属性已经消失，这样前端开发查看接口文档时就不会觉得你定义无用参数了，是不很很好的功能！</li></ul><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/21/17371763446c4c88~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p>`,33);function k(m,g){const t=i("ExternalLinkIcon");return o(),p("div",null,[u,n("ul",null,[n("li",null,[a("运行我们的SpringBoot应用，访问API文档地址即可查看："),n("a",r,[a("http://localhost:8088/doc.html"),c(t)])])]),d])}const h=e(l,[["render",k],["__file","给Swagger换了个新皮肤，瞬间高大上了！.html.vue"]]);export{h as default};
