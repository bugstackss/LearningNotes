const t=JSON.parse('{"key":"v-792e5060","path":"/web/ts/11.%20%E7%B1%BB%E5%9E%8B%E6%96%AD%E8%A8%80.html","title":"类型断言","lang":"zh-CN","frontmatter":{"title":"类型断言","category":["ts"],"tag":["typescript","javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"类型断言（Type Assertion）可以用来手动指定一个值的类型。 语法 或 在 tsx 语法（React 的 jsx 语法的 ts 版）中必须使用前者，即 值 as 类型。 形如  的语法在 tsx 中表示的是一个 ReactNode，在 ts 中除了表示类型断言之外，也可能是表示一个泛型 (https://ts.xcatliu.com/adva...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/ts/11.%20%E7%B1%BB%E5%9E%8B%E6%96%AD%E8%A8%80.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"类型断言"}],["meta",{"property":"og:description","content":"类型断言（Type Assertion）可以用来手动指定一个值的类型。 语法 或 在 tsx 语法（React 的 jsx 语法的 ts 版）中必须使用前者，即 值 as 类型。 形如  的语法在 tsx 中表示的是一个 ReactNode，在 ts 中除了表示类型断言之外，也可能是表示一个泛型 (https://ts.xcatliu.com/adva..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"类型断言的用途","slug":"类型断言的用途","link":"#类型断言的用途","children":[{"level":3,"title":"将一个联合类型断言为其中一个类型","slug":"将一个联合类型断言为其中一个类型","link":"#将一个联合类型断言为其中一个类型","children":[]},{"level":3,"title":"将一个父类断言为更加具体的子类","slug":"将一个父类断言为更加具体的子类","link":"#将一个父类断言为更加具体的子类","children":[]},{"level":3,"title":"将任何一个类型断言为 any","slug":"将任何一个类型断言为-any","link":"#将任何一个类型断言为-any","children":[]},{"level":3,"title":"将 any 断言为一个具体的类型","slug":"将-any-断言为一个具体的类型","link":"#将-any-断言为一个具体的类型","children":[]}]},{"level":2,"title":"类型断言的限制","slug":"类型断言的限制","link":"#类型断言的限制","children":[]},{"level":2,"title":"双重断言","slug":"双重断言","link":"#双重断言","children":[]},{"level":2,"title":"类型断言 vs 类型转换","slug":"类型断言-vs-类型转换","link":"#类型断言-vs-类型转换","children":[]},{"level":2,"title":"类型断言 vs 类型声明","slug":"类型断言-vs-类型声明","link":"#类型断言-vs-类型声明","children":[]},{"level":2,"title":"类型断言 vs 泛型","slug":"类型断言-vs-泛型","link":"#类型断言-vs-泛型","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":13.68,"words":4104},"filePathRelative":"web/ts/11. 类型断言.md","localizedDate":"2023年5月31日"}');export{t as data};
