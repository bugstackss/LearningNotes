const e=JSON.parse('{"key":"v-6bea8ec2","path":"/notes/db/mysql_pro/%E7%AC%AC14%E7%AB%A0_MySQL%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97.html","title":"第14章_MySQL事务日志","lang":"zh-CN","frontmatter":{"title":"第14章_MySQL事务日志","category":["mysql"],"tag":["mysql","SQL","关系型数据库"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"事务有4种特性：原子性、一致性、隔离性和持久性。那么事务的四种特性到底是基于什么机制实现呢？ 事务的隔离性由 锁机制 实现。; 而事务的原子性、一致性和持久性由事务的 redo 日志和undo 日志来保证。; REDO LOG 称为 重做日志 ，提供再写入操作，恢复提交事务修改的页操作，用来保证事务的持久性。; UNDO LOG 称为 回滚日志 ，回滚...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/db/mysql_pro/%E7%AC%AC14%E7%AB%A0_MySQL%E4%BA%8B%E5%8A%A1%E6%97%A5%E5%BF%97.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"第14章_MySQL事务日志"}],["meta",{"property":"og:description","content":"事务有4种特性：原子性、一致性、隔离性和持久性。那么事务的四种特性到底是基于什么机制实现呢？ 事务的隔离性由 锁机制 实现。; 而事务的原子性、一致性和持久性由事务的 redo 日志和undo 日志来保证。; REDO LOG 称为 重做日志 ，提供再写入操作，恢复提交事务修改的页操作，用来保证事务的持久性。; UNDO LOG 称为 回滚日志 ，回滚..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"第14章_MySQL事务日志"}],["meta",{"property":"article:tag","content":"mysql"}],["meta",{"property":"article:tag","content":"SQL"}],["meta",{"property":"article:tag","content":"关系型数据库"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"1. redo日志","slug":"_1-redo日志","link":"#_1-redo日志","children":[{"level":3,"title":"1.1 为什么需要REDO日志","slug":"_1-1-为什么需要redo日志","link":"#_1-1-为什么需要redo日志","children":[]},{"level":3,"title":"1.2 REDO日志的好处、特点","slug":"_1-2-redo日志的好处、特点","link":"#_1-2-redo日志的好处、特点","children":[]},{"level":3,"title":"1.3 redo的组成","slug":"_1-3-redo的组成","link":"#_1-3-redo的组成","children":[]},{"level":3,"title":"1.4.redo整体流程","slug":"_1-4-redo整体流程","link":"#_1-4-redo整体流程","children":[]},{"level":3,"title":"1.5 redo log的刷盘策略","slug":"_1-5-redo-log的刷盘策略","link":"#_1-5-redo-log的刷盘策略","children":[]},{"level":3,"title":"1.6 不同刷盘策略演示","slug":"_1-6-不同刷盘策略演示","link":"#_1-6-不同刷盘策略演示","children":[]},{"level":3,"title":"1.7 写入redo log buffer 过程","slug":"_1-7-写入redo-log-buffer-过程","link":"#_1-7-写入redo-log-buffer-过程","children":[]},{"level":3,"title":"1.8 redo log file","slug":"_1-8-redo-log-file","link":"#_1-8-redo-log-file","children":[]},{"level":3,"title":"1.9 redo log小结","slug":"_1-9-redo-log小结","link":"#_1-9-redo-log小结","children":[]}]},{"level":2,"title":"2. Undo日志","slug":"_2-undo日志","link":"#_2-undo日志","children":[{"level":3,"title":"2.1 如何理解Undo日志","slug":"_2-1-如何理解undo日志","link":"#_2-1-如何理解undo日志","children":[]},{"level":3,"title":"2.2 Undo日志的作用","slug":"_2-2-undo日志的作用","link":"#_2-2-undo日志的作用","children":[]},{"level":3,"title":"2.3 undo的存储结构","slug":"_2-3-undo的存储结构","link":"#_2-3-undo的存储结构","children":[]},{"level":3,"title":"2.4 undo的类型","slug":"_2-4-undo的类型","link":"#_2-4-undo的类型","children":[]},{"level":3,"title":"2.5 undo log的生命周期","slug":"_2-5-undo-log的生命周期","link":"#_2-5-undo-log的生命周期","children":[]},{"level":3,"title":"2.6 小结","slug":"_2-6-小结","link":"#_2-6-小结","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":31.83,"words":9549},"filePathRelative":"notes/db/mysql_pro/第14章_MySQL事务日志.md","localizedDate":"2023年5月31日"}');export{e as data};
