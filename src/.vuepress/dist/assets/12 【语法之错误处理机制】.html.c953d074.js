const e=JSON.parse('{"key":"v-c27323c8","path":"/web/javascript/12%20%E3%80%90%E8%AF%AD%E6%B3%95%E4%B9%8B%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6%E3%80%91.html","title":"12 【语法之错误处理机制】","lang":"zh-CN","frontmatter":{"title":"12 【语法之错误处理机制】","icon":"javascript","category":["javascript"],"tag":["javascript"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"错误处理机制是指预估代码执行过程中可能发生的错误，然后最大程度的避免错误的发生导致整个程序无法继续运行 15.1 Error 实例对象 JavaScript 解析或运行时，一旦发生错误，引擎就会抛出一个错误对象。JavaScript 原生提供Error构造函数，所有抛出的错误都是这个构造函数的实例。 上面代码中，我们调用Error()构造函数，生成一个...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/javascript/12%20%E3%80%90%E8%AF%AD%E6%B3%95%E4%B9%8B%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6%E3%80%91.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"12 【语法之错误处理机制】"}],["meta",{"property":"og:description","content":"错误处理机制是指预估代码执行过程中可能发生的错误，然后最大程度的避免错误的发生导致整个程序无法继续运行 15.1 Error 实例对象 JavaScript 解析或运行时，一旦发生错误，引擎就会抛出一个错误对象。JavaScript 原生提供Error构造函数，所有抛出的错误都是这个构造函数的实例。 上面代码中，我们调用Error()构造函数，生成一个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"15.1 Error 实例对象","slug":"_15-1-error-实例对象","link":"#_15-1-error-实例对象","children":[]},{"level":2,"title":"15.2 原生错误类型","slug":"_15-2-原生错误类型","link":"#_15-2-原生错误类型","children":[{"level":3,"title":"15.2.1 SyntaxError 对象","slug":"_15-2-1-syntaxerror-对象","link":"#_15-2-1-syntaxerror-对象","children":[]},{"level":3,"title":"15.2.2 ReferenceError 对象","slug":"_15-2-2-referenceerror-对象","link":"#_15-2-2-referenceerror-对象","children":[]},{"level":3,"title":"15.2.3 RangeError 对象","slug":"_15-2-3-rangeerror-对象","link":"#_15-2-3-rangeerror-对象","children":[]},{"level":3,"title":"15.2.4 TypeError 对象","slug":"_15-2-4-typeerror-对象","link":"#_15-2-4-typeerror-对象","children":[]},{"level":3,"title":"15.2.5 URIError 对象","slug":"_15-2-5-urierror-对象","link":"#_15-2-5-urierror-对象","children":[]},{"level":3,"title":"15.2.6 EvalError 对象","slug":"_15-2-6-evalerror-对象","link":"#_15-2-6-evalerror-对象","children":[]},{"level":3,"title":"15.2.7 总结","slug":"_15-2-7-总结","link":"#_15-2-7-总结","children":[]}]},{"level":2,"title":"15.3 自定义错误","slug":"_15-3-自定义错误","link":"#_15-3-自定义错误","children":[]},{"level":2,"title":"15.4 throw 语句","slug":"_15-4-throw-语句","link":"#_15-4-throw-语句","children":[]},{"level":2,"title":"15.5 try...catch 结构","slug":"_15-5-try-catch-结构","link":"#_15-5-try-catch-结构","children":[]},{"level":2,"title":"15.6 finally 代码块","slug":"_15-6-finally-代码块","link":"#_15-6-finally-代码块","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":9.9,"words":2971},"filePathRelative":"web/javascript/12 【语法之错误处理机制】.md","localizedDate":"2023年5月31日"}');export{e as data};
