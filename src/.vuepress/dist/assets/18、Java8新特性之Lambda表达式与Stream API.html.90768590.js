const e=JSON.parse('{"key":"v-61c9f7de","path":"/notes/javacore/java/18%E3%80%81Java8%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BLambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8EStream%20API.html","title":"18、Java8新特性之Lambda表达式与Stream API","lang":"zh-CN","frontmatter":{"title":"18、Java8新特性之Lambda表达式与Stream API","category":["Java"],"tag":["Java"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"01、Java8概述 Java 8 (又称为jdk 1.8) 是Java 语言开发的一个主要版本。; Java 8 是oracle公司于2014年3月发布，可以看成是自Java 5 以来最具革命性的版本。Java 8为Java语言、编译器、类库、开发工具与JVM带来了大量新特性。; 22ec7f3f-7185-4530-93ee-a2bf546bc81...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/javacore/java/18%E3%80%81Java8%E6%96%B0%E7%89%B9%E6%80%A7%E4%B9%8BLambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8EStream%20API.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"18、Java8新特性之Lambda表达式与Stream API"}],["meta",{"property":"og:description","content":"01、Java8概述 Java 8 (又称为jdk 1.8) 是Java 语言开发的一个主要版本。; Java 8 是oracle公司于2014年3月发布，可以看成是自Java 5 以来最具革命性的版本。Java 8为Java语言、编译器、类库、开发工具与JVM带来了大量新特性。; 22ec7f3f-7185-4530-93ee-a2bf546bc81..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"18、Java8新特性之Lambda表达式与Stream API"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"01、Java8概述","slug":"_01、java8概述","link":"#_01、java8概述","children":[]},{"level":2,"title":"02、Java8新特性的好处","slug":"_02、java8新特性的好处","link":"#_02、java8新特性的好处","children":[]},{"level":2,"title":"03、并行流与串行流","slug":"_03、并行流与串行流","link":"#_03、并行流与串行流","children":[]},{"level":2,"title":"04、Lambda表达式","slug":"_04、lambda表达式","link":"#_04、lambda表达式","children":[{"level":3,"title":"4.1、Lambda表达式使用举例","slug":"_4-1、lambda表达式使用举例","link":"#_4-1、lambda表达式使用举例","children":[]},{"level":3,"title":"4.2、Lambda表达式语法的使用1","slug":"_4-2、lambda表达式语法的使用1","link":"#_4-2、lambda表达式语法的使用1","children":[]},{"level":3,"title":"4.3、Lambda表达式语法的使用2","slug":"_4-3、lambda表达式语法的使用2","link":"#_4-3、lambda表达式语法的使用2","children":[]}]},{"level":2,"title":"05、函数式(Functional)接口","slug":"_05、函数式-functional-接口","link":"#_05、函数式-functional-接口","children":[{"level":3,"title":"5.1、函数式接口的介绍","slug":"_5-1、函数式接口的介绍","link":"#_5-1、函数式接口的介绍","children":[]},{"level":3,"title":"5.2、Java内置的函数式接口介绍及使用举例","slug":"_5-2、java内置的函数式接口介绍及使用举例","link":"#_5-2、java内置的函数式接口介绍及使用举例","children":[]}]},{"level":2,"title":"06、方法引用与构造器引用","slug":"_06、方法引用与构造器引用","link":"#_06、方法引用与构造器引用","children":[{"level":3,"title":"6.1、方法引用的使用情况1","slug":"_6-1、方法引用的使用情况1","link":"#_6-1、方法引用的使用情况1","children":[]},{"level":3,"title":"6.2、方法引用的使用情况2","slug":"_6-2、方法引用的使用情况2","link":"#_6-2、方法引用的使用情况2","children":[]},{"level":3,"title":"6.2、方法引用的使用情况3","slug":"_6-2、方法引用的使用情况3","link":"#_6-2、方法引用的使用情况3","children":[]},{"level":3,"title":"6.4、构造器引用与数组引用的使用","slug":"_6-4、构造器引用与数组引用的使用","link":"#_6-4、构造器引用与数组引用的使用","children":[]}]},{"level":2,"title":"07、强大的Stream API","slug":"_07、强大的stream-api","link":"#_07、强大的stream-api","children":[{"level":3,"title":"7.1、Stream API的概述","slug":"_7-1、stream-api的概述","link":"#_7-1、stream-api的概述","children":[]},{"level":3,"title":"7.2、Stream的实例化","slug":"_7-2、stream的实例化","link":"#_7-2、stream的实例化","children":[]},{"level":3,"title":"7.3、Stream的中间操作：筛选与切片","slug":"_7-3、stream的中间操作-筛选与切片","link":"#_7-3、stream的中间操作-筛选与切片","children":[]},{"level":3,"title":"7.4、Stream的中间操作：映射","slug":"_7-4、stream的中间操作-映射","link":"#_7-4、stream的中间操作-映射","children":[]},{"level":3,"title":"7.5、Stream的中间操作：排序","slug":"_7-5、stream的中间操作-排序","link":"#_7-5、stream的中间操作-排序","children":[]},{"level":3,"title":"7.6、Stream的终止操作：匹配与查找","slug":"_7-6、stream的终止操作-匹配与查找","link":"#_7-6、stream的终止操作-匹配与查找","children":[]},{"level":3,"title":"7.7、Stream的终止操作：归约","slug":"_7-7、stream的终止操作-归约","link":"#_7-7、stream的终止操作-归约","children":[]},{"level":3,"title":"7.8、Stream的终止操作：收集","slug":"_7-8、stream的终止操作-收集","link":"#_7-8、stream的终止操作-收集","children":[]}]},{"level":2,"title":"08、Optional类","slug":"_08、optional类","link":"#_08、optional类","children":[{"level":3,"title":"8.1、Optional类的介绍","slug":"_8-1、optional类的介绍","link":"#_8-1、optional类的介绍","children":[]},{"level":3,"title":"8.2、Optional类的使用举例","slug":"_8-2、optional类的使用举例","link":"#_8-2、optional类的使用举例","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":26.15,"words":7844},"filePathRelative":"notes/javacore/java/18、Java8新特性之Lambda表达式与Stream API.md","localizedDate":"2023年5月31日"}');export{e as data};
