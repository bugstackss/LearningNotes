const e=JSON.parse('{"key":"v-4ea5f2a1","path":"/notes/juc/%E5%8D%81%E4%B8%89%E3%80%81ThreadLocal%E3%80%81InheritableThreadLocal.html","title":"十三、ThreadLocal、InheritableThreadLocal","lang":"zh-CN","frontmatter":{"title":"十三、ThreadLocal、InheritableThreadLocal","category":["JUC","java"],"tag":["java","juc","并发编程"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"十三、ThreadLocal、InheritableThreadLocal 1、ThreadLocal简介 image20210927222129464 稍微翻译一下： ThreadLocal提供线程局部变量。这些变量与正常的变量不同，因为每一个线程在访问ThreadLocal实例的时候（通过其get或set方法）都有自己的、独立初始化的变量副本。Th...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/notes/juc/%E5%8D%81%E4%B8%89%E3%80%81ThreadLocal%E3%80%81InheritableThreadLocal.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"十三、ThreadLocal、InheritableThreadLocal"}],["meta",{"property":"og:description","content":"十三、ThreadLocal、InheritableThreadLocal 1、ThreadLocal简介 image20210927222129464 稍微翻译一下： ThreadLocal提供线程局部变量。这些变量与正常的变量不同，因为每一个线程在访问ThreadLocal实例的时候（通过其get或set方法）都有自己的、独立初始化的变量副本。Th..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Ragnarokoo.github.io/LearningNotes/"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"十三、ThreadLocal、InheritableThreadLocal"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"juc"}],["meta",{"property":"article:tag","content":"并发编程"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"十三、ThreadLocal、InheritableThreadLocal","slug":"十三、threadlocal、inheritablethreadlocal","link":"#十三、threadlocal、inheritablethreadlocal","children":[{"level":3,"title":"1、ThreadLocal简介","slug":"_1、threadlocal简介","link":"#_1、threadlocal简介","children":[]},{"level":3,"title":"2、永远的helloworld","slug":"_2、永远的helloworld","link":"#_2、永远的helloworld","children":[]},{"level":3,"title":"3、从阿里ThreadLocal规范开始","slug":"_3、从阿里threadlocal规范开始","link":"#_3、从阿里threadlocal规范开始","children":[]},{"level":3,"title":"4、ThreadLocal源码分析","slug":"_4、threadlocal源码分析","link":"#_4、threadlocal源码分析","children":[]},{"level":3,"title":"5、ThreadLocal内存泄露问题","slug":"_5、threadlocal内存泄露问题","link":"#_5、threadlocal内存泄露问题","children":[]},{"level":3,"title":"6、为什么要用弱引用?不用如何？","slug":"_6、为什么要用弱引用-不用如何","link":"#_6、为什么要用弱引用-不用如何","children":[]},{"level":3,"title":"7、最佳实践","slug":"_7、最佳实践","link":"#_7、最佳实践","children":[]},{"level":3,"title":"8、小总结","slug":"_8、小总结","link":"#_8、小总结","children":[]},{"level":3,"title":"9、ThreadLocal和InheritableThreadLocal","slug":"_9、threadlocal和inheritablethreadlocal","link":"#_9、threadlocal和inheritablethreadlocal","children":[]}]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":32.26,"words":9677},"filePathRelative":"notes/juc/十三、ThreadLocal、InheritableThreadLocal.md","localizedDate":"2023年5月31日"}');export{e as data};
