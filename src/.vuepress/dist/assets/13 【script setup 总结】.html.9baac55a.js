const e=JSON.parse('{"key":"v-2dae9381","path":"/web/vue/vue3/13%20%E3%80%90script%20setup%20%E6%80%BB%E7%BB%93%E3%80%91.html","title":"script setup 总结","lang":"zh-CN","frontmatter":{"title":"script setup 总结","category":["Vue3"],"tag":["Vue","javascript","渐进式框架"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"因为学习的时候，视频版本并没有一些新的语法糖，笔记是没有使用这些语法糖的，但是用法都会以补充的形式加进来。 在 setup() 函数中手动暴露大量的状态和方法非常繁琐。幸运的是，我们可以通过使用构建工具来简化该操作。当使用单文件组件（SFC）时，我们可以使用 来大幅度地简化代码。 是在单文件组件 (SFC) 中使用组合式 API 的编译时语法糖。当同时...","head":[["meta",{"property":"og:url","content":"https://Ragnarokoo.github.io/LearningNotes/web/vue/vue3/13%20%E3%80%90script%20setup%20%E6%80%BB%E7%BB%93%E3%80%91.html"}],["meta",{"property":"og:site_name","content":"📚全栈开发学习指南"}],["meta",{"property":"og:title","content":"script setup 总结"}],["meta",{"property":"og:description","content":"因为学习的时候，视频版本并没有一些新的语法糖，笔记是没有使用这些语法糖的，但是用法都会以补充的形式加进来。 在 setup() 函数中手动暴露大量的状态和方法非常繁琐。幸运的是，我们可以通过使用构建工具来简化该操作。当使用单文件组件（SFC）时，我们可以使用 来大幅度地简化代码。 是在单文件组件 (SFC) 中使用组合式 API 的编译时语法糖。当同时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-05-31T09:16:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:tag","content":"渐进式框架"}],["meta",{"property":"article:modified_time","content":"2023-05-31T09:16:41.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"1.基本语法","slug":"_1-基本语法","link":"#_1-基本语法","children":[]},{"level":2,"title":"2.顶层的绑定会被暴露给模板#","slug":"_2-顶层的绑定会被暴露给模板","link":"#_2-顶层的绑定会被暴露给模板","children":[]},{"level":2,"title":"3.响应式#","slug":"_3-响应式","link":"#_3-响应式","children":[]},{"level":2,"title":"4.使用组件#","slug":"_4-使用组件","link":"#_4-使用组件","children":[{"level":3,"title":"4.1 动态组件#","slug":"_4-1-动态组件","link":"#_4-1-动态组件","children":[]},{"level":3,"title":"4.2 递归组件#","slug":"_4-2-递归组件","link":"#_4-2-递归组件","children":[]},{"level":3,"title":"4.3 命名空间组件#","slug":"_4-3-命名空间组件","link":"#_4-3-命名空间组件","children":[]}]},{"level":2,"title":"5.使用自定义指令","slug":"_5-使用自定义指令","link":"#_5-使用自定义指令","children":[]},{"level":2,"title":"6.defineProps() 和 defineEmits()#","slug":"_6-defineprops-和-defineemits","link":"#_6-defineprops-和-defineemits","children":[]},{"level":2,"title":"7.defineExpose#","slug":"_7-defineexpose","link":"#_7-defineexpose","children":[]},{"level":2,"title":"8.useSlots() 和 useAttrs()#","slug":"_8-useslots-和-useattrs","link":"#_8-useslots-和-useattrs","children":[]},{"level":2,"title":"9.与普通的 <script> 一起使用#","slug":"_9-与普通的-script-一起使用","link":"#_9-与普通的-script-一起使用","children":[]},{"level":2,"title":"10.顶层 await#","slug":"_10-顶层-await","link":"#_10-顶层-await","children":[]},{"level":2,"title":"11.针对 TypeScript 的功能#","slug":"_11-针对-typescript-的功能","link":"#_11-针对-typescript-的功能","children":[{"level":3,"title":"11.1 针对类型的 props/emit 声明#","slug":"_11-1-针对类型的-props-emit-声明","link":"#_11-1-针对类型的-props-emit-声明","children":[]},{"level":3,"title":"11.2 使用类型声明时的默认 props 值#","slug":"_11-2-使用类型声明时的默认-props-值","link":"#_11-2-使用类型声明时的默认-props-值","children":[]}]},{"level":2,"title":"12.限制#","slug":"_12-限制","link":"#_12-限制","children":[]}],"git":{"createdTime":1685524601000,"updatedTime":1685524601000,"contributors":[{"name":"kirito","email":"2724964601@qq.com","commits":1}]},"readingTime":{"minutes":9.25,"words":2774},"filePathRelative":"web/vue/vue3/13 【script setup 总结】.md","localizedDate":"2023年5月31日"}');export{e as data};
