import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as l,d as e,e as a,b as i,a as p,r}from"./app.9b10ba0a.js";const n={},s=e("h2",{id:"摘要",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#摘要","aria-hidden":"true"},"#"),a(" 摘要")],-1),d={href:"https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrbKUJAhv6WorFWgDNUDWTg",title:"https://mp.weixin.qq.com/s/rbKUJAhv6WorFWgDNUDWTg",target:"_blank",rel:"noopener noreferrer"},b=p('<h2 id="yapi简介" tabindex="-1"><a class="header-anchor" href="#yapi简介" aria-hidden="true">#</a> YApi简介</h2><p>YApi是高效、易用、功能强大的API管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。YApi在Github上已累计获得了18K+Star，具有优秀的交互体验，YApi不仅提供了常用的接口管理功能，还提供了权限管理、Mock数据、Swagger数据导入等功能，总之功能很强大！</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h3><blockquote><p>本地部署YApi需要先安装nodejs和MongoDB，我们先把它们安装好。</p></blockquote>',5),u=e("code",null,"12.14.0",-1),h={href:"https://link.juejin.cn?target=https%3A%2F%2Fnodejs.org%2Fdist%2Fv12.14.0%2Fnode-v12.14.0-x64.msi",title:"https://nodejs.org/dist/v12.14.0/node-v12.14.0-x64.msi",target:"_blank",rel:"noopener noreferrer"},f={href:"https://link.juejin.cn?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FE8sDVWkxaLBdmZPj-6om2A",title:"https://mp.weixin.qq.com/s/E8sDVWkxaLBdmZPj-6om2A",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"4.2.5",-1),g=p(`<h3 id="安装yapi-cli" tabindex="-1"><a class="header-anchor" href="#安装yapi-cli" aria-hidden="true">#</a> 安装yapi-cli</h3><blockquote><p><code>yapi-cli</code>是YApi官方提供的安装工具，可以通过可视化界面来部署YApi服务，非常方便！</p></blockquote><ul><li>使用npm命令来安装<code>yapi-cli</code>：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> yapi-cli <span class="token parameter variable">--registry</span> https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>安装成功后控制台输出如下内容；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bda7a70e1124403e9669da4e86a77fb1~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>安装成功后使用<code>yapi server</code>命令来启动YApi的可视化部署界面。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yapi server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装yapi" tabindex="-1"><a class="header-anchor" href="#安装yapi" aria-hidden="true">#</a> 安装YApi</h3>`,9),k={href:"https://link.juejin.cn/?target=http%3A%2F%2Flocalhost%3A9090",title:"http://localhost:9090",target:"_blank",rel:"noopener noreferrer"},j=p(`<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/794bb2557d5a4f3c82b28e5509fe5fcb~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>安装完成后会输出如下信息，提示YApi的默认管理员账号密码及访问地址；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae3854abb41e42d3b593b3c418689ce0~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>进入YApi的安装目录，使用node命令启动YApi服务：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> vendors/server/app.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>启动成功后控制台输出信息如下；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/26e0ec3e684049fd9fe71f1aaacda7aa~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p>`,7),_=e("code",null,"admin@admin.com:ymfe.org",-1),v={href:"https://link.juejin.cn/?target=http%3A%2F%2Flocalhost%3A3000",title:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},w=p('<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ea969cc85db042efba625e5bd4c9fdc5~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><h3 id="从swagger导入数据" tabindex="-1"><a class="header-anchor" href="#从swagger导入数据" aria-hidden="true">#</a> 从Swagger导入数据</h3><ul><li>使用管理员账号登录成功后，先创建一个<code>mall-tiny-group</code>分组；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c9c4214bd325491b9f08a8741e9c0406~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>创建分组成功后，在该分组下点击<code>创建项目</code>，添加<code>mall-tiny-swagger</code>项目；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a096020eea7b470d8b5157a890ce96b3~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p>',7),y=e("code",null,"mall-tiny-swagger",-1),A={href:"https://link.juejin.cn/?target=http%3A%2F%2Flocalhost%3A8088%2Fswagger-ui%2F",title:"http://localhost:8088/swagger-ui/",target:"_blank",rel:"noopener noreferrer"},F=p('<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c40e8e4dd0e2475db139355c4d922ee5~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>选择好YApi的<code>数据管理</code>功能，配置好Swagger的api-docs路径，然后进行数据导入；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/523b987c1b044d8fbb0721f10e00f78a~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>至此Swagger中的API接口已成功导入到YApi，点击<code>接口</code>标签查看所有导入接口。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5a383ea391234949be513021365b4659~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="接口管理" tabindex="-1"><a class="header-anchor" href="#接口管理" aria-hidden="true">#</a> 接口管理</h3><ul><li>打开<code>添加商品</code>的接口看看，可以看到非常完善的接口文档信息，注释都有了；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4c173ed153c24ca7b70aefc060f5b2b7~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>来试试接口运行功能，我们会发现默认的接口请求地址并不符合我们的要求，需要在<code>环境配置</code>中设置；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b8f8767066ea498ab5de1be6d8a106ab~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p>',10),x={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FYMFE%2Fcross-request%2Farchive%2Fmaster.zip",title:"https://github.com/YMFE/cross-request/archive/master.zip",target:"_blank",rel:"noopener noreferrer"},z=p('<p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/02752075fae94ec3ab192336d1eff293~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>由于我们的部分接口在请求头中添加token才能访问，所以我们先调用登录接口获取token；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/725ef6e565e047cb9450a4c6818ac161~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>之后在<code>设置-&gt;环境配置</code>中添加Authorization头；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ff663bb27129499bb38c854226770c10~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>再次调用需要登录的接口，可以正常获取到数据，返回数据虽然格式化了，但是没有折叠功能，数据太长的话就不太好看了；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5a0ea8d702284465bf6d2e58455f8b02~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="mock功能" tabindex="-1"><a class="header-anchor" href="#mock功能" aria-hidden="true">#</a> Mock功能</h3><ul><li>在我们调用POST接口提交JSON数据时，默认Mock的JSON数据有点不太符合我们的要求；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cd60a9a6f38e45bf99942e2af27b718c~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>可以通过接口信息中的<code>编辑-&gt;高级设置</code>进行修改；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c146d68922794ec0a8c6608e4a1a3064~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>我们可以发现每一个接口信息中都有个Mock地址，当我们后台接口已经定义好格式，但是没有实现时，前端可以使用该地址来Mock数据进行调试；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a169bdc5bfde4733bb92dcca3ab2ad76~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>调用Mock地址可以获取到一些测试数据，数据取值返回可以通过上面的Mock设置自行修改；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cbd990b0f9f941839b64bc0100892af0~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="从swagger自动同步" tabindex="-1"><a class="header-anchor" href="#从swagger自动同步" aria-hidden="true">#</a> 从Swagger自动同步</h3><ul><li>当我们的接口修改了，API文档如何同步呢，我们可以通过<code>设置-&gt;Swagger自动同步</code>来开启自动同步功能，有三种数据同步模式可以选择；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ffff94a6e8c14489aca7c1a88fbbd05d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h3 id="权限管理" tabindex="-1"><a class="header-anchor" href="#权限管理" aria-hidden="true">#</a> 权限管理</h3><blockquote><p>如果有新的成员加入进来，需要查看API文档怎么办？</p></blockquote><ul><li>首先可以通过注册界面注册一个成员账号，此处账号为<code>test@qq.com:123456</code>；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe5ec76e10874e9abcfb7ffa08f3690d~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>之后使用管理员账号登录，然后通过<code>成员列表-&gt;添加成员</code>，将用户添加到相应分组；</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b1bae36ecb73442b8b82ffe7fb055e10~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><ul><li>最后使用成员账号登录即可访问相应API文档了。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cd3e9c1a04494b6b9d853c35641f0bec~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp" alt=""></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>YApi结合Swagger使用果然很强大！之前使用Postman结合Swagger使用时，文档查看、自动同步的问题都得到了解决，为了保证我们API文档访问的安全性还提供了权限管理功能。当API数据格式定义好后，Mock功能让前端无需后台实现也可以调试接口。不过对于JSON格式支持有点偏弱，要是能对JSON数据进行折叠显示就更好了！</p>',29);function Y(S,q){const t=r("ExternalLinkIcon");return o(),l("div",null,[s,e("p",null,[a("Swagger经常被人吐槽界面不够好看、功能不够强大，其实有很多工具可以和Swagger结合使用，结合之后就会变得非常好用。之前写过一篇文章"),e("a",d,[a("《Swagger界面丑、功能弱怎么破？用Postman增强下就给力了！》"),i(t)]),a("，有朋友留言说YApi也很好用。最近体验了一把YApi，发现确实不错，推荐给大家！")]),b,e("ul",null,[e("li",null,[e("p",null,[a("安装nodejs，直接下载安装包双击安装即可，这里安装的是"),u,a("版本，下载地址："),e("a",h,[a("nodejs.org/dist/v12.14…"),i(t)]),a(";")])]),e("li",null,[e("p",null,[a("安装MongoDB，参考"),e("a",f,[a("《MongoDB快速入门，掌握这些刚刚好！》"),i(t)]),a("中的安装即可，这里安装的是"),m,a("版本。")])])]),g,e("ul",null,[e("li",null,[a("通过可视化部署界面安装YApi服务，访问地址："),e("a",k,[a("http://localhost:9090"),i(t)])])]),j,e("ul",null,[e("li",null,[a("通过页面访问Yapi，默认账号密码为"),_,a("，访问地址："),e("a",v,[a("http://localhost:3000"),i(t)])])]),w,e("ul",null,[e("li",null,[a("之后启动我们之前的"),y,a("项目，启动成功后Swagger接口文档访问地址："),e("a",A,[a("http://localhost:8088/swagger-ui/"),i(t)])])]),F,e("ul",null,[e("li",null,[a("由于是跨域请求，Chrome浏览器需要安装跨域请求插件，下载地址："),e("a",x,[a("github.com/YMFE/cross-…"),i(t)])])]),z])}const N=c(n,[["render",Y],["__file","当Swagger遇上YApi，瞬间高大上了！.html.vue"]]);export{N as default};
